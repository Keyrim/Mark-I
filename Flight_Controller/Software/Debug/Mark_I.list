
Mark_I.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000090e8  08000188  08000188  00010188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000004d0  08009270  08009270  00019270  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08009740  08009740  00020158  2**0
                  CONTENTS
  4 .ARM          00000008  08009740  08009740  00019740  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08009748  08009748  00020158  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08009748  08009748  00019748  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800974c  0800974c  0001974c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000158  20000000  08009750  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020158  2**0
                  CONTENTS
 10 .bss          0000108c  20000158  20000158  00020158  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  200011e4  200011e4  00020158  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00020158  2**0
                  CONTENTS, READONLY
 13 .debug_info   00020ea8  00000000  00000000  00020188  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000041d2  00000000  00000000  00041030  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000012e0  00000000  00000000  00045208  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00001140  00000000  00000000  000464e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00023ac8  00000000  00000000  00047628  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0001d98d  00000000  00000000  0006b0f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000c4e45  00000000  00000000  00088a7d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  0014d8c2  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00004df4  00000000  00000000  0014d918  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	; (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	; (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	; (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000158 	.word	0x20000158
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08009258 	.word	0x08009258

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	; (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	; (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	; (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	2000015c 	.word	0x2000015c
 80001c4:	08009258 	.word	0x08009258

080001c8 <__aeabi_uldivmod>:
 80001c8:	b953      	cbnz	r3, 80001e0 <__aeabi_uldivmod+0x18>
 80001ca:	b94a      	cbnz	r2, 80001e0 <__aeabi_uldivmod+0x18>
 80001cc:	2900      	cmp	r1, #0
 80001ce:	bf08      	it	eq
 80001d0:	2800      	cmpeq	r0, #0
 80001d2:	bf1c      	itt	ne
 80001d4:	f04f 31ff 	movne.w	r1, #4294967295
 80001d8:	f04f 30ff 	movne.w	r0, #4294967295
 80001dc:	f000 b96e 	b.w	80004bc <__aeabi_idiv0>
 80001e0:	f1ad 0c08 	sub.w	ip, sp, #8
 80001e4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80001e8:	f000 f806 	bl	80001f8 <__udivmoddi4>
 80001ec:	f8dd e004 	ldr.w	lr, [sp, #4]
 80001f0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80001f4:	b004      	add	sp, #16
 80001f6:	4770      	bx	lr

080001f8 <__udivmoddi4>:
 80001f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80001fc:	9d08      	ldr	r5, [sp, #32]
 80001fe:	4604      	mov	r4, r0
 8000200:	468c      	mov	ip, r1
 8000202:	2b00      	cmp	r3, #0
 8000204:	f040 8083 	bne.w	800030e <__udivmoddi4+0x116>
 8000208:	428a      	cmp	r2, r1
 800020a:	4617      	mov	r7, r2
 800020c:	d947      	bls.n	800029e <__udivmoddi4+0xa6>
 800020e:	fab2 f282 	clz	r2, r2
 8000212:	b142      	cbz	r2, 8000226 <__udivmoddi4+0x2e>
 8000214:	f1c2 0020 	rsb	r0, r2, #32
 8000218:	fa24 f000 	lsr.w	r0, r4, r0
 800021c:	4091      	lsls	r1, r2
 800021e:	4097      	lsls	r7, r2
 8000220:	ea40 0c01 	orr.w	ip, r0, r1
 8000224:	4094      	lsls	r4, r2
 8000226:	ea4f 4817 	mov.w	r8, r7, lsr #16
 800022a:	0c23      	lsrs	r3, r4, #16
 800022c:	fbbc f6f8 	udiv	r6, ip, r8
 8000230:	fa1f fe87 	uxth.w	lr, r7
 8000234:	fb08 c116 	mls	r1, r8, r6, ip
 8000238:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800023c:	fb06 f10e 	mul.w	r1, r6, lr
 8000240:	4299      	cmp	r1, r3
 8000242:	d909      	bls.n	8000258 <__udivmoddi4+0x60>
 8000244:	18fb      	adds	r3, r7, r3
 8000246:	f106 30ff 	add.w	r0, r6, #4294967295
 800024a:	f080 8119 	bcs.w	8000480 <__udivmoddi4+0x288>
 800024e:	4299      	cmp	r1, r3
 8000250:	f240 8116 	bls.w	8000480 <__udivmoddi4+0x288>
 8000254:	3e02      	subs	r6, #2
 8000256:	443b      	add	r3, r7
 8000258:	1a5b      	subs	r3, r3, r1
 800025a:	b2a4      	uxth	r4, r4
 800025c:	fbb3 f0f8 	udiv	r0, r3, r8
 8000260:	fb08 3310 	mls	r3, r8, r0, r3
 8000264:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000268:	fb00 fe0e 	mul.w	lr, r0, lr
 800026c:	45a6      	cmp	lr, r4
 800026e:	d909      	bls.n	8000284 <__udivmoddi4+0x8c>
 8000270:	193c      	adds	r4, r7, r4
 8000272:	f100 33ff 	add.w	r3, r0, #4294967295
 8000276:	f080 8105 	bcs.w	8000484 <__udivmoddi4+0x28c>
 800027a:	45a6      	cmp	lr, r4
 800027c:	f240 8102 	bls.w	8000484 <__udivmoddi4+0x28c>
 8000280:	3802      	subs	r0, #2
 8000282:	443c      	add	r4, r7
 8000284:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000288:	eba4 040e 	sub.w	r4, r4, lr
 800028c:	2600      	movs	r6, #0
 800028e:	b11d      	cbz	r5, 8000298 <__udivmoddi4+0xa0>
 8000290:	40d4      	lsrs	r4, r2
 8000292:	2300      	movs	r3, #0
 8000294:	e9c5 4300 	strd	r4, r3, [r5]
 8000298:	4631      	mov	r1, r6
 800029a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800029e:	b902      	cbnz	r2, 80002a2 <__udivmoddi4+0xaa>
 80002a0:	deff      	udf	#255	; 0xff
 80002a2:	fab2 f282 	clz	r2, r2
 80002a6:	2a00      	cmp	r2, #0
 80002a8:	d150      	bne.n	800034c <__udivmoddi4+0x154>
 80002aa:	1bcb      	subs	r3, r1, r7
 80002ac:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80002b0:	fa1f f887 	uxth.w	r8, r7
 80002b4:	2601      	movs	r6, #1
 80002b6:	fbb3 fcfe 	udiv	ip, r3, lr
 80002ba:	0c21      	lsrs	r1, r4, #16
 80002bc:	fb0e 331c 	mls	r3, lr, ip, r3
 80002c0:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80002c4:	fb08 f30c 	mul.w	r3, r8, ip
 80002c8:	428b      	cmp	r3, r1
 80002ca:	d907      	bls.n	80002dc <__udivmoddi4+0xe4>
 80002cc:	1879      	adds	r1, r7, r1
 80002ce:	f10c 30ff 	add.w	r0, ip, #4294967295
 80002d2:	d202      	bcs.n	80002da <__udivmoddi4+0xe2>
 80002d4:	428b      	cmp	r3, r1
 80002d6:	f200 80e9 	bhi.w	80004ac <__udivmoddi4+0x2b4>
 80002da:	4684      	mov	ip, r0
 80002dc:	1ac9      	subs	r1, r1, r3
 80002de:	b2a3      	uxth	r3, r4
 80002e0:	fbb1 f0fe 	udiv	r0, r1, lr
 80002e4:	fb0e 1110 	mls	r1, lr, r0, r1
 80002e8:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 80002ec:	fb08 f800 	mul.w	r8, r8, r0
 80002f0:	45a0      	cmp	r8, r4
 80002f2:	d907      	bls.n	8000304 <__udivmoddi4+0x10c>
 80002f4:	193c      	adds	r4, r7, r4
 80002f6:	f100 33ff 	add.w	r3, r0, #4294967295
 80002fa:	d202      	bcs.n	8000302 <__udivmoddi4+0x10a>
 80002fc:	45a0      	cmp	r8, r4
 80002fe:	f200 80d9 	bhi.w	80004b4 <__udivmoddi4+0x2bc>
 8000302:	4618      	mov	r0, r3
 8000304:	eba4 0408 	sub.w	r4, r4, r8
 8000308:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 800030c:	e7bf      	b.n	800028e <__udivmoddi4+0x96>
 800030e:	428b      	cmp	r3, r1
 8000310:	d909      	bls.n	8000326 <__udivmoddi4+0x12e>
 8000312:	2d00      	cmp	r5, #0
 8000314:	f000 80b1 	beq.w	800047a <__udivmoddi4+0x282>
 8000318:	2600      	movs	r6, #0
 800031a:	e9c5 0100 	strd	r0, r1, [r5]
 800031e:	4630      	mov	r0, r6
 8000320:	4631      	mov	r1, r6
 8000322:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000326:	fab3 f683 	clz	r6, r3
 800032a:	2e00      	cmp	r6, #0
 800032c:	d14a      	bne.n	80003c4 <__udivmoddi4+0x1cc>
 800032e:	428b      	cmp	r3, r1
 8000330:	d302      	bcc.n	8000338 <__udivmoddi4+0x140>
 8000332:	4282      	cmp	r2, r0
 8000334:	f200 80b8 	bhi.w	80004a8 <__udivmoddi4+0x2b0>
 8000338:	1a84      	subs	r4, r0, r2
 800033a:	eb61 0103 	sbc.w	r1, r1, r3
 800033e:	2001      	movs	r0, #1
 8000340:	468c      	mov	ip, r1
 8000342:	2d00      	cmp	r5, #0
 8000344:	d0a8      	beq.n	8000298 <__udivmoddi4+0xa0>
 8000346:	e9c5 4c00 	strd	r4, ip, [r5]
 800034a:	e7a5      	b.n	8000298 <__udivmoddi4+0xa0>
 800034c:	f1c2 0320 	rsb	r3, r2, #32
 8000350:	fa20 f603 	lsr.w	r6, r0, r3
 8000354:	4097      	lsls	r7, r2
 8000356:	fa01 f002 	lsl.w	r0, r1, r2
 800035a:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 800035e:	40d9      	lsrs	r1, r3
 8000360:	4330      	orrs	r0, r6
 8000362:	0c03      	lsrs	r3, r0, #16
 8000364:	fbb1 f6fe 	udiv	r6, r1, lr
 8000368:	fa1f f887 	uxth.w	r8, r7
 800036c:	fb0e 1116 	mls	r1, lr, r6, r1
 8000370:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000374:	fb06 f108 	mul.w	r1, r6, r8
 8000378:	4299      	cmp	r1, r3
 800037a:	fa04 f402 	lsl.w	r4, r4, r2
 800037e:	d909      	bls.n	8000394 <__udivmoddi4+0x19c>
 8000380:	18fb      	adds	r3, r7, r3
 8000382:	f106 3cff 	add.w	ip, r6, #4294967295
 8000386:	f080 808d 	bcs.w	80004a4 <__udivmoddi4+0x2ac>
 800038a:	4299      	cmp	r1, r3
 800038c:	f240 808a 	bls.w	80004a4 <__udivmoddi4+0x2ac>
 8000390:	3e02      	subs	r6, #2
 8000392:	443b      	add	r3, r7
 8000394:	1a5b      	subs	r3, r3, r1
 8000396:	b281      	uxth	r1, r0
 8000398:	fbb3 f0fe 	udiv	r0, r3, lr
 800039c:	fb0e 3310 	mls	r3, lr, r0, r3
 80003a0:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80003a4:	fb00 f308 	mul.w	r3, r0, r8
 80003a8:	428b      	cmp	r3, r1
 80003aa:	d907      	bls.n	80003bc <__udivmoddi4+0x1c4>
 80003ac:	1879      	adds	r1, r7, r1
 80003ae:	f100 3cff 	add.w	ip, r0, #4294967295
 80003b2:	d273      	bcs.n	800049c <__udivmoddi4+0x2a4>
 80003b4:	428b      	cmp	r3, r1
 80003b6:	d971      	bls.n	800049c <__udivmoddi4+0x2a4>
 80003b8:	3802      	subs	r0, #2
 80003ba:	4439      	add	r1, r7
 80003bc:	1acb      	subs	r3, r1, r3
 80003be:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 80003c2:	e778      	b.n	80002b6 <__udivmoddi4+0xbe>
 80003c4:	f1c6 0c20 	rsb	ip, r6, #32
 80003c8:	fa03 f406 	lsl.w	r4, r3, r6
 80003cc:	fa22 f30c 	lsr.w	r3, r2, ip
 80003d0:	431c      	orrs	r4, r3
 80003d2:	fa20 f70c 	lsr.w	r7, r0, ip
 80003d6:	fa01 f306 	lsl.w	r3, r1, r6
 80003da:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 80003de:	fa21 f10c 	lsr.w	r1, r1, ip
 80003e2:	431f      	orrs	r7, r3
 80003e4:	0c3b      	lsrs	r3, r7, #16
 80003e6:	fbb1 f9fe 	udiv	r9, r1, lr
 80003ea:	fa1f f884 	uxth.w	r8, r4
 80003ee:	fb0e 1119 	mls	r1, lr, r9, r1
 80003f2:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 80003f6:	fb09 fa08 	mul.w	sl, r9, r8
 80003fa:	458a      	cmp	sl, r1
 80003fc:	fa02 f206 	lsl.w	r2, r2, r6
 8000400:	fa00 f306 	lsl.w	r3, r0, r6
 8000404:	d908      	bls.n	8000418 <__udivmoddi4+0x220>
 8000406:	1861      	adds	r1, r4, r1
 8000408:	f109 30ff 	add.w	r0, r9, #4294967295
 800040c:	d248      	bcs.n	80004a0 <__udivmoddi4+0x2a8>
 800040e:	458a      	cmp	sl, r1
 8000410:	d946      	bls.n	80004a0 <__udivmoddi4+0x2a8>
 8000412:	f1a9 0902 	sub.w	r9, r9, #2
 8000416:	4421      	add	r1, r4
 8000418:	eba1 010a 	sub.w	r1, r1, sl
 800041c:	b2bf      	uxth	r7, r7
 800041e:	fbb1 f0fe 	udiv	r0, r1, lr
 8000422:	fb0e 1110 	mls	r1, lr, r0, r1
 8000426:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 800042a:	fb00 f808 	mul.w	r8, r0, r8
 800042e:	45b8      	cmp	r8, r7
 8000430:	d907      	bls.n	8000442 <__udivmoddi4+0x24a>
 8000432:	19e7      	adds	r7, r4, r7
 8000434:	f100 31ff 	add.w	r1, r0, #4294967295
 8000438:	d22e      	bcs.n	8000498 <__udivmoddi4+0x2a0>
 800043a:	45b8      	cmp	r8, r7
 800043c:	d92c      	bls.n	8000498 <__udivmoddi4+0x2a0>
 800043e:	3802      	subs	r0, #2
 8000440:	4427      	add	r7, r4
 8000442:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000446:	eba7 0708 	sub.w	r7, r7, r8
 800044a:	fba0 8902 	umull	r8, r9, r0, r2
 800044e:	454f      	cmp	r7, r9
 8000450:	46c6      	mov	lr, r8
 8000452:	4649      	mov	r1, r9
 8000454:	d31a      	bcc.n	800048c <__udivmoddi4+0x294>
 8000456:	d017      	beq.n	8000488 <__udivmoddi4+0x290>
 8000458:	b15d      	cbz	r5, 8000472 <__udivmoddi4+0x27a>
 800045a:	ebb3 020e 	subs.w	r2, r3, lr
 800045e:	eb67 0701 	sbc.w	r7, r7, r1
 8000462:	fa07 fc0c 	lsl.w	ip, r7, ip
 8000466:	40f2      	lsrs	r2, r6
 8000468:	ea4c 0202 	orr.w	r2, ip, r2
 800046c:	40f7      	lsrs	r7, r6
 800046e:	e9c5 2700 	strd	r2, r7, [r5]
 8000472:	2600      	movs	r6, #0
 8000474:	4631      	mov	r1, r6
 8000476:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800047a:	462e      	mov	r6, r5
 800047c:	4628      	mov	r0, r5
 800047e:	e70b      	b.n	8000298 <__udivmoddi4+0xa0>
 8000480:	4606      	mov	r6, r0
 8000482:	e6e9      	b.n	8000258 <__udivmoddi4+0x60>
 8000484:	4618      	mov	r0, r3
 8000486:	e6fd      	b.n	8000284 <__udivmoddi4+0x8c>
 8000488:	4543      	cmp	r3, r8
 800048a:	d2e5      	bcs.n	8000458 <__udivmoddi4+0x260>
 800048c:	ebb8 0e02 	subs.w	lr, r8, r2
 8000490:	eb69 0104 	sbc.w	r1, r9, r4
 8000494:	3801      	subs	r0, #1
 8000496:	e7df      	b.n	8000458 <__udivmoddi4+0x260>
 8000498:	4608      	mov	r0, r1
 800049a:	e7d2      	b.n	8000442 <__udivmoddi4+0x24a>
 800049c:	4660      	mov	r0, ip
 800049e:	e78d      	b.n	80003bc <__udivmoddi4+0x1c4>
 80004a0:	4681      	mov	r9, r0
 80004a2:	e7b9      	b.n	8000418 <__udivmoddi4+0x220>
 80004a4:	4666      	mov	r6, ip
 80004a6:	e775      	b.n	8000394 <__udivmoddi4+0x19c>
 80004a8:	4630      	mov	r0, r6
 80004aa:	e74a      	b.n	8000342 <__udivmoddi4+0x14a>
 80004ac:	f1ac 0c02 	sub.w	ip, ip, #2
 80004b0:	4439      	add	r1, r7
 80004b2:	e713      	b.n	80002dc <__udivmoddi4+0xe4>
 80004b4:	3802      	subs	r0, #2
 80004b6:	443c      	add	r4, r7
 80004b8:	e724      	b.n	8000304 <__udivmoddi4+0x10c>
 80004ba:	bf00      	nop

080004bc <__aeabi_idiv0>:
 80004bc:	4770      	bx	lr
 80004be:	bf00      	nop

080004c0 <COMPLEMENTARY_FILTER_Init>:

/* Static function prototype */
static void angle_180(float * x);

void COMPLEMENTARY_FILTER_Init(void)
{
 80004c0:	b580      	push	{r7, lr}
 80004c2:	af00      	add	r7, sp, #0
	filter.gyro = MPU_Get_Gyro_Ptr();
 80004c4:	f002 f8f0 	bl	80026a8 <MPU_Get_Gyro_Ptr>
 80004c8:	4603      	mov	r3, r0
 80004ca:	4a09      	ldr	r2, [pc, #36]	; (80004f0 <COMPLEMENTARY_FILTER_Init+0x30>)
 80004cc:	6013      	str	r3, [r2, #0]
	filter.gyro_raw = NULL;
 80004ce:	4b08      	ldr	r3, [pc, #32]	; (80004f0 <COMPLEMENTARY_FILTER_Init+0x30>)
 80004d0:	2200      	movs	r2, #0
 80004d2:	605a      	str	r2, [r3, #4]
	filter.acc = MPU_Get_Acc_Ptr();
 80004d4:	f002 f8f2 	bl	80026bc <MPU_Get_Acc_Ptr>
 80004d8:	4603      	mov	r3, r0
 80004da:	4a05      	ldr	r2, [pc, #20]	; (80004f0 <COMPLEMENTARY_FILTER_Init+0x30>)
 80004dc:	6093      	str	r3, [r2, #8]
	filter.alpha_gyro = ALPHA;
 80004de:	4b04      	ldr	r3, [pc, #16]	; (80004f0 <COMPLEMENTARY_FILTER_Init+0x30>)
 80004e0:	4a04      	ldr	r2, [pc, #16]	; (80004f4 <COMPLEMENTARY_FILTER_Init+0x34>)
 80004e2:	62da      	str	r2, [r3, #44]	; 0x2c
	filter.alpha_acc = 1.0f - ALPHA;
 80004e4:	4b02      	ldr	r3, [pc, #8]	; (80004f0 <COMPLEMENTARY_FILTER_Init+0x30>)
 80004e6:	4a04      	ldr	r2, [pc, #16]	; (80004f8 <COMPLEMENTARY_FILTER_Init+0x38>)
 80004e8:	631a      	str	r2, [r3, #48]	; 0x30
}
 80004ea:	bf00      	nop
 80004ec:	bd80      	pop	{r7, pc}
 80004ee:	bf00      	nop
 80004f0:	20000000 	.word	0x20000000
 80004f4:	3f7f7cee 	.word	0x3f7f7cee
 80004f8:	3b031200 	.word	0x3b031200

080004fc <COMPLEMENTARY_FILTER_Process>:

void COMPLEMENTARY_FILTER_Process(void)
{
 80004fc:	b580      	push	{r7, lr}
 80004fe:	b086      	sub	sp, #24
 8000500:	af00      	add	r7, sp, #0
	/* Total acceleration */
	float acc_total = filter.acc[0] * filter.acc[0];
 8000502:	4baf      	ldr	r3, [pc, #700]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 8000504:	689b      	ldr	r3, [r3, #8]
 8000506:	ed93 7a00 	vldr	s14, [r3]
 800050a:	4bad      	ldr	r3, [pc, #692]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 800050c:	689b      	ldr	r3, [r3, #8]
 800050e:	edd3 7a00 	vldr	s15, [r3]
 8000512:	ee67 7a27 	vmul.f32	s15, s14, s15
 8000516:	edc7 7a05 	vstr	s15, [r7, #20]
	acc_total += filter.acc[1] * filter.acc[1];
 800051a:	4ba9      	ldr	r3, [pc, #676]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 800051c:	689b      	ldr	r3, [r3, #8]
 800051e:	3304      	adds	r3, #4
 8000520:	ed93 7a00 	vldr	s14, [r3]
 8000524:	4ba6      	ldr	r3, [pc, #664]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 8000526:	689b      	ldr	r3, [r3, #8]
 8000528:	3304      	adds	r3, #4
 800052a:	edd3 7a00 	vldr	s15, [r3]
 800052e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8000532:	ed97 7a05 	vldr	s14, [r7, #20]
 8000536:	ee77 7a27 	vadd.f32	s15, s14, s15
 800053a:	edc7 7a05 	vstr	s15, [r7, #20]
	acc_total += filter.acc[2] * filter.acc[2];
 800053e:	4ba0      	ldr	r3, [pc, #640]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 8000540:	689b      	ldr	r3, [r3, #8]
 8000542:	3308      	adds	r3, #8
 8000544:	ed93 7a00 	vldr	s14, [r3]
 8000548:	4b9d      	ldr	r3, [pc, #628]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 800054a:	689b      	ldr	r3, [r3, #8]
 800054c:	3308      	adds	r3, #8
 800054e:	edd3 7a00 	vldr	s15, [r3]
 8000552:	ee67 7a27 	vmul.f32	s15, s14, s15
 8000556:	ed97 7a05 	vldr	s14, [r7, #20]
 800055a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800055e:	edc7 7a05 	vstr	s15, [r7, #20]
	acc_total = sqrtf(acc_total);
 8000562:	ed97 0a05 	vldr	s0, [r7, #20]
 8000566:	f008 f837 	bl	80085d8 <sqrtf>
 800056a:	ed87 0a05 	vstr	s0, [r7, #20]

	/* Guess the angles according to the accelerometer and some trigonometry */
	if(acc_total)
 800056e:	edd7 7a05 	vldr	s15, [r7, #20]
 8000572:	eef5 7a40 	vcmp.f32	s15, #0.0
 8000576:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800057a:	d06c      	beq.n	8000656 <COMPLEMENTARY_FILTER_Process+0x15a>
	{
		float inv_acc_total = 1.0f / acc_total;
 800057c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8000580:	ed97 7a05 	vldr	s14, [r7, #20]
 8000584:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8000588:	edc7 7a04 	vstr	s15, [r7, #16]
		if(absolute(filter.acc[axe_eROLL]) < acc_total)
 800058c:	4b8c      	ldr	r3, [pc, #560]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 800058e:	689b      	ldr	r3, [r3, #8]
 8000590:	edd3 7a00 	vldr	s15, [r3]
 8000594:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8000598:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800059c:	db04      	blt.n	80005a8 <COMPLEMENTARY_FILTER_Process+0xac>
 800059e:	4b88      	ldr	r3, [pc, #544]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 80005a0:	689b      	ldr	r3, [r3, #8]
 80005a2:	edd3 7a00 	vldr	s15, [r3]
 80005a6:	e005      	b.n	80005b4 <COMPLEMENTARY_FILTER_Process+0xb8>
 80005a8:	4b85      	ldr	r3, [pc, #532]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 80005aa:	689b      	ldr	r3, [r3, #8]
 80005ac:	edd3 7a00 	vldr	s15, [r3]
 80005b0:	eef1 7a67 	vneg.f32	s15, s15
 80005b4:	ed97 7a05 	vldr	s14, [r7, #20]
 80005b8:	eef4 7ac7 	vcmpe.f32	s15, s14
 80005bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80005c0:	d516      	bpl.n	80005f0 <COMPLEMENTARY_FILTER_Process+0xf4>
		{
			filter.angle_acc[axe_ePITCH] = 	-asinf(filter.acc[axe_eROLL] * inv_acc_total) * RAD_TO_DEG;
 80005c2:	4b7f      	ldr	r3, [pc, #508]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 80005c4:	689b      	ldr	r3, [r3, #8]
 80005c6:	ed93 7a00 	vldr	s14, [r3]
 80005ca:	edd7 7a04 	vldr	s15, [r7, #16]
 80005ce:	ee67 7a27 	vmul.f32	s15, s14, s15
 80005d2:	eeb0 0a67 	vmov.f32	s0, s15
 80005d6:	f007 ffcd 	bl	8008574 <asinf>
 80005da:	eef0 7a40 	vmov.f32	s15, s0
 80005de:	eef1 7a67 	vneg.f32	s15, s15
 80005e2:	ed9f 7a78 	vldr	s14, [pc, #480]	; 80007c4 <COMPLEMENTARY_FILTER_Process+0x2c8>
 80005e6:	ee67 7a87 	vmul.f32	s15, s15, s14
 80005ea:	4b75      	ldr	r3, [pc, #468]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 80005ec:	edc3 7a07 	vstr	s15, [r3, #28]
		}
		if(absolute(filter.acc[axe_ePITCH]) < acc_total)
 80005f0:	4b73      	ldr	r3, [pc, #460]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 80005f2:	689b      	ldr	r3, [r3, #8]
 80005f4:	3304      	adds	r3, #4
 80005f6:	edd3 7a00 	vldr	s15, [r3]
 80005fa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80005fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000602:	db04      	blt.n	800060e <COMPLEMENTARY_FILTER_Process+0x112>
 8000604:	4b6e      	ldr	r3, [pc, #440]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 8000606:	689b      	ldr	r3, [r3, #8]
 8000608:	edd3 7a01 	vldr	s15, [r3, #4]
 800060c:	e006      	b.n	800061c <COMPLEMENTARY_FILTER_Process+0x120>
 800060e:	4b6c      	ldr	r3, [pc, #432]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 8000610:	689b      	ldr	r3, [r3, #8]
 8000612:	3304      	adds	r3, #4
 8000614:	edd3 7a00 	vldr	s15, [r3]
 8000618:	eef1 7a67 	vneg.f32	s15, s15
 800061c:	ed97 7a05 	vldr	s14, [r7, #20]
 8000620:	eef4 7ac7 	vcmpe.f32	s15, s14
 8000624:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000628:	d515      	bpl.n	8000656 <COMPLEMENTARY_FILTER_Process+0x15a>
		{
			filter.angle_acc[axe_eROLL] = 	asinf(filter.acc[axe_ePITCH] * inv_acc_total) * RAD_TO_DEG;
 800062a:	4b65      	ldr	r3, [pc, #404]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 800062c:	689b      	ldr	r3, [r3, #8]
 800062e:	3304      	adds	r3, #4
 8000630:	ed93 7a00 	vldr	s14, [r3]
 8000634:	edd7 7a04 	vldr	s15, [r7, #16]
 8000638:	ee67 7a27 	vmul.f32	s15, s14, s15
 800063c:	eeb0 0a67 	vmov.f32	s0, s15
 8000640:	f007 ff98 	bl	8008574 <asinf>
 8000644:	eef0 7a40 	vmov.f32	s15, s0
 8000648:	ed9f 7a5e 	vldr	s14, [pc, #376]	; 80007c4 <COMPLEMENTARY_FILTER_Process+0x2c8>
 800064c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000650:	4b5b      	ldr	r3, [pc, #364]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 8000652:	edc3 7a06 	vstr	s15, [r3, #24]
		}
	}

	if(!filter.used_once)
 8000656:	4b5a      	ldr	r3, [pc, #360]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 8000658:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 800065c:	2b00      	cmp	r3, #0
 800065e:	d110      	bne.n	8000682 <COMPLEMENTARY_FILTER_Process+0x186>
	{
		filter.used_once = TRUE;
 8000660:	4b57      	ldr	r3, [pc, #348]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 8000662:	2201      	movs	r2, #1
 8000664:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
		filter.angle[axe_eROLL] = filter.angle_acc[axe_eROLL];
 8000668:	4b55      	ldr	r3, [pc, #340]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 800066a:	699b      	ldr	r3, [r3, #24]
 800066c:	4a54      	ldr	r2, [pc, #336]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 800066e:	60d3      	str	r3, [r2, #12]
		filter.angle[axe_ePITCH] = filter.angle_acc[axe_ePITCH];
 8000670:	4b53      	ldr	r3, [pc, #332]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 8000672:	69db      	ldr	r3, [r3, #28]
 8000674:	4a52      	ldr	r2, [pc, #328]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 8000676:	6113      	str	r3, [r2, #16]
		filter.angle[axe_eYAW] = 0;
 8000678:	4b51      	ldr	r3, [pc, #324]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 800067a:	f04f 0200 	mov.w	r2, #0
 800067e:	615a      	str	r2, [r3, #20]
		/* Finally, the complementary filter */
		filter.angle[axe_eROLL] = filter.alpha_gyro * filter.angle[axe_eROLL] + filter.alpha_acc * filter.angle_acc[axe_eROLL];
		filter.angle[axe_ePITCH] = filter.alpha_gyro * filter.angle[axe_ePITCH] + filter.alpha_acc * filter.angle_acc[axe_ePITCH];
	}

}
 8000680:	e09a      	b.n	80007b8 <COMPLEMENTARY_FILTER_Process+0x2bc>
		float dx = filter.gyro[axe_eROLL] * filter.period;
 8000682:	4b4f      	ldr	r3, [pc, #316]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 8000684:	681b      	ldr	r3, [r3, #0]
 8000686:	ed93 7a00 	vldr	s14, [r3]
 800068a:	4b4d      	ldr	r3, [pc, #308]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 800068c:	edd3 7a0a 	vldr	s15, [r3, #40]	; 0x28
 8000690:	ee67 7a27 	vmul.f32	s15, s14, s15
 8000694:	edc7 7a03 	vstr	s15, [r7, #12]
		float dy = filter.gyro[axe_ePITCH] * filter.period;
 8000698:	4b49      	ldr	r3, [pc, #292]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 800069a:	681b      	ldr	r3, [r3, #0]
 800069c:	3304      	adds	r3, #4
 800069e:	ed93 7a00 	vldr	s14, [r3]
 80006a2:	4b47      	ldr	r3, [pc, #284]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 80006a4:	edd3 7a0a 	vldr	s15, [r3, #40]	; 0x28
 80006a8:	ee67 7a27 	vmul.f32	s15, s14, s15
 80006ac:	edc7 7a02 	vstr	s15, [r7, #8]
		float dz = filter.gyro[axe_eYAW] * filter.period;
 80006b0:	4b43      	ldr	r3, [pc, #268]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 80006b2:	681b      	ldr	r3, [r3, #0]
 80006b4:	3308      	adds	r3, #8
 80006b6:	ed93 7a00 	vldr	s14, [r3]
 80006ba:	4b41      	ldr	r3, [pc, #260]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 80006bc:	edd3 7a0a 	vldr	s15, [r3, #40]	; 0x28
 80006c0:	ee67 7a27 	vmul.f32	s15, s14, s15
 80006c4:	edc7 7a01 	vstr	s15, [r7, #4]
		filter.angle[axe_eROLL] += dx;
 80006c8:	4b3d      	ldr	r3, [pc, #244]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 80006ca:	ed93 7a03 	vldr	s14, [r3, #12]
 80006ce:	edd7 7a03 	vldr	s15, [r7, #12]
 80006d2:	ee77 7a27 	vadd.f32	s15, s14, s15
 80006d6:	4b3a      	ldr	r3, [pc, #232]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 80006d8:	edc3 7a03 	vstr	s15, [r3, #12]
		filter.angle[axe_ePITCH] += dy;
 80006dc:	4b38      	ldr	r3, [pc, #224]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 80006de:	ed93 7a04 	vldr	s14, [r3, #16]
 80006e2:	edd7 7a02 	vldr	s15, [r7, #8]
 80006e6:	ee77 7a27 	vadd.f32	s15, s14, s15
 80006ea:	4b35      	ldr	r3, [pc, #212]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 80006ec:	edc3 7a04 	vstr	s15, [r3, #16]
		filter.angle[axe_eYAW] += dz;
 80006f0:	4b33      	ldr	r3, [pc, #204]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 80006f2:	ed93 7a05 	vldr	s14, [r3, #20]
 80006f6:	edd7 7a01 	vldr	s15, [r7, #4]
 80006fa:	ee77 7a27 	vadd.f32	s15, s14, s15
 80006fe:	4b30      	ldr	r3, [pc, #192]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 8000700:	edc3 7a05 	vstr	s15, [r3, #20]
		float sin_dz = sinf(DEG_TO_RAD * dz);
 8000704:	edd7 7a01 	vldr	s15, [r7, #4]
 8000708:	ed9f 7a2f 	vldr	s14, [pc, #188]	; 80007c8 <COMPLEMENTARY_FILTER_Process+0x2cc>
 800070c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000710:	eeb0 0a67 	vmov.f32	s0, s15
 8000714:	f007 feec 	bl	80084f0 <sinf>
 8000718:	ed87 0a00 	vstr	s0, [r7]
		filter.angle[axe_eROLL] += sin_dz * filter.angle[axe_ePITCH];
 800071c:	4b28      	ldr	r3, [pc, #160]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 800071e:	ed93 7a03 	vldr	s14, [r3, #12]
 8000722:	4b27      	ldr	r3, [pc, #156]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 8000724:	edd3 6a04 	vldr	s13, [r3, #16]
 8000728:	edd7 7a00 	vldr	s15, [r7]
 800072c:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000730:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000734:	4b22      	ldr	r3, [pc, #136]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 8000736:	edc3 7a03 	vstr	s15, [r3, #12]
		filter.angle[axe_ePITCH] -= sin_dz * filter.angle[axe_eROLL];
 800073a:	4b21      	ldr	r3, [pc, #132]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 800073c:	ed93 7a04 	vldr	s14, [r3, #16]
 8000740:	4b1f      	ldr	r3, [pc, #124]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 8000742:	edd3 6a03 	vldr	s13, [r3, #12]
 8000746:	edd7 7a00 	vldr	s15, [r7]
 800074a:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800074e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8000752:	4b1b      	ldr	r3, [pc, #108]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 8000754:	edc3 7a04 	vstr	s15, [r3, #16]
		angle_180(&filter.angle[axe_eROLL]);
 8000758:	481c      	ldr	r0, [pc, #112]	; (80007cc <COMPLEMENTARY_FILTER_Process+0x2d0>)
 800075a:	f000 f845 	bl	80007e8 <angle_180>
		angle_180(&filter.angle[axe_ePITCH]);
 800075e:	481c      	ldr	r0, [pc, #112]	; (80007d0 <COMPLEMENTARY_FILTER_Process+0x2d4>)
 8000760:	f000 f842 	bl	80007e8 <angle_180>
		filter.angle[axe_eROLL] = filter.alpha_gyro * filter.angle[axe_eROLL] + filter.alpha_acc * filter.angle_acc[axe_eROLL];
 8000764:	4b16      	ldr	r3, [pc, #88]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 8000766:	ed93 7a0b 	vldr	s14, [r3, #44]	; 0x2c
 800076a:	4b15      	ldr	r3, [pc, #84]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 800076c:	edd3 7a03 	vldr	s15, [r3, #12]
 8000770:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000774:	4b12      	ldr	r3, [pc, #72]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 8000776:	edd3 6a0c 	vldr	s13, [r3, #48]	; 0x30
 800077a:	4b11      	ldr	r3, [pc, #68]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 800077c:	edd3 7a06 	vldr	s15, [r3, #24]
 8000780:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000784:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000788:	4b0d      	ldr	r3, [pc, #52]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 800078a:	edc3 7a03 	vstr	s15, [r3, #12]
		filter.angle[axe_ePITCH] = filter.alpha_gyro * filter.angle[axe_ePITCH] + filter.alpha_acc * filter.angle_acc[axe_ePITCH];
 800078e:	4b0c      	ldr	r3, [pc, #48]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 8000790:	ed93 7a0b 	vldr	s14, [r3, #44]	; 0x2c
 8000794:	4b0a      	ldr	r3, [pc, #40]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 8000796:	edd3 7a04 	vldr	s15, [r3, #16]
 800079a:	ee27 7a27 	vmul.f32	s14, s14, s15
 800079e:	4b08      	ldr	r3, [pc, #32]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 80007a0:	edd3 6a0c 	vldr	s13, [r3, #48]	; 0x30
 80007a4:	4b06      	ldr	r3, [pc, #24]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 80007a6:	edd3 7a07 	vldr	s15, [r3, #28]
 80007aa:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80007ae:	ee77 7a27 	vadd.f32	s15, s14, s15
 80007b2:	4b03      	ldr	r3, [pc, #12]	; (80007c0 <COMPLEMENTARY_FILTER_Process+0x2c4>)
 80007b4:	edc3 7a04 	vstr	s15, [r3, #16]
}
 80007b8:	bf00      	nop
 80007ba:	3718      	adds	r7, #24
 80007bc:	46bd      	mov	sp, r7
 80007be:	bd80      	pop	{r7, pc}
 80007c0:	20000000 	.word	0x20000000
 80007c4:	42652ee1 	.word	0x42652ee1
 80007c8:	3c8efa34 	.word	0x3c8efa34
 80007cc:	2000000c 	.word	0x2000000c
 80007d0:	20000010 	.word	0x20000010

080007d4 <COMPLEMENTARY_FILTER_Get_Angles>:

float * COMPLEMENTARY_FILTER_Get_Angles(void)
{
 80007d4:	b480      	push	{r7}
 80007d6:	af00      	add	r7, sp, #0
	return filter.angle;
 80007d8:	4b02      	ldr	r3, [pc, #8]	; (80007e4 <COMPLEMENTARY_FILTER_Get_Angles+0x10>)
}
 80007da:	4618      	mov	r0, r3
 80007dc:	46bd      	mov	sp, r7
 80007de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007e2:	4770      	bx	lr
 80007e4:	2000000c 	.word	0x2000000c

080007e8 <angle_180>:
{
	return filter.angle_acc;
}

static void angle_180(float * x)
{
 80007e8:	b480      	push	{r7}
 80007ea:	b083      	sub	sp, #12
 80007ec:	af00      	add	r7, sp, #0
 80007ee:	6078      	str	r0, [r7, #4]
	if(*x > 180)
 80007f0:	687b      	ldr	r3, [r7, #4]
 80007f2:	edd3 7a00 	vldr	s15, [r3]
 80007f6:	ed9f 7a16 	vldr	s14, [pc, #88]	; 8000850 <angle_180+0x68>
 80007fa:	eef4 7ac7 	vcmpe.f32	s15, s14
 80007fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000802:	dd0a      	ble.n	800081a <angle_180+0x32>
	{
		*x -= 360;
 8000804:	687b      	ldr	r3, [r7, #4]
 8000806:	edd3 7a00 	vldr	s15, [r3]
 800080a:	ed9f 7a12 	vldr	s14, [pc, #72]	; 8000854 <angle_180+0x6c>
 800080e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8000812:	687b      	ldr	r3, [r7, #4]
 8000814:	edc3 7a00 	vstr	s15, [r3]
	}
	else if( *x < -180)
	{
		*x += 360 ;
	}
}
 8000818:	e014      	b.n	8000844 <angle_180+0x5c>
	else if( *x < -180)
 800081a:	687b      	ldr	r3, [r7, #4]
 800081c:	edd3 7a00 	vldr	s15, [r3]
 8000820:	ed9f 7a0d 	vldr	s14, [pc, #52]	; 8000858 <angle_180+0x70>
 8000824:	eef4 7ac7 	vcmpe.f32	s15, s14
 8000828:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800082c:	d400      	bmi.n	8000830 <angle_180+0x48>
}
 800082e:	e009      	b.n	8000844 <angle_180+0x5c>
		*x += 360 ;
 8000830:	687b      	ldr	r3, [r7, #4]
 8000832:	edd3 7a00 	vldr	s15, [r3]
 8000836:	ed9f 7a07 	vldr	s14, [pc, #28]	; 8000854 <angle_180+0x6c>
 800083a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800083e:	687b      	ldr	r3, [r7, #4]
 8000840:	edc3 7a00 	vstr	s15, [r3]
}
 8000844:	bf00      	nop
 8000846:	370c      	adds	r7, #12
 8000848:	46bd      	mov	sp, r7
 800084a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800084e:	4770      	bx	lr
 8000850:	43340000 	.word	0x43340000
 8000854:	43b40000 	.word	0x43b40000
 8000858:	c3340000 	.word	0xc3340000

0800085c <CONTROLLER_Init>:
		.angle_kp = 			{1.0f, 		1.0f, 		0},
		.angle_speed_kp = 		{1.0f, 		1.0f, 		1.0f},
};

void CONTROLLER_Init(void)
{
 800085c:	b580      	push	{r7, lr}
 800085e:	af00      	add	r7, sp, #0
	controller.angle = COMPLEMENTARY_FILTER_Get_Angles();
 8000860:	f7ff ffb8 	bl	80007d4 <COMPLEMENTARY_FILTER_Get_Angles>
 8000864:	4603      	mov	r3, r0
 8000866:	4a09      	ldr	r2, [pc, #36]	; (800088c <CONTROLLER_Init+0x30>)
 8000868:	6013      	str	r3, [r2, #0]
	controller.angle_speed = MPU_Get_Gyro_Ptr();
 800086a:	f001 ff1d 	bl	80026a8 <MPU_Get_Gyro_Ptr>
 800086e:	4603      	mov	r3, r0
 8000870:	4a06      	ldr	r2, [pc, #24]	; (800088c <CONTROLLER_Init+0x30>)
 8000872:	6293      	str	r3, [r2, #40]	; 0x28
	controller.output = MOTOR_MIXER_Get_Angle_Input_Ptr();
 8000874:	f001 f812 	bl	800189c <MOTOR_MIXER_Get_Angle_Input_Ptr>
 8000878:	4603      	mov	r3, r0
 800087a:	4a04      	ldr	r2, [pc, #16]	; (800088c <CONTROLLER_Init+0x30>)
 800087c:	6513      	str	r3, [r2, #80]	; 0x50

	controller.state = controller_state_eDISABLED;
 800087e:	4b03      	ldr	r3, [pc, #12]	; (800088c <CONTROLLER_Init+0x30>)
 8000880:	2200      	movs	r2, #0
 8000882:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
}
 8000886:	bf00      	nop
 8000888:	bd80      	pop	{r7, pc}
 800088a:	bf00      	nop
 800088c:	20000038 	.word	0x20000038

08000890 <CONTROLLER_Process>:
void CONTROLLER_Process(void)
{
 8000890:	b480      	push	{r7}
 8000892:	af00      	add	r7, sp, #0
	if(controller.new_state != controller.state)
 8000894:	4b55      	ldr	r3, [pc, #340]	; (80009ec <CONTROLLER_Process+0x15c>)
 8000896:	f893 2055 	ldrb.w	r2, [r3, #85]	; 0x55
 800089a:	4b54      	ldr	r3, [pc, #336]	; (80009ec <CONTROLLER_Process+0x15c>)
 800089c:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 80008a0:	429a      	cmp	r2, r3
 80008a2:	d005      	beq.n	80008b0 <CONTROLLER_Process+0x20>
	{
		controller.state = controller.new_state;
 80008a4:	4b51      	ldr	r3, [pc, #324]	; (80009ec <CONTROLLER_Process+0x15c>)
 80008a6:	f893 2055 	ldrb.w	r2, [r3, #85]	; 0x55
 80008aa:	4b50      	ldr	r3, [pc, #320]	; (80009ec <CONTROLLER_Process+0x15c>)
 80008ac:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
	}
	if(controller.state)
 80008b0:	4b4e      	ldr	r3, [pc, #312]	; (80009ec <CONTROLLER_Process+0x15c>)
 80008b2:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 80008b6:	2b00      	cmp	r3, #0
 80008b8:	f000 8081 	beq.w	80009be <CONTROLLER_Process+0x12e>
	{
		/* A first PID to correct angle errors when we are in angle mode */
		if(controller.state == controller_state_eANGLE)
 80008bc:	4b4b      	ldr	r3, [pc, #300]	; (80009ec <CONTROLLER_Process+0x15c>)
 80008be:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 80008c2:	2b02      	cmp	r3, #2
 80008c4:	d12e      	bne.n	8000924 <CONTROLLER_Process+0x94>
		{
			/* Compute angle errors */
			controller.angle_error[axe_eROLL] = controller.target_angle[axe_eROLL] - controller.angle[axe_eROLL];
 80008c6:	4b49      	ldr	r3, [pc, #292]	; (80009ec <CONTROLLER_Process+0x15c>)
 80008c8:	ed93 7a01 	vldr	s14, [r3, #4]
 80008cc:	4b47      	ldr	r3, [pc, #284]	; (80009ec <CONTROLLER_Process+0x15c>)
 80008ce:	681b      	ldr	r3, [r3, #0]
 80008d0:	edd3 7a00 	vldr	s15, [r3]
 80008d4:	ee77 7a67 	vsub.f32	s15, s14, s15
 80008d8:	4b44      	ldr	r3, [pc, #272]	; (80009ec <CONTROLLER_Process+0x15c>)
 80008da:	edc3 7a04 	vstr	s15, [r3, #16]
			controller.angle_error[axe_ePITCH] = controller.target_angle[axe_ePITCH] - controller.angle[axe_ePITCH];
 80008de:	4b43      	ldr	r3, [pc, #268]	; (80009ec <CONTROLLER_Process+0x15c>)
 80008e0:	ed93 7a02 	vldr	s14, [r3, #8]
 80008e4:	4b41      	ldr	r3, [pc, #260]	; (80009ec <CONTROLLER_Process+0x15c>)
 80008e6:	681b      	ldr	r3, [r3, #0]
 80008e8:	3304      	adds	r3, #4
 80008ea:	edd3 7a00 	vldr	s15, [r3]
 80008ee:	ee77 7a67 	vsub.f32	s15, s14, s15
 80008f2:	4b3e      	ldr	r3, [pc, #248]	; (80009ec <CONTROLLER_Process+0x15c>)
 80008f4:	edc3 7a05 	vstr	s15, [r3, #20]
			/* Handle angle continuity at -PI and + PI */
			//TODO ASAP
			/* Compute PID on angles */
			controller.target_angle_speed[axe_eROLL] = controller.angle_kp[axe_eROLL] * controller.angle_error[axe_eROLL];
 80008f8:	4b3c      	ldr	r3, [pc, #240]	; (80009ec <CONTROLLER_Process+0x15c>)
 80008fa:	ed93 7a07 	vldr	s14, [r3, #28]
 80008fe:	4b3b      	ldr	r3, [pc, #236]	; (80009ec <CONTROLLER_Process+0x15c>)
 8000900:	edd3 7a04 	vldr	s15, [r3, #16]
 8000904:	ee67 7a27 	vmul.f32	s15, s14, s15
 8000908:	4b38      	ldr	r3, [pc, #224]	; (80009ec <CONTROLLER_Process+0x15c>)
 800090a:	edc3 7a0b 	vstr	s15, [r3, #44]	; 0x2c
			controller.target_angle_speed[axe_ePITCH] = controller.angle_kp[axe_ePITCH] * controller.angle_error[axe_ePITCH];
 800090e:	4b37      	ldr	r3, [pc, #220]	; (80009ec <CONTROLLER_Process+0x15c>)
 8000910:	ed93 7a08 	vldr	s14, [r3, #32]
 8000914:	4b35      	ldr	r3, [pc, #212]	; (80009ec <CONTROLLER_Process+0x15c>)
 8000916:	edd3 7a05 	vldr	s15, [r3, #20]
 800091a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800091e:	4b33      	ldr	r3, [pc, #204]	; (80009ec <CONTROLLER_Process+0x15c>)
 8000920:	edc3 7a0c 	vstr	s15, [r3, #48]	; 0x30
		}
		/* Angular speed regulation */
		/* First thing first, errors */
		controller.angle_speed_error[axe_eROLL] = controller.target_angle_speed[axe_eROLL] - controller.angle_speed[axe_eROLL];
 8000924:	4b31      	ldr	r3, [pc, #196]	; (80009ec <CONTROLLER_Process+0x15c>)
 8000926:	ed93 7a0b 	vldr	s14, [r3, #44]	; 0x2c
 800092a:	4b30      	ldr	r3, [pc, #192]	; (80009ec <CONTROLLER_Process+0x15c>)
 800092c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800092e:	edd3 7a00 	vldr	s15, [r3]
 8000932:	ee77 7a67 	vsub.f32	s15, s14, s15
 8000936:	4b2d      	ldr	r3, [pc, #180]	; (80009ec <CONTROLLER_Process+0x15c>)
 8000938:	edc3 7a0e 	vstr	s15, [r3, #56]	; 0x38
		controller.angle_speed_error[axe_ePITCH] = controller.target_angle_speed[axe_ePITCH] - controller.angle_speed[axe_ePITCH];
 800093c:	4b2b      	ldr	r3, [pc, #172]	; (80009ec <CONTROLLER_Process+0x15c>)
 800093e:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 8000942:	4b2a      	ldr	r3, [pc, #168]	; (80009ec <CONTROLLER_Process+0x15c>)
 8000944:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000946:	3304      	adds	r3, #4
 8000948:	edd3 7a00 	vldr	s15, [r3]
 800094c:	ee77 7a67 	vsub.f32	s15, s14, s15
 8000950:	4b26      	ldr	r3, [pc, #152]	; (80009ec <CONTROLLER_Process+0x15c>)
 8000952:	edc3 7a0f 	vstr	s15, [r3, #60]	; 0x3c
		controller.angle_speed_error[axe_eYAW] = controller.target_angle_speed[axe_eYAW] - controller.angle_speed[axe_eYAW];
 8000956:	4b25      	ldr	r3, [pc, #148]	; (80009ec <CONTROLLER_Process+0x15c>)
 8000958:	ed93 7a0d 	vldr	s14, [r3, #52]	; 0x34
 800095c:	4b23      	ldr	r3, [pc, #140]	; (80009ec <CONTROLLER_Process+0x15c>)
 800095e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000960:	3308      	adds	r3, #8
 8000962:	edd3 7a00 	vldr	s15, [r3]
 8000966:	ee77 7a67 	vsub.f32	s15, s14, s15
 800096a:	4b20      	ldr	r3, [pc, #128]	; (80009ec <CONTROLLER_Process+0x15c>)
 800096c:	edc3 7a10 	vstr	s15, [r3, #64]	; 0x40

		/* Now, PID's time ! */
		controller.output[axe_eROLL] = controller.angle_speed_error[axe_eROLL] * controller.angle_speed_kp[axe_eROLL];
 8000970:	4b1e      	ldr	r3, [pc, #120]	; (80009ec <CONTROLLER_Process+0x15c>)
 8000972:	ed93 7a0e 	vldr	s14, [r3, #56]	; 0x38
 8000976:	4b1d      	ldr	r3, [pc, #116]	; (80009ec <CONTROLLER_Process+0x15c>)
 8000978:	edd3 7a11 	vldr	s15, [r3, #68]	; 0x44
 800097c:	4b1b      	ldr	r3, [pc, #108]	; (80009ec <CONTROLLER_Process+0x15c>)
 800097e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8000980:	ee67 7a27 	vmul.f32	s15, s14, s15
 8000984:	edc3 7a00 	vstr	s15, [r3]
		controller.output[axe_ePITCH] = controller.angle_speed_error[axe_ePITCH] * controller.angle_speed_kp[axe_ePITCH];
 8000988:	4b18      	ldr	r3, [pc, #96]	; (80009ec <CONTROLLER_Process+0x15c>)
 800098a:	ed93 7a0f 	vldr	s14, [r3, #60]	; 0x3c
 800098e:	4b17      	ldr	r3, [pc, #92]	; (80009ec <CONTROLLER_Process+0x15c>)
 8000990:	edd3 7a12 	vldr	s15, [r3, #72]	; 0x48
 8000994:	4b15      	ldr	r3, [pc, #84]	; (80009ec <CONTROLLER_Process+0x15c>)
 8000996:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8000998:	3304      	adds	r3, #4
 800099a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800099e:	edc3 7a00 	vstr	s15, [r3]
		controller.output[axe_eYAW] = controller.angle_speed_error[axe_eYAW] * controller.angle_speed_kp[axe_eYAW];
 80009a2:	4b12      	ldr	r3, [pc, #72]	; (80009ec <CONTROLLER_Process+0x15c>)
 80009a4:	ed93 7a10 	vldr	s14, [r3, #64]	; 0x40
 80009a8:	4b10      	ldr	r3, [pc, #64]	; (80009ec <CONTROLLER_Process+0x15c>)
 80009aa:	edd3 7a13 	vldr	s15, [r3, #76]	; 0x4c
 80009ae:	4b0f      	ldr	r3, [pc, #60]	; (80009ec <CONTROLLER_Process+0x15c>)
 80009b0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80009b2:	3308      	adds	r3, #8
 80009b4:	ee67 7a27 	vmul.f32	s15, s14, s15
 80009b8:	edc3 7a00 	vstr	s15, [r3]
	{
		controller.output[axe_eROLL] = 0;
		controller.output[axe_ePITCH] = 0;
		controller.output[axe_eYAW] = 0;
	}
}
 80009bc:	e010      	b.n	80009e0 <CONTROLLER_Process+0x150>
		controller.output[axe_eROLL] = 0;
 80009be:	4b0b      	ldr	r3, [pc, #44]	; (80009ec <CONTROLLER_Process+0x15c>)
 80009c0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80009c2:	f04f 0200 	mov.w	r2, #0
 80009c6:	601a      	str	r2, [r3, #0]
		controller.output[axe_ePITCH] = 0;
 80009c8:	4b08      	ldr	r3, [pc, #32]	; (80009ec <CONTROLLER_Process+0x15c>)
 80009ca:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80009cc:	3304      	adds	r3, #4
 80009ce:	f04f 0200 	mov.w	r2, #0
 80009d2:	601a      	str	r2, [r3, #0]
		controller.output[axe_eYAW] = 0;
 80009d4:	4b05      	ldr	r3, [pc, #20]	; (80009ec <CONTROLLER_Process+0x15c>)
 80009d6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80009d8:	3308      	adds	r3, #8
 80009da:	f04f 0200 	mov.w	r2, #0
 80009de:	601a      	str	r2, [r3, #0]
}
 80009e0:	bf00      	nop
 80009e2:	46bd      	mov	sp, r7
 80009e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009e8:	4770      	bx	lr
 80009ea:	bf00      	nop
 80009ec:	20000038 	.word	0x20000038

080009f0 <CONTROLLER_Set_State>:

void CONTROLLER_Set_State(controller_state_e new_state)
{
 80009f0:	b480      	push	{r7}
 80009f2:	b083      	sub	sp, #12
 80009f4:	af00      	add	r7, sp, #0
 80009f6:	4603      	mov	r3, r0
 80009f8:	71fb      	strb	r3, [r7, #7]
	controller.new_state = new_state;
 80009fa:	4a05      	ldr	r2, [pc, #20]	; (8000a10 <CONTROLLER_Set_State+0x20>)
 80009fc:	79fb      	ldrb	r3, [r7, #7]
 80009fe:	f882 3055 	strb.w	r3, [r2, #85]	; 0x55
}
 8000a02:	bf00      	nop
 8000a04:	370c      	adds	r7, #12
 8000a06:	46bd      	mov	sp, r7
 8000a08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a0c:	4770      	bx	lr
 8000a0e:	bf00      	nop
 8000a10:	20000038 	.word	0x20000038

08000a14 <CONTROLLER_Get_Angle_Target>:

float * CONTROLLER_Get_Angle_Target(void)
{
 8000a14:	b480      	push	{r7}
 8000a16:	af00      	add	r7, sp, #0
	return controller.target_angle;
 8000a18:	4b02      	ldr	r3, [pc, #8]	; (8000a24 <CONTROLLER_Get_Angle_Target+0x10>)
}
 8000a1a:	4618      	mov	r0, r3
 8000a1c:	46bd      	mov	sp, r7
 8000a1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a22:	4770      	bx	lr
 8000a24:	2000003c 	.word	0x2000003c

08000a28 <CONTROLLER_Get_Angle_Speed_Target>:

float * CONTROLLER_Get_Angle_Speed_Target(void)
{
 8000a28:	b480      	push	{r7}
 8000a2a:	af00      	add	r7, sp, #0
	return controller.target_angle_speed;
 8000a2c:	4b02      	ldr	r3, [pc, #8]	; (8000a38 <CONTROLLER_Get_Angle_Speed_Target+0x10>)
}
 8000a2e:	4618      	mov	r0, r3
 8000a30:	46bd      	mov	sp, r7
 8000a32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a36:	4770      	bx	lr
 8000a38:	20000064 	.word	0x20000064

08000a3c <DATA_LOGGER_Init>:
/*
 * @brief Declare every data
 * @param mark1_ pointer to a system_t structure
 */
void DATA_LOGGER_Init(void)
{
 8000a3c:	b580      	push	{r7, lr}
 8000a3e:	b084      	sub	sp, #16
 8000a40:	af00      	add	r7, sp, #0
	/* Retrieve structure from modules */
	float * gyro = MPU_Get_Gyro_Ptr();
 8000a42:	f001 fe31 	bl	80026a8 <MPU_Get_Gyro_Ptr>
 8000a46:	60f8      	str	r0, [r7, #12]
	float * acc = MPU_Get_Acc_Ptr();
 8000a48:	f001 fe38 	bl	80026bc <MPU_Get_Acc_Ptr>
 8000a4c:	60b8      	str	r0, [r7, #8]
	float * angle = COMPLEMENTARY_FILTER_Get_Angles();
 8000a4e:	f7ff fec1 	bl	80007d4 <COMPLEMENTARY_FILTER_Get_Angles>
 8000a52:	6078      	str	r0, [r7, #4]

	/* -------------- Outputs ----------------- */
	DEFINE_DATA(data_id_eANGLE_ROLL,			(void*)&angle[axe_eROLL],	data_format_e16B_FLOAT_2D,		"Angle Roll",		use_format_eAS_OUTPUT);
 8000a54:	4b8b      	ldr	r3, [pc, #556]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000a56:	2203      	movs	r2, #3
 8000a58:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8000a5c:	4a89      	ldr	r2, [pc, #548]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000a5e:	687b      	ldr	r3, [r7, #4]
 8000a60:	6413      	str	r3, [r2, #64]	; 0x40
 8000a62:	4b88      	ldr	r3, [pc, #544]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000a64:	222a      	movs	r2, #42	; 0x2a
 8000a66:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8000a6a:	4b86      	ldr	r3, [pc, #536]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000a6c:	4a86      	ldr	r2, [pc, #536]	; (8000c88 <DATA_LOGGER_Init+0x24c>)
 8000a6e:	649a      	str	r2, [r3, #72]	; 0x48
 8000a70:	4b84      	ldr	r3, [pc, #528]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000a72:	220a      	movs	r2, #10
 8000a74:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
 8000a78:	4b82      	ldr	r3, [pc, #520]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000a7a:	2201      	movs	r2, #1
 8000a7c:	f883 204d 	strb.w	r2, [r3, #77]	; 0x4d
	DEFINE_DATA(data_id_eANGLE_PITCH,			(void*)&angle[axe_ePITCH],	data_format_e16B_FLOAT_2D,		"Angle Pitch",		use_format_eAS_OUTPUT);
 8000a80:	4b80      	ldr	r3, [pc, #512]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000a82:	2204      	movs	r2, #4
 8000a84:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
 8000a88:	687b      	ldr	r3, [r7, #4]
 8000a8a:	3304      	adds	r3, #4
 8000a8c:	4a7d      	ldr	r2, [pc, #500]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000a8e:	6553      	str	r3, [r2, #84]	; 0x54
 8000a90:	4b7c      	ldr	r3, [pc, #496]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000a92:	222a      	movs	r2, #42	; 0x2a
 8000a94:	f883 2059 	strb.w	r2, [r3, #89]	; 0x59
 8000a98:	4b7a      	ldr	r3, [pc, #488]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000a9a:	4a7c      	ldr	r2, [pc, #496]	; (8000c8c <DATA_LOGGER_Init+0x250>)
 8000a9c:	65da      	str	r2, [r3, #92]	; 0x5c
 8000a9e:	4b79      	ldr	r3, [pc, #484]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000aa0:	220b      	movs	r2, #11
 8000aa2:	f883 2060 	strb.w	r2, [r3, #96]	; 0x60
 8000aa6:	4b77      	ldr	r3, [pc, #476]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000aa8:	2201      	movs	r2, #1
 8000aaa:	f883 2061 	strb.w	r2, [r3, #97]	; 0x61
	DEFINE_DATA(data_id_eANGLE_YAW,				(void*)&angle[axe_eYAW],	data_format_e16B_FLOAT_2D,		"Angle Yaw",		use_format_eAS_OUTPUT);
 8000aae:	4b75      	ldr	r3, [pc, #468]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000ab0:	2205      	movs	r2, #5
 8000ab2:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8000ab6:	687b      	ldr	r3, [r7, #4]
 8000ab8:	3308      	adds	r3, #8
 8000aba:	4a72      	ldr	r2, [pc, #456]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000abc:	6693      	str	r3, [r2, #104]	; 0x68
 8000abe:	4b71      	ldr	r3, [pc, #452]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000ac0:	222a      	movs	r2, #42	; 0x2a
 8000ac2:	f883 206d 	strb.w	r2, [r3, #109]	; 0x6d
 8000ac6:	4b6f      	ldr	r3, [pc, #444]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000ac8:	4a71      	ldr	r2, [pc, #452]	; (8000c90 <DATA_LOGGER_Init+0x254>)
 8000aca:	671a      	str	r2, [r3, #112]	; 0x70
 8000acc:	4b6d      	ldr	r3, [pc, #436]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000ace:	2209      	movs	r2, #9
 8000ad0:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 8000ad4:	4b6b      	ldr	r3, [pc, #428]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000ad6:	2201      	movs	r2, #1
 8000ad8:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
	DEFINE_DATA(data_id_eGYRO_ROLL,				(void*)&gyro[axe_eROLL],	data_format_e16B_FLOAT_2D,		"Gyro Roll",		use_format_eAS_OUTPUT);
 8000adc:	4b69      	ldr	r3, [pc, #420]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000ade:	2206      	movs	r2, #6
 8000ae0:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 8000ae4:	4a67      	ldr	r2, [pc, #412]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000ae6:	68fb      	ldr	r3, [r7, #12]
 8000ae8:	67d3      	str	r3, [r2, #124]	; 0x7c
 8000aea:	4b66      	ldr	r3, [pc, #408]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000aec:	222a      	movs	r2, #42	; 0x2a
 8000aee:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
 8000af2:	4b64      	ldr	r3, [pc, #400]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000af4:	4a67      	ldr	r2, [pc, #412]	; (8000c94 <DATA_LOGGER_Init+0x258>)
 8000af6:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8000afa:	4b62      	ldr	r3, [pc, #392]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000afc:	2209      	movs	r2, #9
 8000afe:	f883 2088 	strb.w	r2, [r3, #136]	; 0x88
 8000b02:	4b60      	ldr	r3, [pc, #384]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000b04:	2201      	movs	r2, #1
 8000b06:	f883 2089 	strb.w	r2, [r3, #137]	; 0x89
	DEFINE_DATA(data_id_eGYRO_PITCH,			(void*)&gyro[axe_ePITCH],	data_format_e16B_FLOAT_2D,		"Gyro Pitch",		use_format_eAS_OUTPUT);
 8000b0a:	4b5e      	ldr	r3, [pc, #376]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000b0c:	2207      	movs	r2, #7
 8000b0e:	f883 2094 	strb.w	r2, [r3, #148]	; 0x94
 8000b12:	68fb      	ldr	r3, [r7, #12]
 8000b14:	3304      	adds	r3, #4
 8000b16:	4a5b      	ldr	r2, [pc, #364]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000b18:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8000b1c:	4b59      	ldr	r3, [pc, #356]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000b1e:	222a      	movs	r2, #42	; 0x2a
 8000b20:	f883 2095 	strb.w	r2, [r3, #149]	; 0x95
 8000b24:	4b57      	ldr	r3, [pc, #348]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000b26:	4a5c      	ldr	r2, [pc, #368]	; (8000c98 <DATA_LOGGER_Init+0x25c>)
 8000b28:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
 8000b2c:	4b55      	ldr	r3, [pc, #340]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000b2e:	220a      	movs	r2, #10
 8000b30:	f883 209c 	strb.w	r2, [r3, #156]	; 0x9c
 8000b34:	4b53      	ldr	r3, [pc, #332]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000b36:	2201      	movs	r2, #1
 8000b38:	f883 209d 	strb.w	r2, [r3, #157]	; 0x9d
	DEFINE_DATA(data_id_eGYRO_YAW,				(void*)&gyro[axe_eYAW],		data_format_e16B_FLOAT_2D,		"Gyro Yaw",			use_format_eAS_OUTPUT);
 8000b3c:	4b51      	ldr	r3, [pc, #324]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000b3e:	2208      	movs	r2, #8
 8000b40:	f883 20a8 	strb.w	r2, [r3, #168]	; 0xa8
 8000b44:	68fb      	ldr	r3, [r7, #12]
 8000b46:	3308      	adds	r3, #8
 8000b48:	4a4e      	ldr	r2, [pc, #312]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000b4a:	f8c2 30a4 	str.w	r3, [r2, #164]	; 0xa4
 8000b4e:	4b4d      	ldr	r3, [pc, #308]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000b50:	222a      	movs	r2, #42	; 0x2a
 8000b52:	f883 20a9 	strb.w	r2, [r3, #169]	; 0xa9
 8000b56:	4b4b      	ldr	r3, [pc, #300]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000b58:	4a50      	ldr	r2, [pc, #320]	; (8000c9c <DATA_LOGGER_Init+0x260>)
 8000b5a:	f8c3 20ac 	str.w	r2, [r3, #172]	; 0xac
 8000b5e:	4b49      	ldr	r3, [pc, #292]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000b60:	2208      	movs	r2, #8
 8000b62:	f883 20b0 	strb.w	r2, [r3, #176]	; 0xb0
 8000b66:	4b47      	ldr	r3, [pc, #284]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000b68:	2201      	movs	r2, #1
 8000b6a:	f883 20b1 	strb.w	r2, [r3, #177]	; 0xb1
	DEFINE_DATA(data_id_eACC_ROLL,				(void*)&acc[axe_eROLL],		data_format_e16B_FLOAT_2D,		"Gyro Roll",		use_format_eAS_OUTPUT);
 8000b6e:	4b45      	ldr	r3, [pc, #276]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000b70:	220c      	movs	r2, #12
 8000b72:	f883 20f8 	strb.w	r2, [r3, #248]	; 0xf8
 8000b76:	4a43      	ldr	r2, [pc, #268]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000b78:	68bb      	ldr	r3, [r7, #8]
 8000b7a:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
 8000b7e:	4b41      	ldr	r3, [pc, #260]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000b80:	222a      	movs	r2, #42	; 0x2a
 8000b82:	f883 20f9 	strb.w	r2, [r3, #249]	; 0xf9
 8000b86:	4b3f      	ldr	r3, [pc, #252]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000b88:	4a42      	ldr	r2, [pc, #264]	; (8000c94 <DATA_LOGGER_Init+0x258>)
 8000b8a:	f8c3 20fc 	str.w	r2, [r3, #252]	; 0xfc
 8000b8e:	4b3d      	ldr	r3, [pc, #244]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000b90:	2209      	movs	r2, #9
 8000b92:	f883 2100 	strb.w	r2, [r3, #256]	; 0x100
 8000b96:	4b3b      	ldr	r3, [pc, #236]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000b98:	2201      	movs	r2, #1
 8000b9a:	f883 2101 	strb.w	r2, [r3, #257]	; 0x101
	DEFINE_DATA(data_id_eACC_PITCH,				(void*)&acc[axe_ePITCH],	data_format_e16B_FLOAT_2D,		"Gyro Pitch",		use_format_eAS_OUTPUT);
 8000b9e:	4b39      	ldr	r3, [pc, #228]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000ba0:	220d      	movs	r2, #13
 8000ba2:	f883 210c 	strb.w	r2, [r3, #268]	; 0x10c
 8000ba6:	68bb      	ldr	r3, [r7, #8]
 8000ba8:	3304      	adds	r3, #4
 8000baa:	4a36      	ldr	r2, [pc, #216]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000bac:	f8c2 3108 	str.w	r3, [r2, #264]	; 0x108
 8000bb0:	4b34      	ldr	r3, [pc, #208]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000bb2:	222a      	movs	r2, #42	; 0x2a
 8000bb4:	f883 210d 	strb.w	r2, [r3, #269]	; 0x10d
 8000bb8:	4b32      	ldr	r3, [pc, #200]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000bba:	4a37      	ldr	r2, [pc, #220]	; (8000c98 <DATA_LOGGER_Init+0x25c>)
 8000bbc:	f8c3 2110 	str.w	r2, [r3, #272]	; 0x110
 8000bc0:	4b30      	ldr	r3, [pc, #192]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000bc2:	220a      	movs	r2, #10
 8000bc4:	f883 2114 	strb.w	r2, [r3, #276]	; 0x114
 8000bc8:	4b2e      	ldr	r3, [pc, #184]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000bca:	2201      	movs	r2, #1
 8000bcc:	f883 2115 	strb.w	r2, [r3, #277]	; 0x115
	DEFINE_DATA(data_id_eACC_YAW,				(void*)&acc[axe_eYAW],		data_format_e16B_FLOAT_2D,		"Gyro Yaw",			use_format_eAS_OUTPUT);
 8000bd0:	4b2c      	ldr	r3, [pc, #176]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000bd2:	220e      	movs	r2, #14
 8000bd4:	f883 2120 	strb.w	r2, [r3, #288]	; 0x120
 8000bd8:	68bb      	ldr	r3, [r7, #8]
 8000bda:	3308      	adds	r3, #8
 8000bdc:	4a29      	ldr	r2, [pc, #164]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000bde:	f8c2 311c 	str.w	r3, [r2, #284]	; 0x11c
 8000be2:	4b28      	ldr	r3, [pc, #160]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000be4:	222a      	movs	r2, #42	; 0x2a
 8000be6:	f883 2121 	strb.w	r2, [r3, #289]	; 0x121
 8000bea:	4b26      	ldr	r3, [pc, #152]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000bec:	4a2b      	ldr	r2, [pc, #172]	; (8000c9c <DATA_LOGGER_Init+0x260>)
 8000bee:	f8c3 2124 	str.w	r2, [r3, #292]	; 0x124
 8000bf2:	4b24      	ldr	r3, [pc, #144]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000bf4:	2208      	movs	r2, #8
 8000bf6:	f883 2128 	strb.w	r2, [r3, #296]	; 0x128
 8000bfa:	4b22      	ldr	r3, [pc, #136]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000bfc:	2201      	movs	r2, #1
 8000bfe:	f883 2129 	strb.w	r2, [r3, #297]	; 0x129

	/* -------------- Inputs ----------------- */
	DEFINE_DATA(data_id_eCONFIG_REQUEST,		NULL,	data_format_e0B_BUTTON,		"Send Configuration",	use_format_eAS_INPUT);
 8000c02:	4b20      	ldr	r3, [pc, #128]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000c04:	2200      	movs	r2, #0
 8000c06:	721a      	strb	r2, [r3, #8]
 8000c08:	4b1e      	ldr	r3, [pc, #120]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000c0a:	2200      	movs	r2, #0
 8000c0c:	605a      	str	r2, [r3, #4]
 8000c0e:	4b1d      	ldr	r3, [pc, #116]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000c10:	2200      	movs	r2, #0
 8000c12:	725a      	strb	r2, [r3, #9]
 8000c14:	4b1b      	ldr	r3, [pc, #108]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000c16:	4a22      	ldr	r2, [pc, #136]	; (8000ca0 <DATA_LOGGER_Init+0x264>)
 8000c18:	60da      	str	r2, [r3, #12]
 8000c1a:	4b1a      	ldr	r3, [pc, #104]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000c1c:	2212      	movs	r2, #18
 8000c1e:	741a      	strb	r2, [r3, #16]
 8000c20:	4b18      	ldr	r3, [pc, #96]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000c22:	2202      	movs	r2, #2
 8000c24:	745a      	strb	r2, [r3, #17]
	DEFINE_DATA(data_id_eSTART_TRANSFER,		NULL,	data_format_e0B_BUTTON,		"Start Transfer",		use_format_eAS_INPUT);
 8000c26:	4b17      	ldr	r3, [pc, #92]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000c28:	2201      	movs	r2, #1
 8000c2a:	771a      	strb	r2, [r3, #28]
 8000c2c:	4b15      	ldr	r3, [pc, #84]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000c2e:	2200      	movs	r2, #0
 8000c30:	619a      	str	r2, [r3, #24]
 8000c32:	4b14      	ldr	r3, [pc, #80]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000c34:	2200      	movs	r2, #0
 8000c36:	775a      	strb	r2, [r3, #29]
 8000c38:	4b12      	ldr	r3, [pc, #72]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000c3a:	4a1a      	ldr	r2, [pc, #104]	; (8000ca4 <DATA_LOGGER_Init+0x268>)
 8000c3c:	621a      	str	r2, [r3, #32]
 8000c3e:	4b11      	ldr	r3, [pc, #68]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000c40:	220e      	movs	r2, #14
 8000c42:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8000c46:	4b0f      	ldr	r3, [pc, #60]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000c48:	2202      	movs	r2, #2
 8000c4a:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
	DEFINE_DATA(data_id_eSTOP_TRANSFER,			NULL,	data_format_e0B_BUTTON,		"Stop Transfer",		use_format_eAS_INPUT);
 8000c4e:	4b0d      	ldr	r3, [pc, #52]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000c50:	2202      	movs	r2, #2
 8000c52:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
 8000c56:	4b0b      	ldr	r3, [pc, #44]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000c58:	2200      	movs	r2, #0
 8000c5a:	62da      	str	r2, [r3, #44]	; 0x2c
 8000c5c:	4b09      	ldr	r3, [pc, #36]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000c5e:	2200      	movs	r2, #0
 8000c60:	f883 2031 	strb.w	r2, [r3, #49]	; 0x31
 8000c64:	4b07      	ldr	r3, [pc, #28]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000c66:	4a10      	ldr	r2, [pc, #64]	; (8000ca8 <DATA_LOGGER_Init+0x26c>)
 8000c68:	635a      	str	r2, [r3, #52]	; 0x34
 8000c6a:	4b06      	ldr	r3, [pc, #24]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000c6c:	220d      	movs	r2, #13
 8000c6e:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8000c72:	4b04      	ldr	r3, [pc, #16]	; (8000c84 <DATA_LOGGER_Init+0x248>)
 8000c74:	2202      	movs	r2, #2
 8000c76:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
}
 8000c7a:	bf00      	nop
 8000c7c:	3710      	adds	r7, #16
 8000c7e:	46bd      	mov	sp, r7
 8000c80:	bd80      	pop	{r7, pc}
 8000c82:	bf00      	nop
 8000c84:	20000174 	.word	0x20000174
 8000c88:	08009270 	.word	0x08009270
 8000c8c:	0800927c 	.word	0x0800927c
 8000c90:	08009288 	.word	0x08009288
 8000c94:	08009294 	.word	0x08009294
 8000c98:	080092a0 	.word	0x080092a0
 8000c9c:	080092ac 	.word	0x080092ac
 8000ca0:	080092b8 	.word	0x080092b8
 8000ca4:	080092cc 	.word	0x080092cc
 8000ca8:	080092dc 	.word	0x080092dc

08000cac <DATA_LOGGER_Start>:
/*
 * @brief Request to start logging data
 */
void DATA_LOGGER_Start()
{
 8000cac:	b480      	push	{r7}
 8000cae:	af00      	add	r7, sp, #0
	start_flag = TRUE;
 8000cb0:	4b03      	ldr	r3, [pc, #12]	; (8000cc0 <DATA_LOGGER_Start+0x14>)
 8000cb2:	2201      	movs	r2, #1
 8000cb4:	701a      	strb	r2, [r3, #0]
}
 8000cb6:	bf00      	nop
 8000cb8:	46bd      	mov	sp, r7
 8000cba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000cbe:	4770      	bx	lr
 8000cc0:	200002a0 	.word	0x200002a0

08000cc4 <DATA_LOGGER_Stop>:
/*
 * @brief Request to stop logging data
 */
void DATA_LOGGER_Stop()
{
 8000cc4:	b480      	push	{r7}
 8000cc6:	af00      	add	r7, sp, #0
	stop_flag = TRUE;
 8000cc8:	4b03      	ldr	r3, [pc, #12]	; (8000cd8 <DATA_LOGGER_Stop+0x14>)
 8000cca:	2201      	movs	r2, #1
 8000ccc:	701a      	strb	r2, [r3, #0]
}
 8000cce:	bf00      	nop
 8000cd0:	46bd      	mov	sp, r7
 8000cd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000cd6:	4770      	bx	lr
 8000cd8:	200002a2 	.word	0x200002a2

08000cdc <DATA_LOGGER_Main>:

/*
 * @brief Call the state machine and the uart parser
 */
void DATA_LOGGER_Main(void)
{
 8000cdc:	b580      	push	{r7, lr}
 8000cde:	af00      	add	r7, sp, #0
	state_machine();
 8000ce0:	f000 fab0 	bl	8001244 <state_machine>
	parse_uart();
 8000ce4:	f000 fbc0 	bl	8001468 <parse_uart>
}
 8000ce8:	bf00      	nop
 8000cea:	bd80      	pop	{r7, pc}

08000cec <DATA_LOGGER_Reception>:
/*
 * @brief Parse input data
 * @param input_buffer Buffer to use to parse the data
 */
void DATA_LOGGER_Reception(uint8_t * input_buffer)
{
 8000cec:	b580      	push	{r7, lr}
 8000cee:	b084      	sub	sp, #16
 8000cf0:	af00      	add	r7, sp, #0
 8000cf2:	6078      	str	r0, [r7, #4]
	uint8_t id = input_buffer[0];
 8000cf4:	687b      	ldr	r3, [r7, #4]
 8000cf6:	781b      	ldrb	r3, [r3, #0]
 8000cf8:	73fb      	strb	r3, [r7, #15]
	uint16_t tmp_uint_16 = 0 ;
 8000cfa:	2300      	movs	r3, #0
 8000cfc:	81bb      	strh	r3, [r7, #12]
	int16_t tmp_int_16 = 0;
 8000cfe:	2300      	movs	r3, #0
 8000d00:	817b      	strh	r3, [r7, #10]
	switch(data_list[id].format)
 8000d02:	7bfa      	ldrb	r2, [r7, #15]
 8000d04:	4954      	ldr	r1, [pc, #336]	; (8000e58 <DATA_LOGGER_Reception+0x16c>)
 8000d06:	4613      	mov	r3, r2
 8000d08:	009b      	lsls	r3, r3, #2
 8000d0a:	4413      	add	r3, r2
 8000d0c:	009b      	lsls	r3, r3, #2
 8000d0e:	440b      	add	r3, r1
 8000d10:	3309      	adds	r3, #9
 8000d12:	781b      	ldrb	r3, [r3, #0]
 8000d14:	2b2d      	cmp	r3, #45	; 0x2d
 8000d16:	f200 809a 	bhi.w	8000e4e <DATA_LOGGER_Reception+0x162>
 8000d1a:	a201      	add	r2, pc, #4	; (adr r2, 8000d20 <DATA_LOGGER_Reception+0x34>)
 8000d1c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000d20:	08000dd9 	.word	0x08000dd9
 8000d24:	08000e4f 	.word	0x08000e4f
 8000d28:	08000e4f 	.word	0x08000e4f
 8000d2c:	08000e4f 	.word	0x08000e4f
 8000d30:	08000e4f 	.word	0x08000e4f
 8000d34:	08000e4f 	.word	0x08000e4f
 8000d38:	08000e4f 	.word	0x08000e4f
 8000d3c:	08000e4f 	.word	0x08000e4f
 8000d40:	08000e4f 	.word	0x08000e4f
 8000d44:	08000e4f 	.word	0x08000e4f
 8000d48:	08000e4f 	.word	0x08000e4f
 8000d4c:	08000e4f 	.word	0x08000e4f
 8000d50:	08000e4f 	.word	0x08000e4f
 8000d54:	08000e4f 	.word	0x08000e4f
 8000d58:	08000e4f 	.word	0x08000e4f
 8000d5c:	08000e4f 	.word	0x08000e4f
 8000d60:	08000e4f 	.word	0x08000e4f
 8000d64:	08000e4f 	.word	0x08000e4f
 8000d68:	08000e4f 	.word	0x08000e4f
 8000d6c:	08000e4f 	.word	0x08000e4f
 8000d70:	08000e4f 	.word	0x08000e4f
 8000d74:	08000e05 	.word	0x08000e05
 8000d78:	08000e4f 	.word	0x08000e4f
 8000d7c:	08000e4f 	.word	0x08000e4f
 8000d80:	08000e4f 	.word	0x08000e4f
 8000d84:	08000e4f 	.word	0x08000e4f
 8000d88:	08000e4f 	.word	0x08000e4f
 8000d8c:	08000e4f 	.word	0x08000e4f
 8000d90:	08000e4f 	.word	0x08000e4f
 8000d94:	08000e4f 	.word	0x08000e4f
 8000d98:	08000e4f 	.word	0x08000e4f
 8000d9c:	08000e4f 	.word	0x08000e4f
 8000da0:	08000e4f 	.word	0x08000e4f
 8000da4:	08000e4f 	.word	0x08000e4f
 8000da8:	08000e4f 	.word	0x08000e4f
 8000dac:	08000e4f 	.word	0x08000e4f
 8000db0:	08000e4f 	.word	0x08000e4f
 8000db4:	08000e4f 	.word	0x08000e4f
 8000db8:	08000e4f 	.word	0x08000e4f
 8000dbc:	08000e4f 	.word	0x08000e4f
 8000dc0:	08000e4f 	.word	0x08000e4f
 8000dc4:	08000e4f 	.word	0x08000e4f
 8000dc8:	08000e4f 	.word	0x08000e4f
 8000dcc:	08000e4f 	.word	0x08000e4f
 8000dd0:	08000e31 	.word	0x08000e31
 8000dd4:	08000e13 	.word	0x08000e13
	{
		case data_format_e0B_BUTTON:
			/* Link an action to each id */
			switch(id)
 8000dd8:	7bfb      	ldrb	r3, [r7, #15]
 8000dda:	2b02      	cmp	r3, #2
 8000ddc:	d00d      	beq.n	8000dfa <DATA_LOGGER_Reception+0x10e>
 8000dde:	2b02      	cmp	r3, #2
 8000de0:	dc0e      	bgt.n	8000e00 <DATA_LOGGER_Reception+0x114>
 8000de2:	2b00      	cmp	r3, #0
 8000de4:	d002      	beq.n	8000dec <DATA_LOGGER_Reception+0x100>
 8000de6:	2b01      	cmp	r3, #1
 8000de8:	d004      	beq.n	8000df4 <DATA_LOGGER_Reception+0x108>
			{
				default:
					break;
 8000dea:	e009      	b.n	8000e00 <DATA_LOGGER_Reception+0x114>
				case data_id_eCONFIG_REQUEST:
					send_config_flag = TRUE;
 8000dec:	4b1b      	ldr	r3, [pc, #108]	; (8000e5c <DATA_LOGGER_Reception+0x170>)
 8000dee:	2201      	movs	r2, #1
 8000df0:	701a      	strb	r2, [r3, #0]
					break;
 8000df2:	e006      	b.n	8000e02 <DATA_LOGGER_Reception+0x116>
				case data_id_eSTART_TRANSFER:
					DATA_LOGGER_Start();
 8000df4:	f7ff ff5a 	bl	8000cac <DATA_LOGGER_Start>
					break;
 8000df8:	e003      	b.n	8000e02 <DATA_LOGGER_Reception+0x116>
				case data_id_eSTOP_TRANSFER:
					DATA_LOGGER_Stop();
 8000dfa:	f7ff ff63 	bl	8000cc4 <DATA_LOGGER_Stop>
					break;
 8000dfe:	e000      	b.n	8000e02 <DATA_LOGGER_Reception+0x116>
					break;
 8000e00:	bf00      	nop
			}
			break;
 8000e02:	e025      	b.n	8000e50 <DATA_LOGGER_Reception+0x164>
		case data_format_e8B_FLOAT_0D:
			break;
		case data_format_e8B_FLOAT_1D:
			break;
		case data_format_e8B_PWM:
			tmp_uint_16 = 4*input_buffer[1];
 8000e04:	687b      	ldr	r3, [r7, #4]
 8000e06:	3301      	adds	r3, #1
 8000e08:	781b      	ldrb	r3, [r3, #0]
 8000e0a:	b29b      	uxth	r3, r3
 8000e0c:	009b      	lsls	r3, r3, #2
 8000e0e:	81bb      	strh	r3, [r7, #12]
			break;
 8000e10:	e01e      	b.n	8000e50 <DATA_LOGGER_Reception+0x164>
		case data_format_e16B_INT16:
			tmp_int_16 = (int16_t)input_buffer[1] << 8;
 8000e12:	687b      	ldr	r3, [r7, #4]
 8000e14:	3301      	adds	r3, #1
 8000e16:	781b      	ldrb	r3, [r3, #0]
 8000e18:	021b      	lsls	r3, r3, #8
 8000e1a:	817b      	strh	r3, [r7, #10]
			tmp_int_16 += (int16_t)input_buffer[2];
 8000e1c:	687b      	ldr	r3, [r7, #4]
 8000e1e:	3302      	adds	r3, #2
 8000e20:	781b      	ldrb	r3, [r3, #0]
 8000e22:	b29a      	uxth	r2, r3
 8000e24:	897b      	ldrh	r3, [r7, #10]
 8000e26:	4413      	add	r3, r2
 8000e28:	b29b      	uxth	r3, r3
 8000e2a:	817b      	strh	r3, [r7, #10]
			switch(id)
			{
				default:
					break;
 8000e2c:	bf00      	nop
			}

			break;
 8000e2e:	e00f      	b.n	8000e50 <DATA_LOGGER_Reception+0x164>
		case data_format_e16B_UINT16:
			tmp_uint_16 = (uint16_t)input_buffer[1] << 8;
 8000e30:	687b      	ldr	r3, [r7, #4]
 8000e32:	3301      	adds	r3, #1
 8000e34:	781b      	ldrb	r3, [r3, #0]
 8000e36:	b29b      	uxth	r3, r3
 8000e38:	021b      	lsls	r3, r3, #8
 8000e3a:	81bb      	strh	r3, [r7, #12]
			tmp_uint_16 += (uint16_t)input_buffer[2];
 8000e3c:	687b      	ldr	r3, [r7, #4]
 8000e3e:	3302      	adds	r3, #2
 8000e40:	781b      	ldrb	r3, [r3, #0]
 8000e42:	b29a      	uxth	r2, r3
 8000e44:	89bb      	ldrh	r3, [r7, #12]
 8000e46:	4413      	add	r3, r2
 8000e48:	81bb      	strh	r3, [r7, #12]
			switch(id)
			{
				default:
					break;
 8000e4a:	bf00      	nop
			}

		case data_format_e16B_FLOAT_1D:
			break;
 8000e4c:	e000      	b.n	8000e50 <DATA_LOGGER_Reception+0x164>
		default:
			break;
 8000e4e:	bf00      	nop

	}
}
 8000e50:	bf00      	nop
 8000e52:	3710      	adds	r7, #16
 8000e54:	46bd      	mov	sp, r7
 8000e56:	bd80      	pop	{r7, pc}
 8000e58:	20000174 	.word	0x20000174
 8000e5c:	200002a1 	.word	0x200002a1

08000e60 <DATA_LOGGER_Get_Data_Value>:
 * @param id Id of the data
 * @param buffer Buffer array
 * @return Number of bytes written
 */
uint8_t DATA_LOGGER_Get_Data_Value(data_id_e id, uint8_t * buffer)
{
 8000e60:	b480      	push	{r7}
 8000e62:	b087      	sub	sp, #28
 8000e64:	af00      	add	r7, sp, #0
 8000e66:	4603      	mov	r3, r0
 8000e68:	60b9      	str	r1, [r7, #8]
 8000e6a:	73fb      	strb	r3, [r7, #15]

	/* Local temporary variables */
	int16_t tmp_16 = 0;
 8000e6c:	2300      	movs	r3, #0
 8000e6e:	82fb      	strh	r3, [r7, #22]
	float tmp_float = 0;
 8000e70:	f04f 0300 	mov.w	r3, #0
 8000e74:	613b      	str	r3, [r7, #16]

	/* First byte is reserved for the id */
	buffer[0] = id ;
 8000e76:	68bb      	ldr	r3, [r7, #8]
 8000e78:	7bfa      	ldrb	r2, [r7, #15]
 8000e7a:	701a      	strb	r2, [r3, #0]
	switch(data_list[id].format)
 8000e7c:	7bfa      	ldrb	r2, [r7, #15]
 8000e7e:	498f      	ldr	r1, [pc, #572]	; (80010bc <DATA_LOGGER_Get_Data_Value+0x25c>)
 8000e80:	4613      	mov	r3, r2
 8000e82:	009b      	lsls	r3, r3, #2
 8000e84:	4413      	add	r3, r2
 8000e86:	009b      	lsls	r3, r3, #2
 8000e88:	440b      	add	r3, r1
 8000e8a:	3309      	adds	r3, #9
 8000e8c:	781b      	ldrb	r3, [r3, #0]
 8000e8e:	3b14      	subs	r3, #20
 8000e90:	2b19      	cmp	r3, #25
 8000e92:	f200 80fb 	bhi.w	800108c <DATA_LOGGER_Get_Data_Value+0x22c>
 8000e96:	a201      	add	r2, pc, #4	; (adr r2, 8000e9c <DATA_LOGGER_Get_Data_Value+0x3c>)
 8000e98:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000e9c:	08000f05 	.word	0x08000f05
 8000ea0:	0800108d 	.word	0x0800108d
 8000ea4:	0800108d 	.word	0x0800108d
 8000ea8:	08000f21 	.word	0x08000f21
 8000eac:	0800108d 	.word	0x0800108d
 8000eb0:	0800108d 	.word	0x0800108d
 8000eb4:	0800108d 	.word	0x0800108d
 8000eb8:	0800108d 	.word	0x0800108d
 8000ebc:	0800108d 	.word	0x0800108d
 8000ec0:	0800108d 	.word	0x0800108d
 8000ec4:	0800108d 	.word	0x0800108d
 8000ec8:	0800108d 	.word	0x0800108d
 8000ecc:	0800108d 	.word	0x0800108d
 8000ed0:	0800108d 	.word	0x0800108d
 8000ed4:	0800108d 	.word	0x0800108d
 8000ed8:	0800108d 	.word	0x0800108d
 8000edc:	0800108d 	.word	0x0800108d
 8000ee0:	0800108d 	.word	0x0800108d
 8000ee4:	0800108d 	.word	0x0800108d
 8000ee8:	0800108d 	.word	0x0800108d
 8000eec:	0800108d 	.word	0x0800108d
 8000ef0:	08000f51 	.word	0x08000f51
 8000ef4:	08000f99 	.word	0x08000f99
 8000ef8:	08000fe1 	.word	0x08000fe1
 8000efc:	08001029 	.word	0x08001029
 8000f00:	0800105b 	.word	0x0800105b
	{
		case data_format_e8B:
			buffer[1] = *(uint8_t*)data_list[id].data ;
 8000f04:	7bfa      	ldrb	r2, [r7, #15]
 8000f06:	496d      	ldr	r1, [pc, #436]	; (80010bc <DATA_LOGGER_Get_Data_Value+0x25c>)
 8000f08:	4613      	mov	r3, r2
 8000f0a:	009b      	lsls	r3, r3, #2
 8000f0c:	4413      	add	r3, r2
 8000f0e:	009b      	lsls	r3, r3, #2
 8000f10:	440b      	add	r3, r1
 8000f12:	3304      	adds	r3, #4
 8000f14:	681a      	ldr	r2, [r3, #0]
 8000f16:	68bb      	ldr	r3, [r7, #8]
 8000f18:	3301      	adds	r3, #1
 8000f1a:	7812      	ldrb	r2, [r2, #0]
 8000f1c:	701a      	strb	r2, [r3, #0]
			break;
 8000f1e:	e0b6      	b.n	800108e <DATA_LOGGER_Get_Data_Value+0x22e>
		case data_format_e8B_PWM:
			break;
		case data_format_e8B_FLOAT_0D:
			tmp_float = *(float*)data_list[id].data ;
 8000f20:	7bfa      	ldrb	r2, [r7, #15]
 8000f22:	4966      	ldr	r1, [pc, #408]	; (80010bc <DATA_LOGGER_Get_Data_Value+0x25c>)
 8000f24:	4613      	mov	r3, r2
 8000f26:	009b      	lsls	r3, r3, #2
 8000f28:	4413      	add	r3, r2
 8000f2a:	009b      	lsls	r3, r3, #2
 8000f2c:	440b      	add	r3, r1
 8000f2e:	3304      	adds	r3, #4
 8000f30:	681b      	ldr	r3, [r3, #0]
 8000f32:	681b      	ldr	r3, [r3, #0]
 8000f34:	613b      	str	r3, [r7, #16]
			buffer[1] = (int8_t)tmp_float;
 8000f36:	edd7 7a04 	vldr	s15, [r7, #16]
 8000f3a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8000f3e:	edc7 7a01 	vstr	s15, [r7, #4]
 8000f42:	793b      	ldrb	r3, [r7, #4]
 8000f44:	b25a      	sxtb	r2, r3
 8000f46:	68bb      	ldr	r3, [r7, #8]
 8000f48:	3301      	adds	r3, #1
 8000f4a:	b2d2      	uxtb	r2, r2
 8000f4c:	701a      	strb	r2, [r3, #0]
			break;
 8000f4e:	e09e      	b.n	800108e <DATA_LOGGER_Get_Data_Value+0x22e>
		case data_format_e8B_FLOAT_1D:
			break;
		case data_format_e16B:
			break;
		case data_format_e16B_FLOAT_1D:
			tmp_float = *(float*)data_list[id].data;
 8000f50:	7bfa      	ldrb	r2, [r7, #15]
 8000f52:	495a      	ldr	r1, [pc, #360]	; (80010bc <DATA_LOGGER_Get_Data_Value+0x25c>)
 8000f54:	4613      	mov	r3, r2
 8000f56:	009b      	lsls	r3, r3, #2
 8000f58:	4413      	add	r3, r2
 8000f5a:	009b      	lsls	r3, r3, #2
 8000f5c:	440b      	add	r3, r1
 8000f5e:	3304      	adds	r3, #4
 8000f60:	681b      	ldr	r3, [r3, #0]
 8000f62:	681b      	ldr	r3, [r3, #0]
 8000f64:	613b      	str	r3, [r7, #16]
			tmp_16 = tmp_float * 10;
 8000f66:	edd7 7a04 	vldr	s15, [r7, #16]
 8000f6a:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8000f6e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000f72:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8000f76:	ee17 3a90 	vmov	r3, s15
 8000f7a:	82fb      	strh	r3, [r7, #22]
			buffer[1] = (uint8_t)((tmp_16 >> 8) & 0b11111111) ;
 8000f7c:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 8000f80:	121b      	asrs	r3, r3, #8
 8000f82:	b21a      	sxth	r2, r3
 8000f84:	68bb      	ldr	r3, [r7, #8]
 8000f86:	3301      	adds	r3, #1
 8000f88:	b2d2      	uxtb	r2, r2
 8000f8a:	701a      	strb	r2, [r3, #0]
			buffer[2] = (uint8_t)(tmp_16 & 0b11111111);
 8000f8c:	68bb      	ldr	r3, [r7, #8]
 8000f8e:	3302      	adds	r3, #2
 8000f90:	8afa      	ldrh	r2, [r7, #22]
 8000f92:	b2d2      	uxtb	r2, r2
 8000f94:	701a      	strb	r2, [r3, #0]
			break;
 8000f96:	e07a      	b.n	800108e <DATA_LOGGER_Get_Data_Value+0x22e>
		case data_format_e16B_FLOAT_2D:
			tmp_float = *(float*)data_list[id].data;
 8000f98:	7bfa      	ldrb	r2, [r7, #15]
 8000f9a:	4948      	ldr	r1, [pc, #288]	; (80010bc <DATA_LOGGER_Get_Data_Value+0x25c>)
 8000f9c:	4613      	mov	r3, r2
 8000f9e:	009b      	lsls	r3, r3, #2
 8000fa0:	4413      	add	r3, r2
 8000fa2:	009b      	lsls	r3, r3, #2
 8000fa4:	440b      	add	r3, r1
 8000fa6:	3304      	adds	r3, #4
 8000fa8:	681b      	ldr	r3, [r3, #0]
 8000faa:	681b      	ldr	r3, [r3, #0]
 8000fac:	613b      	str	r3, [r7, #16]
			tmp_16 = tmp_float * 100;
 8000fae:	edd7 7a04 	vldr	s15, [r7, #16]
 8000fb2:	ed9f 7a43 	vldr	s14, [pc, #268]	; 80010c0 <DATA_LOGGER_Get_Data_Value+0x260>
 8000fb6:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000fba:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8000fbe:	ee17 3a90 	vmov	r3, s15
 8000fc2:	82fb      	strh	r3, [r7, #22]
			buffer[1] = (uint8_t)((tmp_16 >> 8) & 0b11111111) ;
 8000fc4:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 8000fc8:	121b      	asrs	r3, r3, #8
 8000fca:	b21a      	sxth	r2, r3
 8000fcc:	68bb      	ldr	r3, [r7, #8]
 8000fce:	3301      	adds	r3, #1
 8000fd0:	b2d2      	uxtb	r2, r2
 8000fd2:	701a      	strb	r2, [r3, #0]
			buffer[2] = (uint8_t)(tmp_16 & 0b11111111);
 8000fd4:	68bb      	ldr	r3, [r7, #8]
 8000fd6:	3302      	adds	r3, #2
 8000fd8:	8afa      	ldrh	r2, [r7, #22]
 8000fda:	b2d2      	uxtb	r2, r2
 8000fdc:	701a      	strb	r2, [r3, #0]
			break;
 8000fde:	e056      	b.n	800108e <DATA_LOGGER_Get_Data_Value+0x22e>
		case data_format_e16B_FLOAT_3D:
			tmp_float = *(float*)data_list[id].data;
 8000fe0:	7bfa      	ldrb	r2, [r7, #15]
 8000fe2:	4936      	ldr	r1, [pc, #216]	; (80010bc <DATA_LOGGER_Get_Data_Value+0x25c>)
 8000fe4:	4613      	mov	r3, r2
 8000fe6:	009b      	lsls	r3, r3, #2
 8000fe8:	4413      	add	r3, r2
 8000fea:	009b      	lsls	r3, r3, #2
 8000fec:	440b      	add	r3, r1
 8000fee:	3304      	adds	r3, #4
 8000ff0:	681b      	ldr	r3, [r3, #0]
 8000ff2:	681b      	ldr	r3, [r3, #0]
 8000ff4:	613b      	str	r3, [r7, #16]
			tmp_16 = tmp_float * 1000;
 8000ff6:	edd7 7a04 	vldr	s15, [r7, #16]
 8000ffa:	ed9f 7a32 	vldr	s14, [pc, #200]	; 80010c4 <DATA_LOGGER_Get_Data_Value+0x264>
 8000ffe:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001002:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001006:	ee17 3a90 	vmov	r3, s15
 800100a:	82fb      	strh	r3, [r7, #22]
			buffer[1] = (uint8_t)((tmp_16 >> 8) & 0b11111111) ;
 800100c:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 8001010:	121b      	asrs	r3, r3, #8
 8001012:	b21a      	sxth	r2, r3
 8001014:	68bb      	ldr	r3, [r7, #8]
 8001016:	3301      	adds	r3, #1
 8001018:	b2d2      	uxtb	r2, r2
 800101a:	701a      	strb	r2, [r3, #0]
			buffer[2] = (uint8_t)(tmp_16 & 0b11111111);
 800101c:	68bb      	ldr	r3, [r7, #8]
 800101e:	3302      	adds	r3, #2
 8001020:	8afa      	ldrh	r2, [r7, #22]
 8001022:	b2d2      	uxtb	r2, r2
 8001024:	701a      	strb	r2, [r3, #0]
			break;
 8001026:	e032      	b.n	800108e <DATA_LOGGER_Get_Data_Value+0x22e>
		case data_format_e16B_UINT16:
			tmp_16 = *(uint16_t*)data_list[id].data ;
 8001028:	7bfa      	ldrb	r2, [r7, #15]
 800102a:	4924      	ldr	r1, [pc, #144]	; (80010bc <DATA_LOGGER_Get_Data_Value+0x25c>)
 800102c:	4613      	mov	r3, r2
 800102e:	009b      	lsls	r3, r3, #2
 8001030:	4413      	add	r3, r2
 8001032:	009b      	lsls	r3, r3, #2
 8001034:	440b      	add	r3, r1
 8001036:	3304      	adds	r3, #4
 8001038:	681b      	ldr	r3, [r3, #0]
 800103a:	881b      	ldrh	r3, [r3, #0]
 800103c:	82fb      	strh	r3, [r7, #22]
			buffer[1] = (uint8_t)((tmp_16 >> 8) & 0b11111111) ;
 800103e:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 8001042:	121b      	asrs	r3, r3, #8
 8001044:	b21a      	sxth	r2, r3
 8001046:	68bb      	ldr	r3, [r7, #8]
 8001048:	3301      	adds	r3, #1
 800104a:	b2d2      	uxtb	r2, r2
 800104c:	701a      	strb	r2, [r3, #0]
			buffer[2] = (uint8_t)(tmp_16 & 0b11111111);
 800104e:	68bb      	ldr	r3, [r7, #8]
 8001050:	3302      	adds	r3, #2
 8001052:	8afa      	ldrh	r2, [r7, #22]
 8001054:	b2d2      	uxtb	r2, r2
 8001056:	701a      	strb	r2, [r3, #0]
			break;
 8001058:	e019      	b.n	800108e <DATA_LOGGER_Get_Data_Value+0x22e>
		case data_format_e16B_INT16:
			tmp_16 = *(int16_t*)data_list[id].data ;
 800105a:	7bfa      	ldrb	r2, [r7, #15]
 800105c:	4917      	ldr	r1, [pc, #92]	; (80010bc <DATA_LOGGER_Get_Data_Value+0x25c>)
 800105e:	4613      	mov	r3, r2
 8001060:	009b      	lsls	r3, r3, #2
 8001062:	4413      	add	r3, r2
 8001064:	009b      	lsls	r3, r3, #2
 8001066:	440b      	add	r3, r1
 8001068:	3304      	adds	r3, #4
 800106a:	681b      	ldr	r3, [r3, #0]
 800106c:	881b      	ldrh	r3, [r3, #0]
 800106e:	82fb      	strh	r3, [r7, #22]
			buffer[1] = (uint8_t)((tmp_16 >> 8) & 0b11111111) ;
 8001070:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 8001074:	121b      	asrs	r3, r3, #8
 8001076:	b21a      	sxth	r2, r3
 8001078:	68bb      	ldr	r3, [r7, #8]
 800107a:	3301      	adds	r3, #1
 800107c:	b2d2      	uxtb	r2, r2
 800107e:	701a      	strb	r2, [r3, #0]
			buffer[2] = (uint8_t)(tmp_16 & 0b11111111);
 8001080:	68bb      	ldr	r3, [r7, #8]
 8001082:	3302      	adds	r3, #2
 8001084:	8afa      	ldrh	r2, [r7, #22]
 8001086:	b2d2      	uxtb	r2, r2
 8001088:	701a      	strb	r2, [r3, #0]
			break;
 800108a:	e000      	b.n	800108e <DATA_LOGGER_Get_Data_Value+0x22e>
		default:
			break;
 800108c:	bf00      	nop
	}
	/* Length of the data array */
	return (data_list[id].format / 20) + 1;
 800108e:	7bfa      	ldrb	r2, [r7, #15]
 8001090:	490a      	ldr	r1, [pc, #40]	; (80010bc <DATA_LOGGER_Get_Data_Value+0x25c>)
 8001092:	4613      	mov	r3, r2
 8001094:	009b      	lsls	r3, r3, #2
 8001096:	4413      	add	r3, r2
 8001098:	009b      	lsls	r3, r3, #2
 800109a:	440b      	add	r3, r1
 800109c:	3309      	adds	r3, #9
 800109e:	781b      	ldrb	r3, [r3, #0]
 80010a0:	4a09      	ldr	r2, [pc, #36]	; (80010c8 <DATA_LOGGER_Get_Data_Value+0x268>)
 80010a2:	fba2 2303 	umull	r2, r3, r2, r3
 80010a6:	091b      	lsrs	r3, r3, #4
 80010a8:	b2db      	uxtb	r3, r3
 80010aa:	3301      	adds	r3, #1
 80010ac:	b2db      	uxtb	r3, r3
}
 80010ae:	4618      	mov	r0, r3
 80010b0:	371c      	adds	r7, #28
 80010b2:	46bd      	mov	sp, r7
 80010b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010b8:	4770      	bx	lr
 80010ba:	bf00      	nop
 80010bc:	20000174 	.word	0x20000174
 80010c0:	42c80000 	.word	0x42c80000
 80010c4:	447a0000 	.word	0x447a0000
 80010c8:	cccccccd 	.word	0xcccccccd

080010cc <DATA_LOGGER_Get_Data_Config>:
 * @param id Id of the data
 * @param buffer Buffer array to write the configuration into
 * @return Number of bytes we wrote in the buffer
 */
uint8_t DATA_LOGGER_Get_Data_Config(data_id_e id, uint8_t * buffer)
{
 80010cc:	b590      	push	{r4, r7, lr}
 80010ce:	b083      	sub	sp, #12
 80010d0:	af00      	add	r7, sp, #0
 80010d2:	4603      	mov	r3, r0
 80010d4:	6039      	str	r1, [r7, #0]
 80010d6:	71fb      	strb	r3, [r7, #7]
	/* We send a configuration so it must start with 0xFF */
	buffer[0] = 0xFF;
 80010d8:	683b      	ldr	r3, [r7, #0]
 80010da:	22ff      	movs	r2, #255	; 0xff
 80010dc:	701a      	strb	r2, [r3, #0]
	/* Then we put the length of the name */
	buffer[1] = data_list[id].len_name;
 80010de:	79fa      	ldrb	r2, [r7, #7]
 80010e0:	683b      	ldr	r3, [r7, #0]
 80010e2:	1c59      	adds	r1, r3, #1
 80010e4:	4828      	ldr	r0, [pc, #160]	; (8001188 <DATA_LOGGER_Get_Data_Config+0xbc>)
 80010e6:	4613      	mov	r3, r2
 80010e8:	009b      	lsls	r3, r3, #2
 80010ea:	4413      	add	r3, r2
 80010ec:	009b      	lsls	r3, r3, #2
 80010ee:	4403      	add	r3, r0
 80010f0:	3310      	adds	r3, #16
 80010f2:	781b      	ldrb	r3, [r3, #0]
 80010f4:	700b      	strb	r3, [r1, #0]
	/* Then we write the data format */
	buffer[2] = data_list[id].format;
 80010f6:	79fa      	ldrb	r2, [r7, #7]
 80010f8:	683b      	ldr	r3, [r7, #0]
 80010fa:	1c99      	adds	r1, r3, #2
 80010fc:	4822      	ldr	r0, [pc, #136]	; (8001188 <DATA_LOGGER_Get_Data_Config+0xbc>)
 80010fe:	4613      	mov	r3, r2
 8001100:	009b      	lsls	r3, r3, #2
 8001102:	4413      	add	r3, r2
 8001104:	009b      	lsls	r3, r3, #2
 8001106:	4403      	add	r3, r0
 8001108:	3309      	adds	r3, #9
 800110a:	781b      	ldrb	r3, [r3, #0]
 800110c:	700b      	strb	r3, [r1, #0]
	/* Then the id of the data */
	buffer[3] = id;
 800110e:	683b      	ldr	r3, [r7, #0]
 8001110:	3303      	adds	r3, #3
 8001112:	79fa      	ldrb	r2, [r7, #7]
 8001114:	701a      	strb	r2, [r3, #0]
	/* When the data is used as output, we add 128 to the id */
	if(data_list[id].use_format == use_format_eAS_INPUT)
 8001116:	79fa      	ldrb	r2, [r7, #7]
 8001118:	491b      	ldr	r1, [pc, #108]	; (8001188 <DATA_LOGGER_Get_Data_Config+0xbc>)
 800111a:	4613      	mov	r3, r2
 800111c:	009b      	lsls	r3, r3, #2
 800111e:	4413      	add	r3, r2
 8001120:	009b      	lsls	r3, r3, #2
 8001122:	440b      	add	r3, r1
 8001124:	3311      	adds	r3, #17
 8001126:	781b      	ldrb	r3, [r3, #0]
 8001128:	2b02      	cmp	r3, #2
 800112a:	d107      	bne.n	800113c <DATA_LOGGER_Get_Data_Config+0x70>
	{
		buffer[3] += 128 ;
 800112c:	683b      	ldr	r3, [r7, #0]
 800112e:	3303      	adds	r3, #3
 8001130:	781a      	ldrb	r2, [r3, #0]
 8001132:	683b      	ldr	r3, [r7, #0]
 8001134:	3303      	adds	r3, #3
 8001136:	3a80      	subs	r2, #128	; 0x80
 8001138:	b2d2      	uxtb	r2, r2
 800113a:	701a      	strb	r2, [r3, #0]
	}
	/* Finally we write the name */
	memcpy(&buffer[4], data_list[id].name, data_list[id].len_name);
 800113c:	683b      	ldr	r3, [r7, #0]
 800113e:	1d18      	adds	r0, r3, #4
 8001140:	79fa      	ldrb	r2, [r7, #7]
 8001142:	4911      	ldr	r1, [pc, #68]	; (8001188 <DATA_LOGGER_Get_Data_Config+0xbc>)
 8001144:	4613      	mov	r3, r2
 8001146:	009b      	lsls	r3, r3, #2
 8001148:	4413      	add	r3, r2
 800114a:	009b      	lsls	r3, r3, #2
 800114c:	440b      	add	r3, r1
 800114e:	330c      	adds	r3, #12
 8001150:	6819      	ldr	r1, [r3, #0]
 8001152:	79fa      	ldrb	r2, [r7, #7]
 8001154:	4c0c      	ldr	r4, [pc, #48]	; (8001188 <DATA_LOGGER_Get_Data_Config+0xbc>)
 8001156:	4613      	mov	r3, r2
 8001158:	009b      	lsls	r3, r3, #2
 800115a:	4413      	add	r3, r2
 800115c:	009b      	lsls	r3, r3, #2
 800115e:	4423      	add	r3, r4
 8001160:	3310      	adds	r3, #16
 8001162:	781b      	ldrb	r3, [r3, #0]
 8001164:	461a      	mov	r2, r3
 8001166:	f007 f9ad 	bl	80084c4 <memcpy>

	return 4 + data_list[id].len_name ;
 800116a:	79fa      	ldrb	r2, [r7, #7]
 800116c:	4906      	ldr	r1, [pc, #24]	; (8001188 <DATA_LOGGER_Get_Data_Config+0xbc>)
 800116e:	4613      	mov	r3, r2
 8001170:	009b      	lsls	r3, r3, #2
 8001172:	4413      	add	r3, r2
 8001174:	009b      	lsls	r3, r3, #2
 8001176:	440b      	add	r3, r1
 8001178:	3310      	adds	r3, #16
 800117a:	781b      	ldrb	r3, [r3, #0]
 800117c:	3304      	adds	r3, #4
 800117e:	b2db      	uxtb	r3, r3
}
 8001180:	4618      	mov	r0, r3
 8001182:	370c      	adds	r7, #12
 8001184:	46bd      	mov	sp, r7
 8001186:	bd90      	pop	{r4, r7, pc}
 8001188:	20000174 	.word	0x20000174

0800118c <DATA_LOGGER_Get_Data>:
 * @brief Get data
 * @param id Id of the data
 * @return pointer to the data structure with the corresponding ID
 */
data_t * DATA_LOGGER_Get_Data(data_id_e id)
{
 800118c:	b480      	push	{r7}
 800118e:	b083      	sub	sp, #12
 8001190:	af00      	add	r7, sp, #0
 8001192:	4603      	mov	r3, r0
 8001194:	71fb      	strb	r3, [r7, #7]
	return &data_list[id];
 8001196:	79fa      	ldrb	r2, [r7, #7]
 8001198:	4613      	mov	r3, r2
 800119a:	009b      	lsls	r3, r3, #2
 800119c:	4413      	add	r3, r2
 800119e:	009b      	lsls	r3, r3, #2
 80011a0:	4a03      	ldr	r2, [pc, #12]	; (80011b0 <DATA_LOGGER_Get_Data+0x24>)
 80011a2:	4413      	add	r3, r2
}
 80011a4:	4618      	mov	r0, r3
 80011a6:	370c      	adds	r7, #12
 80011a8:	46bd      	mov	sp, r7
 80011aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011ae:	4770      	bx	lr
 80011b0:	20000174 	.word	0x20000174

080011b4 <push_data_to_uart>:
 * @brief Add the start byte and checksum to a message
 * @param buffer Data array to send
 * @param len Number of bytes to send
 */
void push_data_to_uart(uint8_t * buffer, uint8_t len)
{
 80011b4:	b580      	push	{r7, lr}
 80011b6:	b090      	sub	sp, #64	; 0x40
 80011b8:	af00      	add	r7, sp, #0
 80011ba:	6078      	str	r0, [r7, #4]
 80011bc:	460b      	mov	r3, r1
 80011be:	70fb      	strb	r3, [r7, #3]
	uint8_t buffer_new[50];
	uint32_t checksum = 0 ;
 80011c0:	2300      	movs	r3, #0
 80011c2:	63fb      	str	r3, [r7, #60]	; 0x3c
	buffer_new[0] = '$';
 80011c4:	2324      	movs	r3, #36	; 0x24
 80011c6:	723b      	strb	r3, [r7, #8]
	for(uint8_t b = 0; b < len; b++)
 80011c8:	2300      	movs	r3, #0
 80011ca:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
 80011ce:	e01d      	b.n	800120c <push_data_to_uart+0x58>
	{
		buffer_new[1 + b] = buffer[b];
 80011d0:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 80011d4:	687a      	ldr	r2, [r7, #4]
 80011d6:	441a      	add	r2, r3
 80011d8:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 80011dc:	3301      	adds	r3, #1
 80011de:	7812      	ldrb	r2, [r2, #0]
 80011e0:	f107 0140 	add.w	r1, r7, #64	; 0x40
 80011e4:	440b      	add	r3, r1
 80011e6:	f803 2c38 	strb.w	r2, [r3, #-56]
		checksum += (uint32_t)buffer_new[1 + b];
 80011ea:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 80011ee:	3301      	adds	r3, #1
 80011f0:	f107 0240 	add.w	r2, r7, #64	; 0x40
 80011f4:	4413      	add	r3, r2
 80011f6:	f813 3c38 	ldrb.w	r3, [r3, #-56]
 80011fa:	461a      	mov	r2, r3
 80011fc:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80011fe:	4413      	add	r3, r2
 8001200:	63fb      	str	r3, [r7, #60]	; 0x3c
	for(uint8_t b = 0; b < len; b++)
 8001202:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 8001206:	3301      	adds	r3, #1
 8001208:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
 800120c:	f897 203b 	ldrb.w	r2, [r7, #59]	; 0x3b
 8001210:	78fb      	ldrb	r3, [r7, #3]
 8001212:	429a      	cmp	r2, r3
 8001214:	d3dc      	bcc.n	80011d0 <push_data_to_uart+0x1c>
	}
	buffer_new[1 + len] = (uint8_t)(checksum % 256) ;
 8001216:	78fb      	ldrb	r3, [r7, #3]
 8001218:	3301      	adds	r3, #1
 800121a:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 800121c:	b2d2      	uxtb	r2, r2
 800121e:	f107 0140 	add.w	r1, r7, #64	; 0x40
 8001222:	440b      	add	r3, r1
 8001224:	f803 2c38 	strb.w	r2, [r3, #-56]
	UART_Transmit(UART_TELEMETRY, buffer_new, len+2);
 8001228:	78fb      	ldrb	r3, [r7, #3]
 800122a:	b29b      	uxth	r3, r3
 800122c:	3302      	adds	r3, #2
 800122e:	b29a      	uxth	r2, r3
 8001230:	f107 0308 	add.w	r3, r7, #8
 8001234:	4619      	mov	r1, r3
 8001236:	2000      	movs	r0, #0
 8001238:	f000 ff4c 	bl	80020d4 <UART_Transmit>
}
 800123c:	bf00      	nop
 800123e:	3740      	adds	r7, #64	; 0x40
 8001240:	46bd      	mov	sp, r7
 8001242:	bd80      	pop	{r7, pc}

08001244 <state_machine>:

/*
 * @brief data logger state machine
 */
static void state_machine(void)
{
 8001244:	b580      	push	{r7, lr}
 8001246:	b084      	sub	sp, #16
 8001248:	af00      	add	r7, sp, #0
	/* Time management for periodic transmissions */
	static uint32_t next_time_state_machine = 0;
	static uint32_t current_period = PERIODE_PING;
	uint32_t time_ms = HAL_GetTick();
 800124a:	f002 fb09 	bl	8003860 <HAL_GetTick>
 800124e:	60b8      	str	r0, [r7, #8]
	if(time_ms < next_time_state_machine)
 8001250:	4b78      	ldr	r3, [pc, #480]	; (8001434 <state_machine+0x1f0>)
 8001252:	681b      	ldr	r3, [r3, #0]
 8001254:	68ba      	ldr	r2, [r7, #8]
 8001256:	429a      	cmp	r2, r3
 8001258:	f0c0 80e6 	bcc.w	8001428 <state_machine+0x1e4>
	{
		return;
	}
	next_time_state_machine = time_ms + current_period;
 800125c:	4b76      	ldr	r3, [pc, #472]	; (8001438 <state_machine+0x1f4>)
 800125e:	681a      	ldr	r2, [r3, #0]
 8001260:	68bb      	ldr	r3, [r7, #8]
 8001262:	4413      	add	r3, r2
 8001264:	4a73      	ldr	r2, [pc, #460]	; (8001434 <state_machine+0x1f0>)
 8001266:	6013      	str	r3, [r2, #0]

	/* State machine variables */
	static data_logger_state_e state = data_logger_state_eIDLE;
	static data_logger_state_e previous_state = data_logger_state_eTRANSMIT_CONFIG ;
	bool_e entrance = previous_state != state ;
 8001268:	4b74      	ldr	r3, [pc, #464]	; (800143c <state_machine+0x1f8>)
 800126a:	781a      	ldrb	r2, [r3, #0]
 800126c:	4b74      	ldr	r3, [pc, #464]	; (8001440 <state_machine+0x1fc>)
 800126e:	781b      	ldrb	r3, [r3, #0]
 8001270:	429a      	cmp	r2, r3
 8001272:	bf14      	ite	ne
 8001274:	2301      	movne	r3, #1
 8001276:	2300      	moveq	r3, #0
 8001278:	b2db      	uxtb	r3, r3
 800127a:	71fb      	strb	r3, [r7, #7]
	previous_state = state ;
 800127c:	4b70      	ldr	r3, [pc, #448]	; (8001440 <state_machine+0x1fc>)
 800127e:	781a      	ldrb	r2, [r3, #0]
 8001280:	4b6e      	ldr	r3, [pc, #440]	; (800143c <state_machine+0x1f8>)
 8001282:	701a      	strb	r2, [r3, #0]
	switch(state)
 8001284:	4b6e      	ldr	r3, [pc, #440]	; (8001440 <state_machine+0x1fc>)
 8001286:	781b      	ldrb	r3, [r3, #0]
 8001288:	2b02      	cmp	r3, #2
 800128a:	f000 8091 	beq.w	80013b0 <state_machine+0x16c>
 800128e:	2b02      	cmp	r3, #2
 8001290:	f300 80cd 	bgt.w	800142e <state_machine+0x1ea>
 8001294:	2b00      	cmp	r3, #0
 8001296:	d002      	beq.n	800129e <state_machine+0x5a>
 8001298:	2b01      	cmp	r3, #1
 800129a:	d043      	beq.n	8001324 <state_machine+0xe0>
 800129c:	e0c7      	b.n	800142e <state_machine+0x1ea>
	{
		case data_logger_state_eIDLE :
			if(entrance)
 800129e:	79fb      	ldrb	r3, [r7, #7]
 80012a0:	2b00      	cmp	r3, #0
 80012a2:	d003      	beq.n	80012ac <state_machine+0x68>
			{
				/* When we are in the idle mode, we just ping the device at PERIODE_PING µs interval */
				current_period = PERIODE_PING;
 80012a4:	4b64      	ldr	r3, [pc, #400]	; (8001438 <state_machine+0x1f4>)
 80012a6:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 80012aa:	601a      	str	r2, [r3, #0]
			}

			tmp_len = DATA_LOGGER_Get_Data_Config(data_id_eCONFIG_REQUEST, tmp);
 80012ac:	4965      	ldr	r1, [pc, #404]	; (8001444 <state_machine+0x200>)
 80012ae:	2000      	movs	r0, #0
 80012b0:	f7ff ff0c 	bl	80010cc <DATA_LOGGER_Get_Data_Config>
 80012b4:	4603      	mov	r3, r0
 80012b6:	461a      	mov	r2, r3
 80012b8:	4b63      	ldr	r3, [pc, #396]	; (8001448 <state_machine+0x204>)
 80012ba:	701a      	strb	r2, [r3, #0]
			push_data_to_uart(tmp, tmp_len);
 80012bc:	4b62      	ldr	r3, [pc, #392]	; (8001448 <state_machine+0x204>)
 80012be:	781b      	ldrb	r3, [r3, #0]
 80012c0:	4619      	mov	r1, r3
 80012c2:	4860      	ldr	r0, [pc, #384]	; (8001444 <state_machine+0x200>)
 80012c4:	f7ff ff76 	bl	80011b4 <push_data_to_uart>

			/* If we receive a configuration request, we change the state */
			if(send_config_flag)
 80012c8:	4b60      	ldr	r3, [pc, #384]	; (800144c <state_machine+0x208>)
 80012ca:	781b      	ldrb	r3, [r3, #0]
 80012cc:	2b00      	cmp	r3, #0
 80012ce:	d01a      	beq.n	8001306 <state_machine+0xc2>
			{
				/* Reset flags */
				start_flag = FALSE;
 80012d0:	4b5f      	ldr	r3, [pc, #380]	; (8001450 <state_machine+0x20c>)
 80012d2:	2200      	movs	r2, #0
 80012d4:	701a      	strb	r2, [r3, #0]
				stop_flag = FALSE;
 80012d6:	4b5f      	ldr	r3, [pc, #380]	; (8001454 <state_machine+0x210>)
 80012d8:	2200      	movs	r2, #0
 80012da:	701a      	strb	r2, [r3, #0]
				send_config_flag = FALSE;
 80012dc:	4b5b      	ldr	r3, [pc, #364]	; (800144c <state_machine+0x208>)
 80012de:	2200      	movs	r2, #0
 80012e0:	701a      	strb	r2, [r3, #0]
				/* Change the state */
				/* We send the configuration only if we did not send it before */
				if(config_not_sent)
 80012e2:	4b5d      	ldr	r3, [pc, #372]	; (8001458 <state_machine+0x214>)
 80012e4:	781b      	ldrb	r3, [r3, #0]
 80012e6:	2b00      	cmp	r3, #0
 80012e8:	d009      	beq.n	80012fe <state_machine+0xba>
				{
					id_init_counter = 0;
 80012ea:	4b5c      	ldr	r3, [pc, #368]	; (800145c <state_machine+0x218>)
 80012ec:	2200      	movs	r2, #0
 80012ee:	701a      	strb	r2, [r3, #0]
					is_any_data_used = FALSE;
 80012f0:	4b5b      	ldr	r3, [pc, #364]	; (8001460 <state_machine+0x21c>)
 80012f2:	2200      	movs	r2, #0
 80012f4:	701a      	strb	r2, [r3, #0]
					state = data_logger_state_eTRANSMIT_CONFIG;
 80012f6:	4b52      	ldr	r3, [pc, #328]	; (8001440 <state_machine+0x1fc>)
 80012f8:	2201      	movs	r2, #1
 80012fa:	701a      	strb	r2, [r3, #0]
			{
				start_flag = FALSE;
				stop_flag = FALSE;
				state = data_logger_state_eLOG;
			}
			break;
 80012fc:	e096      	b.n	800142c <state_machine+0x1e8>
					state = data_logger_state_eLOG;
 80012fe:	4b50      	ldr	r3, [pc, #320]	; (8001440 <state_machine+0x1fc>)
 8001300:	2202      	movs	r2, #2
 8001302:	701a      	strb	r2, [r3, #0]
			break;
 8001304:	e092      	b.n	800142c <state_machine+0x1e8>
			else if(start_flag)
 8001306:	4b52      	ldr	r3, [pc, #328]	; (8001450 <state_machine+0x20c>)
 8001308:	781b      	ldrb	r3, [r3, #0]
 800130a:	2b00      	cmp	r3, #0
 800130c:	f000 808e 	beq.w	800142c <state_machine+0x1e8>
				start_flag = FALSE;
 8001310:	4b4f      	ldr	r3, [pc, #316]	; (8001450 <state_machine+0x20c>)
 8001312:	2200      	movs	r2, #0
 8001314:	701a      	strb	r2, [r3, #0]
				stop_flag = FALSE;
 8001316:	4b4f      	ldr	r3, [pc, #316]	; (8001454 <state_machine+0x210>)
 8001318:	2200      	movs	r2, #0
 800131a:	701a      	strb	r2, [r3, #0]
				state = data_logger_state_eLOG;
 800131c:	4b48      	ldr	r3, [pc, #288]	; (8001440 <state_machine+0x1fc>)
 800131e:	2202      	movs	r2, #2
 8001320:	701a      	strb	r2, [r3, #0]
			break;
 8001322:	e083      	b.n	800142c <state_machine+0x1e8>

		case data_logger_state_eTRANSMIT_CONFIG :
			/* Change the data logger task period to send configuration slowly */
			if(entrance)
 8001324:	79fb      	ldrb	r3, [r7, #7]
 8001326:	2b00      	cmp	r3, #0
 8001328:	d009      	beq.n	800133e <state_machine+0xfa>
			{
				current_period = PERIODE_CONFIG_SEND;
 800132a:	4b43      	ldr	r3, [pc, #268]	; (8001438 <state_machine+0x1f4>)
 800132c:	2264      	movs	r2, #100	; 0x64
 800132e:	601a      	str	r2, [r3, #0]
			}
			while(data_list[id_init_counter].use_format == use_format_eNOT_USED && id_init_counter < data_id_eCOUNT)
 8001330:	e005      	b.n	800133e <state_machine+0xfa>
			{
				id_init_counter ++ ;
 8001332:	4b4a      	ldr	r3, [pc, #296]	; (800145c <state_machine+0x218>)
 8001334:	781b      	ldrb	r3, [r3, #0]
 8001336:	3301      	adds	r3, #1
 8001338:	b2da      	uxtb	r2, r3
 800133a:	4b48      	ldr	r3, [pc, #288]	; (800145c <state_machine+0x218>)
 800133c:	701a      	strb	r2, [r3, #0]
			while(data_list[id_init_counter].use_format == use_format_eNOT_USED && id_init_counter < data_id_eCOUNT)
 800133e:	4b47      	ldr	r3, [pc, #284]	; (800145c <state_machine+0x218>)
 8001340:	781b      	ldrb	r3, [r3, #0]
 8001342:	4619      	mov	r1, r3
 8001344:	4a47      	ldr	r2, [pc, #284]	; (8001464 <state_machine+0x220>)
 8001346:	460b      	mov	r3, r1
 8001348:	009b      	lsls	r3, r3, #2
 800134a:	440b      	add	r3, r1
 800134c:	009b      	lsls	r3, r3, #2
 800134e:	4413      	add	r3, r2
 8001350:	3311      	adds	r3, #17
 8001352:	781b      	ldrb	r3, [r3, #0]
 8001354:	2b00      	cmp	r3, #0
 8001356:	d103      	bne.n	8001360 <state_machine+0x11c>
 8001358:	4b40      	ldr	r3, [pc, #256]	; (800145c <state_machine+0x218>)
 800135a:	781b      	ldrb	r3, [r3, #0]
 800135c:	2b0e      	cmp	r3, #14
 800135e:	d9e8      	bls.n	8001332 <state_machine+0xee>
			}
			if(id_init_counter < data_id_eCOUNT)
 8001360:	4b3e      	ldr	r3, [pc, #248]	; (800145c <state_machine+0x218>)
 8001362:	781b      	ldrb	r3, [r3, #0]
 8001364:	2b0e      	cmp	r3, #14
 8001366:	d817      	bhi.n	8001398 <state_machine+0x154>
			{
				is_any_data_used = TRUE;
 8001368:	4b3d      	ldr	r3, [pc, #244]	; (8001460 <state_machine+0x21c>)
 800136a:	2201      	movs	r2, #1
 800136c:	701a      	strb	r2, [r3, #0]
				/* Get data configuration */
				tmp_len = DATA_LOGGER_Get_Data_Config(id_init_counter++, tmp);
 800136e:	4b3b      	ldr	r3, [pc, #236]	; (800145c <state_machine+0x218>)
 8001370:	781b      	ldrb	r3, [r3, #0]
 8001372:	1c5a      	adds	r2, r3, #1
 8001374:	b2d1      	uxtb	r1, r2
 8001376:	4a39      	ldr	r2, [pc, #228]	; (800145c <state_machine+0x218>)
 8001378:	7011      	strb	r1, [r2, #0]
 800137a:	4932      	ldr	r1, [pc, #200]	; (8001444 <state_machine+0x200>)
 800137c:	4618      	mov	r0, r3
 800137e:	f7ff fea5 	bl	80010cc <DATA_LOGGER_Get_Data_Config>
 8001382:	4603      	mov	r3, r0
 8001384:	461a      	mov	r2, r3
 8001386:	4b30      	ldr	r3, [pc, #192]	; (8001448 <state_machine+0x204>)
 8001388:	701a      	strb	r2, [r3, #0]
				/* Send the configuration */
				push_data_to_uart(tmp, tmp_len);
 800138a:	4b2f      	ldr	r3, [pc, #188]	; (8001448 <state_machine+0x204>)
 800138c:	781b      	ldrb	r3, [r3, #0]
 800138e:	4619      	mov	r1, r3
 8001390:	482c      	ldr	r0, [pc, #176]	; (8001444 <state_machine+0x200>)
 8001392:	f7ff ff0f 	bl	80011b4 <push_data_to_uart>
				else
				{
					state = data_logger_state_eIDLE ;
				}
			}
			break;
 8001396:	e04a      	b.n	800142e <state_machine+0x1ea>
				if(is_any_data_used)
 8001398:	4b31      	ldr	r3, [pc, #196]	; (8001460 <state_machine+0x21c>)
 800139a:	781b      	ldrb	r3, [r3, #0]
 800139c:	2b00      	cmp	r3, #0
 800139e:	d003      	beq.n	80013a8 <state_machine+0x164>
					state = data_logger_state_eLOG ;
 80013a0:	4b27      	ldr	r3, [pc, #156]	; (8001440 <state_machine+0x1fc>)
 80013a2:	2202      	movs	r2, #2
 80013a4:	701a      	strb	r2, [r3, #0]
			break;
 80013a6:	e042      	b.n	800142e <state_machine+0x1ea>
					state = data_logger_state_eIDLE ;
 80013a8:	4b25      	ldr	r3, [pc, #148]	; (8001440 <state_machine+0x1fc>)
 80013aa:	2200      	movs	r2, #0
 80013ac:	701a      	strb	r2, [r3, #0]
			break;
 80013ae:	e03e      	b.n	800142e <state_machine+0x1ea>

		case data_logger_state_eLOG:
			if(entrance)
 80013b0:	79fb      	ldrb	r3, [r7, #7]
 80013b2:	2b00      	cmp	r3, #0
 80013b4:	d002      	beq.n	80013bc <state_machine+0x178>
			{
				current_period = PERIODE_SEND;
 80013b6:	4b20      	ldr	r3, [pc, #128]	; (8001438 <state_machine+0x1f4>)
 80013b8:	2264      	movs	r2, #100	; 0x64
 80013ba:	601a      	str	r2, [r3, #0]
			}
			if(stop_flag)
 80013bc:	4b25      	ldr	r3, [pc, #148]	; (8001454 <state_machine+0x210>)
 80013be:	781b      	ldrb	r3, [r3, #0]
 80013c0:	2b00      	cmp	r3, #0
 80013c2:	d002      	beq.n	80013ca <state_machine+0x186>
			{
				state = data_logger_state_eIDLE;
 80013c4:	4b1e      	ldr	r3, [pc, #120]	; (8001440 <state_machine+0x1fc>)
 80013c6:	2200      	movs	r2, #0
 80013c8:	701a      	strb	r2, [r3, #0]
			}
			for(uint8_t d = 0; d < data_id_eCOUNT; d++)
 80013ca:	2300      	movs	r3, #0
 80013cc:	73fb      	strb	r3, [r7, #15]
 80013ce:	e027      	b.n	8001420 <state_machine+0x1dc>
			{
				if(data_list[d].use_format == use_format_eAS_OUTPUT && (data_list[d].data != NULL))
 80013d0:	7bfa      	ldrb	r2, [r7, #15]
 80013d2:	4924      	ldr	r1, [pc, #144]	; (8001464 <state_machine+0x220>)
 80013d4:	4613      	mov	r3, r2
 80013d6:	009b      	lsls	r3, r3, #2
 80013d8:	4413      	add	r3, r2
 80013da:	009b      	lsls	r3, r3, #2
 80013dc:	440b      	add	r3, r1
 80013de:	3311      	adds	r3, #17
 80013e0:	781b      	ldrb	r3, [r3, #0]
 80013e2:	2b01      	cmp	r3, #1
 80013e4:	d119      	bne.n	800141a <state_machine+0x1d6>
 80013e6:	7bfa      	ldrb	r2, [r7, #15]
 80013e8:	491e      	ldr	r1, [pc, #120]	; (8001464 <state_machine+0x220>)
 80013ea:	4613      	mov	r3, r2
 80013ec:	009b      	lsls	r3, r3, #2
 80013ee:	4413      	add	r3, r2
 80013f0:	009b      	lsls	r3, r3, #2
 80013f2:	440b      	add	r3, r1
 80013f4:	3304      	adds	r3, #4
 80013f6:	681b      	ldr	r3, [r3, #0]
 80013f8:	2b00      	cmp	r3, #0
 80013fa:	d00e      	beq.n	800141a <state_machine+0x1d6>
				{
					tmp_len = DATA_LOGGER_Get_Data_Value(d, tmp);
 80013fc:	7bfb      	ldrb	r3, [r7, #15]
 80013fe:	4911      	ldr	r1, [pc, #68]	; (8001444 <state_machine+0x200>)
 8001400:	4618      	mov	r0, r3
 8001402:	f7ff fd2d 	bl	8000e60 <DATA_LOGGER_Get_Data_Value>
 8001406:	4603      	mov	r3, r0
 8001408:	461a      	mov	r2, r3
 800140a:	4b0f      	ldr	r3, [pc, #60]	; (8001448 <state_machine+0x204>)
 800140c:	701a      	strb	r2, [r3, #0]
					push_data_to_uart(tmp, tmp_len);
 800140e:	4b0e      	ldr	r3, [pc, #56]	; (8001448 <state_machine+0x204>)
 8001410:	781b      	ldrb	r3, [r3, #0]
 8001412:	4619      	mov	r1, r3
 8001414:	480b      	ldr	r0, [pc, #44]	; (8001444 <state_machine+0x200>)
 8001416:	f7ff fecd 	bl	80011b4 <push_data_to_uart>
			for(uint8_t d = 0; d < data_id_eCOUNT; d++)
 800141a:	7bfb      	ldrb	r3, [r7, #15]
 800141c:	3301      	adds	r3, #1
 800141e:	73fb      	strb	r3, [r7, #15]
 8001420:	7bfb      	ldrb	r3, [r7, #15]
 8001422:	2b0e      	cmp	r3, #14
 8001424:	d9d4      	bls.n	80013d0 <state_machine+0x18c>
				}
			}
			break;
 8001426:	e002      	b.n	800142e <state_machine+0x1ea>
		return;
 8001428:	bf00      	nop
 800142a:	e000      	b.n	800142e <state_machine+0x1ea>
			break;
 800142c:	bf00      	nop
	}
}
 800142e:	3710      	adds	r7, #16
 8001430:	46bd      	mov	sp, r7
 8001432:	bd80      	pop	{r7, pc}
 8001434:	200002dc 	.word	0x200002dc
 8001438:	20000094 	.word	0x20000094
 800143c:	20000098 	.word	0x20000098
 8001440:	200002e0 	.word	0x200002e0
 8001444:	200002a4 	.word	0x200002a4
 8001448:	200002d6 	.word	0x200002d6
 800144c:	200002a1 	.word	0x200002a1
 8001450:	200002a0 	.word	0x200002a0
 8001454:	200002a2 	.word	0x200002a2
 8001458:	20000090 	.word	0x20000090
 800145c:	200002d7 	.word	0x200002d7
 8001460:	200002d8 	.word	0x200002d8
 8001464:	20000174 	.word	0x20000174

08001468 <parse_uart>:

/*
 * @brief Parse incoming bytes
 */
static void parse_uart(void)
{
 8001468:	b580      	push	{r7, lr}
 800146a:	b082      	sub	sp, #8
 800146c:	af00      	add	r7, sp, #0
	static uint8_t trame[20] = { 0 };
	static uint8_t nb_byte_to_buffer = 0;
	static uint8_t buffer_counter = 0;
	static uint16_t checksum = 0;
	/* Check for available data */
	if(UART_Availables(UART_TELEMETRY))
 800146e:	2000      	movs	r0, #0
 8001470:	f000 fd8c 	bl	8001f8c <UART_Availables>
 8001474:	4603      	mov	r3, r0
 8001476:	2b00      	cmp	r3, #0
 8001478:	d06c      	beq.n	8001554 <parse_uart+0xec>
	{
		uint8_t c;
		UART_Get(UART_TELEMETRY, &c);
 800147a:	1dfb      	adds	r3, r7, #7
 800147c:	4619      	mov	r1, r3
 800147e:	2000      	movs	r0, #0
 8001480:	f000 fd92 	bl	8001fa8 <UART_Get>
		switch(state)
 8001484:	4b35      	ldr	r3, [pc, #212]	; (800155c <parse_uart+0xf4>)
 8001486:	781b      	ldrb	r3, [r3, #0]
 8001488:	2b03      	cmp	r3, #3
 800148a:	d863      	bhi.n	8001554 <parse_uart+0xec>
 800148c:	a201      	add	r2, pc, #4	; (adr r2, 8001494 <parse_uart+0x2c>)
 800148e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001492:	bf00      	nop
 8001494:	080014a5 	.word	0x080014a5
 8001498:	080014b3 	.word	0x080014b3
 800149c:	080014f9 	.word	0x080014f9
 80014a0:	08001531 	.word	0x08001531
		{
			case parser_state_eSTART_BYTE:
				if(c == '$')
 80014a4:	79fb      	ldrb	r3, [r7, #7]
 80014a6:	2b24      	cmp	r3, #36	; 0x24
 80014a8:	d14f      	bne.n	800154a <parse_uart+0xe2>
				{
					state = parser_state_eID;
 80014aa:	4b2c      	ldr	r3, [pc, #176]	; (800155c <parse_uart+0xf4>)
 80014ac:	2201      	movs	r2, #1
 80014ae:	701a      	strb	r2, [r3, #0]
				}
				break;
 80014b0:	e04b      	b.n	800154a <parse_uart+0xe2>

			case parser_state_eID:
				if(c < data_id_eCOUNT)
 80014b2:	79fb      	ldrb	r3, [r7, #7]
 80014b4:	2b0e      	cmp	r3, #14
 80014b6:	d84a      	bhi.n	800154e <parse_uart+0xe6>
				{
					/* Store the id for later use */
					trame[0] = c;
 80014b8:	79fa      	ldrb	r2, [r7, #7]
 80014ba:	4b29      	ldr	r3, [pc, #164]	; (8001560 <parse_uart+0xf8>)
 80014bc:	701a      	strb	r2, [r3, #0]
					/* Reset the checksum */
					checksum = c;
 80014be:	79fb      	ldrb	r3, [r7, #7]
 80014c0:	b29a      	uxth	r2, r3
 80014c2:	4b28      	ldr	r3, [pc, #160]	; (8001564 <parse_uart+0xfc>)
 80014c4:	801a      	strh	r2, [r3, #0]
					/* Get the data length according to the data format */
					nb_byte_to_buffer = (DATA_LOGGER_Get_Data(c)->format / 20);
 80014c6:	79fb      	ldrb	r3, [r7, #7]
 80014c8:	4618      	mov	r0, r3
 80014ca:	f7ff fe5f 	bl	800118c <DATA_LOGGER_Get_Data>
 80014ce:	4603      	mov	r3, r0
 80014d0:	7a5b      	ldrb	r3, [r3, #9]
 80014d2:	4a25      	ldr	r2, [pc, #148]	; (8001568 <parse_uart+0x100>)
 80014d4:	fba2 2303 	umull	r2, r3, r2, r3
 80014d8:	091b      	lsrs	r3, r3, #4
 80014da:	b2da      	uxtb	r2, r3
 80014dc:	4b23      	ldr	r3, [pc, #140]	; (800156c <parse_uart+0x104>)
 80014de:	701a      	strb	r2, [r3, #0]
					if(nb_byte_to_buffer)
 80014e0:	4b22      	ldr	r3, [pc, #136]	; (800156c <parse_uart+0x104>)
 80014e2:	781b      	ldrb	r3, [r3, #0]
 80014e4:	2b00      	cmp	r3, #0
 80014e6:	d003      	beq.n	80014f0 <parse_uart+0x88>
					{
						state = parser_state_eDATA;
 80014e8:	4b1c      	ldr	r3, [pc, #112]	; (800155c <parse_uart+0xf4>)
 80014ea:	2202      	movs	r2, #2
 80014ec:	701a      	strb	r2, [r3, #0]
					else
					{
						state = parser_state_eCHECKSUM;
					}
				}
				break;
 80014ee:	e02e      	b.n	800154e <parse_uart+0xe6>
						state = parser_state_eCHECKSUM;
 80014f0:	4b1a      	ldr	r3, [pc, #104]	; (800155c <parse_uart+0xf4>)
 80014f2:	2203      	movs	r2, #3
 80014f4:	701a      	strb	r2, [r3, #0]
				break;
 80014f6:	e02a      	b.n	800154e <parse_uart+0xe6>
			case parser_state_eDATA:
				trame[1+buffer_counter++] = c;
 80014f8:	4b1d      	ldr	r3, [pc, #116]	; (8001570 <parse_uart+0x108>)
 80014fa:	781b      	ldrb	r3, [r3, #0]
 80014fc:	1c5a      	adds	r2, r3, #1
 80014fe:	b2d1      	uxtb	r1, r2
 8001500:	4a1b      	ldr	r2, [pc, #108]	; (8001570 <parse_uart+0x108>)
 8001502:	7011      	strb	r1, [r2, #0]
 8001504:	3301      	adds	r3, #1
 8001506:	79f9      	ldrb	r1, [r7, #7]
 8001508:	4a15      	ldr	r2, [pc, #84]	; (8001560 <parse_uart+0xf8>)
 800150a:	54d1      	strb	r1, [r2, r3]
				checksum += c;
 800150c:	79fb      	ldrb	r3, [r7, #7]
 800150e:	b29a      	uxth	r2, r3
 8001510:	4b14      	ldr	r3, [pc, #80]	; (8001564 <parse_uart+0xfc>)
 8001512:	881b      	ldrh	r3, [r3, #0]
 8001514:	4413      	add	r3, r2
 8001516:	b29a      	uxth	r2, r3
 8001518:	4b12      	ldr	r3, [pc, #72]	; (8001564 <parse_uart+0xfc>)
 800151a:	801a      	strh	r2, [r3, #0]
				if(buffer_counter == nb_byte_to_buffer)
 800151c:	4b14      	ldr	r3, [pc, #80]	; (8001570 <parse_uart+0x108>)
 800151e:	781a      	ldrb	r2, [r3, #0]
 8001520:	4b12      	ldr	r3, [pc, #72]	; (800156c <parse_uart+0x104>)
 8001522:	781b      	ldrb	r3, [r3, #0]
 8001524:	429a      	cmp	r2, r3
 8001526:	d114      	bne.n	8001552 <parse_uart+0xea>
				{
					state = parser_state_eCHECKSUM;
 8001528:	4b0c      	ldr	r3, [pc, #48]	; (800155c <parse_uart+0xf4>)
 800152a:	2203      	movs	r2, #3
 800152c:	701a      	strb	r2, [r3, #0]
				}
				break;
 800152e:	e010      	b.n	8001552 <parse_uart+0xea>
			case parser_state_eCHECKSUM:
				if(checksum == c)
 8001530:	79fb      	ldrb	r3, [r7, #7]
 8001532:	b29a      	uxth	r2, r3
 8001534:	4b0b      	ldr	r3, [pc, #44]	; (8001564 <parse_uart+0xfc>)
 8001536:	881b      	ldrh	r3, [r3, #0]
 8001538:	429a      	cmp	r2, r3
 800153a:	d102      	bne.n	8001542 <parse_uart+0xda>
				{
					DATA_LOGGER_Reception(trame);
 800153c:	4808      	ldr	r0, [pc, #32]	; (8001560 <parse_uart+0xf8>)
 800153e:	f7ff fbd5 	bl	8000cec <DATA_LOGGER_Reception>
				}
				state = parser_state_eSTART_BYTE;
 8001542:	4b06      	ldr	r3, [pc, #24]	; (800155c <parse_uart+0xf4>)
 8001544:	2200      	movs	r2, #0
 8001546:	701a      	strb	r2, [r3, #0]
				break;
 8001548:	e004      	b.n	8001554 <parse_uart+0xec>
				break;
 800154a:	bf00      	nop
 800154c:	e002      	b.n	8001554 <parse_uart+0xec>
				break;
 800154e:	bf00      	nop
 8001550:	e000      	b.n	8001554 <parse_uart+0xec>
				break;
 8001552:	bf00      	nop


		}
	}

}
 8001554:	bf00      	nop
 8001556:	3708      	adds	r7, #8
 8001558:	46bd      	mov	sp, r7
 800155a:	bd80      	pop	{r7, pc}
 800155c:	200002e1 	.word	0x200002e1
 8001560:	200002e4 	.word	0x200002e4
 8001564:	200002f8 	.word	0x200002f8
 8001568:	cccccccd 	.word	0xcccccccd
 800156c:	200002fa 	.word	0x200002fa
 8001570:	200002fb 	.word	0x200002fb

08001574 <HIGH_LEVEL_Init>:
#define RADIO_TO_ANGLE_RATE_YAW	((float)1.0f)

static high_level_t high_level = { 0 };

void HIGH_LEVEL_Init(void)
{
 8001574:	b580      	push	{r7, lr}
 8001576:	af00      	add	r7, sp, #0
	high_level.radio = RADIO_Get_Channel();
 8001578:	f000 ffd0 	bl	800251c <RADIO_Get_Channel>
 800157c:	4603      	mov	r3, r0
 800157e:	4a0a      	ldr	r2, [pc, #40]	; (80015a8 <HIGH_LEVEL_Init+0x34>)
 8001580:	6053      	str	r3, [r2, #4]
	high_level.target_angle = CONTROLLER_Get_Angle_Target();
 8001582:	f7ff fa47 	bl	8000a14 <CONTROLLER_Get_Angle_Target>
 8001586:	4603      	mov	r3, r0
 8001588:	4a07      	ldr	r2, [pc, #28]	; (80015a8 <HIGH_LEVEL_Init+0x34>)
 800158a:	6093      	str	r3, [r2, #8]
	high_level.target_angle_speed = CONTROLLER_Get_Angle_Speed_Target();
 800158c:	f7ff fa4c 	bl	8000a28 <CONTROLLER_Get_Angle_Speed_Target>
 8001590:	4603      	mov	r3, r0
 8001592:	4a05      	ldr	r2, [pc, #20]	; (80015a8 <HIGH_LEVEL_Init+0x34>)
 8001594:	60d3      	str	r3, [r2, #12]
	high_level.state = high_level_eGROUND;
 8001596:	4b04      	ldr	r3, [pc, #16]	; (80015a8 <HIGH_LEVEL_Init+0x34>)
 8001598:	2200      	movs	r2, #0
 800159a:	701a      	strb	r2, [r3, #0]
	high_level.previous_state = high_level_eACCRO;
 800159c:	4b02      	ldr	r3, [pc, #8]	; (80015a8 <HIGH_LEVEL_Init+0x34>)
 800159e:	2201      	movs	r2, #1
 80015a0:	705a      	strb	r2, [r3, #1]
}
 80015a2:	bf00      	nop
 80015a4:	bd80      	pop	{r7, pc}
 80015a6:	bf00      	nop
 80015a8:	200002fc 	.word	0x200002fc

080015ac <HIGH_LEVEL_Process_Main>:

void HIGH_LEVEL_Process_Main(void)
{
 80015ac:	b590      	push	{r4, r7, lr}
 80015ae:	b083      	sub	sp, #12
 80015b0:	af00      	add	r7, sp, #0
	/* entrance is used to know if we changed of state */
	bool_e entrance = high_level.state == high_level.previous_state;
 80015b2:	4b88      	ldr	r3, [pc, #544]	; (80017d4 <HIGH_LEVEL_Process_Main+0x228>)
 80015b4:	781a      	ldrb	r2, [r3, #0]
 80015b6:	4b87      	ldr	r3, [pc, #540]	; (80017d4 <HIGH_LEVEL_Process_Main+0x228>)
 80015b8:	785b      	ldrb	r3, [r3, #1]
 80015ba:	429a      	cmp	r2, r3
 80015bc:	bf0c      	ite	eq
 80015be:	2301      	moveq	r3, #1
 80015c0:	2300      	movne	r3, #0
 80015c2:	b2db      	uxtb	r3, r3
 80015c4:	71fb      	strb	r3, [r7, #7]
	high_level.previous_state = high_level.state;
 80015c6:	4b83      	ldr	r3, [pc, #524]	; (80017d4 <HIGH_LEVEL_Process_Main+0x228>)
 80015c8:	781a      	ldrb	r2, [r3, #0]
 80015ca:	4b82      	ldr	r3, [pc, #520]	; (80017d4 <HIGH_LEVEL_Process_Main+0x228>)
 80015cc:	705a      	strb	r2, [r3, #1]
	/* state machine */
	switch(high_level.state)
 80015ce:	4b81      	ldr	r3, [pc, #516]	; (80017d4 <HIGH_LEVEL_Process_Main+0x228>)
 80015d0:	781b      	ldrb	r3, [r3, #0]
 80015d2:	2b02      	cmp	r3, #2
 80015d4:	d039      	beq.n	800164a <HIGH_LEVEL_Process_Main+0x9e>
 80015d6:	2b02      	cmp	r3, #2
 80015d8:	f300 80f8 	bgt.w	80017cc <HIGH_LEVEL_Process_Main+0x220>
 80015dc:	2b00      	cmp	r3, #0
 80015de:	d003      	beq.n	80015e8 <HIGH_LEVEL_Process_Main+0x3c>
 80015e0:	2b01      	cmp	r3, #1
 80015e2:	f000 8094 	beq.w	800170e <HIGH_LEVEL_Process_Main+0x162>
			{
				high_level.state = high_level_eANGLE;
			}
			break;
	}
}
 80015e6:	e0f1      	b.n	80017cc <HIGH_LEVEL_Process_Main+0x220>
			if(entrance)
 80015e8:	79fb      	ldrb	r3, [r7, #7]
 80015ea:	2b00      	cmp	r3, #0
 80015ec:	d002      	beq.n	80015f4 <HIGH_LEVEL_Process_Main+0x48>
				CONTROLLER_Set_State(controller_state_eDISABLED);
 80015ee:	2000      	movs	r0, #0
 80015f0:	f7ff f9fe 	bl	80009f0 <CONTROLLER_Set_State>
			if(high_level.radio[4] > 1500 && high_level.radio[2] < 1050)
 80015f4:	4b77      	ldr	r3, [pc, #476]	; (80017d4 <HIGH_LEVEL_Process_Main+0x228>)
 80015f6:	685b      	ldr	r3, [r3, #4]
 80015f8:	3308      	adds	r3, #8
 80015fa:	881b      	ldrh	r3, [r3, #0]
 80015fc:	f240 52dc 	movw	r2, #1500	; 0x5dc
 8001600:	4293      	cmp	r3, r2
 8001602:	f240 80de 	bls.w	80017c2 <HIGH_LEVEL_Process_Main+0x216>
 8001606:	4b73      	ldr	r3, [pc, #460]	; (80017d4 <HIGH_LEVEL_Process_Main+0x228>)
 8001608:	685b      	ldr	r3, [r3, #4]
 800160a:	3304      	adds	r3, #4
 800160c:	881b      	ldrh	r3, [r3, #0]
 800160e:	f240 4219 	movw	r2, #1049	; 0x419
 8001612:	4293      	cmp	r3, r2
 8001614:	f200 80d5 	bhi.w	80017c2 <HIGH_LEVEL_Process_Main+0x216>
				if(high_level.radio[5] < 1300)
 8001618:	4b6e      	ldr	r3, [pc, #440]	; (80017d4 <HIGH_LEVEL_Process_Main+0x228>)
 800161a:	685b      	ldr	r3, [r3, #4]
 800161c:	330a      	adds	r3, #10
 800161e:	881b      	ldrh	r3, [r3, #0]
 8001620:	f240 5213 	movw	r2, #1299	; 0x513
 8001624:	4293      	cmp	r3, r2
 8001626:	d803      	bhi.n	8001630 <HIGH_LEVEL_Process_Main+0x84>
					high_level.state = high_level_eANGLE;
 8001628:	4b6a      	ldr	r3, [pc, #424]	; (80017d4 <HIGH_LEVEL_Process_Main+0x228>)
 800162a:	2202      	movs	r2, #2
 800162c:	701a      	strb	r2, [r3, #0]
			break;
 800162e:	e0c8      	b.n	80017c2 <HIGH_LEVEL_Process_Main+0x216>
				else if(high_level.radio[5] > 1300)
 8001630:	4b68      	ldr	r3, [pc, #416]	; (80017d4 <HIGH_LEVEL_Process_Main+0x228>)
 8001632:	685b      	ldr	r3, [r3, #4]
 8001634:	330a      	adds	r3, #10
 8001636:	881b      	ldrh	r3, [r3, #0]
 8001638:	f240 5214 	movw	r2, #1300	; 0x514
 800163c:	4293      	cmp	r3, r2
 800163e:	f240 80c0 	bls.w	80017c2 <HIGH_LEVEL_Process_Main+0x216>
					high_level.state = high_level_eACCRO;
 8001642:	4b64      	ldr	r3, [pc, #400]	; (80017d4 <HIGH_LEVEL_Process_Main+0x228>)
 8001644:	2201      	movs	r2, #1
 8001646:	701a      	strb	r2, [r3, #0]
			break;
 8001648:	e0bb      	b.n	80017c2 <HIGH_LEVEL_Process_Main+0x216>
			if(entrance)
 800164a:	79fb      	ldrb	r3, [r7, #7]
 800164c:	2b00      	cmp	r3, #0
 800164e:	d002      	beq.n	8001656 <HIGH_LEVEL_Process_Main+0xaa>
				CONTROLLER_Set_State(controller_state_eANGLE);
 8001650:	2002      	movs	r0, #2
 8001652:	f7ff f9cd 	bl	80009f0 <CONTROLLER_Set_State>
			high_level.target_angle[axe_eROLL] = (float)(high_level.radio[0]-1500) * RADIO_TO_ANGLE;
 8001656:	4b5f      	ldr	r3, [pc, #380]	; (80017d4 <HIGH_LEVEL_Process_Main+0x228>)
 8001658:	685b      	ldr	r3, [r3, #4]
 800165a:	881b      	ldrh	r3, [r3, #0]
 800165c:	f2a3 53dc 	subw	r3, r3, #1500	; 0x5dc
 8001660:	ee07 3a90 	vmov	s15, r3
 8001664:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001668:	4b5a      	ldr	r3, [pc, #360]	; (80017d4 <HIGH_LEVEL_Process_Main+0x228>)
 800166a:	689b      	ldr	r3, [r3, #8]
 800166c:	ed9f 7a5a 	vldr	s14, [pc, #360]	; 80017d8 <HIGH_LEVEL_Process_Main+0x22c>
 8001670:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001674:	edc3 7a00 	vstr	s15, [r3]
			high_level.target_angle[axe_ePITCH] = (float)(high_level.radio[1]-1500) * RADIO_TO_ANGLE;
 8001678:	4b56      	ldr	r3, [pc, #344]	; (80017d4 <HIGH_LEVEL_Process_Main+0x228>)
 800167a:	685b      	ldr	r3, [r3, #4]
 800167c:	3302      	adds	r3, #2
 800167e:	881b      	ldrh	r3, [r3, #0]
 8001680:	f2a3 53dc 	subw	r3, r3, #1500	; 0x5dc
 8001684:	ee07 3a90 	vmov	s15, r3
 8001688:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800168c:	4b51      	ldr	r3, [pc, #324]	; (80017d4 <HIGH_LEVEL_Process_Main+0x228>)
 800168e:	689b      	ldr	r3, [r3, #8]
 8001690:	3304      	adds	r3, #4
 8001692:	ed9f 7a51 	vldr	s14, [pc, #324]	; 80017d8 <HIGH_LEVEL_Process_Main+0x22c>
 8001696:	ee67 7a87 	vmul.f32	s15, s15, s14
 800169a:	edc3 7a00 	vstr	s15, [r3]
			high_level.target_angle_speed[axe_eYAW] = -(float)(high_level.radio[3]-1500) * RADIO_TO_ANGLE_RATE_YAW;
 800169e:	4b4d      	ldr	r3, [pc, #308]	; (80017d4 <HIGH_LEVEL_Process_Main+0x228>)
 80016a0:	685b      	ldr	r3, [r3, #4]
 80016a2:	3306      	adds	r3, #6
 80016a4:	881b      	ldrh	r3, [r3, #0]
 80016a6:	f2a3 53dc 	subw	r3, r3, #1500	; 0x5dc
 80016aa:	ee07 3a90 	vmov	s15, r3
 80016ae:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80016b2:	4b48      	ldr	r3, [pc, #288]	; (80017d4 <HIGH_LEVEL_Process_Main+0x228>)
 80016b4:	68db      	ldr	r3, [r3, #12]
 80016b6:	3308      	adds	r3, #8
 80016b8:	eef1 7a67 	vneg.f32	s15, s15
 80016bc:	edc3 7a00 	vstr	s15, [r3]
			*MOTOR_MIXER_Get_Power_Input_Ptr() = high_level.radio[2]-1000;
 80016c0:	4b44      	ldr	r3, [pc, #272]	; (80017d4 <HIGH_LEVEL_Process_Main+0x228>)
 80016c2:	685b      	ldr	r3, [r3, #4]
 80016c4:	3304      	adds	r3, #4
 80016c6:	881b      	ldrh	r3, [r3, #0]
 80016c8:	f5a3 747a 	sub.w	r4, r3, #1000	; 0x3e8
 80016cc:	f000 f8f0 	bl	80018b0 <MOTOR_MIXER_Get_Power_Input_Ptr>
 80016d0:	4603      	mov	r3, r0
 80016d2:	ee07 4a90 	vmov	s15, r4
 80016d6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80016da:	edc3 7a00 	vstr	s15, [r3]
			if(high_level.radio[4] < 1500)
 80016de:	4b3d      	ldr	r3, [pc, #244]	; (80017d4 <HIGH_LEVEL_Process_Main+0x228>)
 80016e0:	685b      	ldr	r3, [r3, #4]
 80016e2:	3308      	adds	r3, #8
 80016e4:	881b      	ldrh	r3, [r3, #0]
 80016e6:	f240 52db 	movw	r2, #1499	; 0x5db
 80016ea:	4293      	cmp	r3, r2
 80016ec:	d803      	bhi.n	80016f6 <HIGH_LEVEL_Process_Main+0x14a>
				high_level.state = high_level_eGROUND;
 80016ee:	4b39      	ldr	r3, [pc, #228]	; (80017d4 <HIGH_LEVEL_Process_Main+0x228>)
 80016f0:	2200      	movs	r2, #0
 80016f2:	701a      	strb	r2, [r3, #0]
			break;
 80016f4:	e067      	b.n	80017c6 <HIGH_LEVEL_Process_Main+0x21a>
			else if(high_level.radio[5] > 1300)
 80016f6:	4b37      	ldr	r3, [pc, #220]	; (80017d4 <HIGH_LEVEL_Process_Main+0x228>)
 80016f8:	685b      	ldr	r3, [r3, #4]
 80016fa:	330a      	adds	r3, #10
 80016fc:	881b      	ldrh	r3, [r3, #0]
 80016fe:	f240 5214 	movw	r2, #1300	; 0x514
 8001702:	4293      	cmp	r3, r2
 8001704:	d95f      	bls.n	80017c6 <HIGH_LEVEL_Process_Main+0x21a>
				high_level.state = high_level_eACCRO;
 8001706:	4b33      	ldr	r3, [pc, #204]	; (80017d4 <HIGH_LEVEL_Process_Main+0x228>)
 8001708:	2201      	movs	r2, #1
 800170a:	701a      	strb	r2, [r3, #0]
			break;
 800170c:	e05b      	b.n	80017c6 <HIGH_LEVEL_Process_Main+0x21a>
			if(entrance)
 800170e:	79fb      	ldrb	r3, [r7, #7]
 8001710:	2b00      	cmp	r3, #0
 8001712:	d002      	beq.n	800171a <HIGH_LEVEL_Process_Main+0x16e>
				CONTROLLER_Set_State(controller_state_eSPEED);
 8001714:	2001      	movs	r0, #1
 8001716:	f7ff f96b 	bl	80009f0 <CONTROLLER_Set_State>
			high_level.target_angle_speed[axe_eROLL] = (float)(high_level.radio[0]-1500) * RADIO_TO_ANGLE_RATE;
 800171a:	4b2e      	ldr	r3, [pc, #184]	; (80017d4 <HIGH_LEVEL_Process_Main+0x228>)
 800171c:	685b      	ldr	r3, [r3, #4]
 800171e:	881b      	ldrh	r3, [r3, #0]
 8001720:	f2a3 52dc 	subw	r2, r3, #1500	; 0x5dc
 8001724:	4b2b      	ldr	r3, [pc, #172]	; (80017d4 <HIGH_LEVEL_Process_Main+0x228>)
 8001726:	68db      	ldr	r3, [r3, #12]
 8001728:	ee07 2a90 	vmov	s15, r2
 800172c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001730:	edc3 7a00 	vstr	s15, [r3]
			high_level.target_angle_speed[axe_ePITCH] = (float)(high_level.radio[1]-1500) * RADIO_TO_ANGLE_RATE;
 8001734:	4b27      	ldr	r3, [pc, #156]	; (80017d4 <HIGH_LEVEL_Process_Main+0x228>)
 8001736:	685b      	ldr	r3, [r3, #4]
 8001738:	3302      	adds	r3, #2
 800173a:	881b      	ldrh	r3, [r3, #0]
 800173c:	f2a3 52dc 	subw	r2, r3, #1500	; 0x5dc
 8001740:	4b24      	ldr	r3, [pc, #144]	; (80017d4 <HIGH_LEVEL_Process_Main+0x228>)
 8001742:	68db      	ldr	r3, [r3, #12]
 8001744:	3304      	adds	r3, #4
 8001746:	ee07 2a90 	vmov	s15, r2
 800174a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800174e:	edc3 7a00 	vstr	s15, [r3]
			high_level.target_angle_speed[axe_eYAW] = -(float)(high_level.radio[3]-1500) * RADIO_TO_ANGLE_RATE_YAW;
 8001752:	4b20      	ldr	r3, [pc, #128]	; (80017d4 <HIGH_LEVEL_Process_Main+0x228>)
 8001754:	685b      	ldr	r3, [r3, #4]
 8001756:	3306      	adds	r3, #6
 8001758:	881b      	ldrh	r3, [r3, #0]
 800175a:	f2a3 53dc 	subw	r3, r3, #1500	; 0x5dc
 800175e:	ee07 3a90 	vmov	s15, r3
 8001762:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001766:	4b1b      	ldr	r3, [pc, #108]	; (80017d4 <HIGH_LEVEL_Process_Main+0x228>)
 8001768:	68db      	ldr	r3, [r3, #12]
 800176a:	3308      	adds	r3, #8
 800176c:	eef1 7a67 	vneg.f32	s15, s15
 8001770:	edc3 7a00 	vstr	s15, [r3]
			*MOTOR_MIXER_Get_Power_Input_Ptr() = high_level.radio[2]-1000;
 8001774:	4b17      	ldr	r3, [pc, #92]	; (80017d4 <HIGH_LEVEL_Process_Main+0x228>)
 8001776:	685b      	ldr	r3, [r3, #4]
 8001778:	3304      	adds	r3, #4
 800177a:	881b      	ldrh	r3, [r3, #0]
 800177c:	f5a3 747a 	sub.w	r4, r3, #1000	; 0x3e8
 8001780:	f000 f896 	bl	80018b0 <MOTOR_MIXER_Get_Power_Input_Ptr>
 8001784:	4603      	mov	r3, r0
 8001786:	ee07 4a90 	vmov	s15, r4
 800178a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800178e:	edc3 7a00 	vstr	s15, [r3]
			if(high_level.radio[4] < 1500)
 8001792:	4b10      	ldr	r3, [pc, #64]	; (80017d4 <HIGH_LEVEL_Process_Main+0x228>)
 8001794:	685b      	ldr	r3, [r3, #4]
 8001796:	3308      	adds	r3, #8
 8001798:	881b      	ldrh	r3, [r3, #0]
 800179a:	f240 52db 	movw	r2, #1499	; 0x5db
 800179e:	4293      	cmp	r3, r2
 80017a0:	d803      	bhi.n	80017aa <HIGH_LEVEL_Process_Main+0x1fe>
				high_level.state = high_level_eGROUND;
 80017a2:	4b0c      	ldr	r3, [pc, #48]	; (80017d4 <HIGH_LEVEL_Process_Main+0x228>)
 80017a4:	2200      	movs	r2, #0
 80017a6:	701a      	strb	r2, [r3, #0]
			break;
 80017a8:	e00f      	b.n	80017ca <HIGH_LEVEL_Process_Main+0x21e>
			else if(high_level.radio[5] < 1300)
 80017aa:	4b0a      	ldr	r3, [pc, #40]	; (80017d4 <HIGH_LEVEL_Process_Main+0x228>)
 80017ac:	685b      	ldr	r3, [r3, #4]
 80017ae:	330a      	adds	r3, #10
 80017b0:	881b      	ldrh	r3, [r3, #0]
 80017b2:	f240 5213 	movw	r2, #1299	; 0x513
 80017b6:	4293      	cmp	r3, r2
 80017b8:	d807      	bhi.n	80017ca <HIGH_LEVEL_Process_Main+0x21e>
				high_level.state = high_level_eANGLE;
 80017ba:	4b06      	ldr	r3, [pc, #24]	; (80017d4 <HIGH_LEVEL_Process_Main+0x228>)
 80017bc:	2202      	movs	r2, #2
 80017be:	701a      	strb	r2, [r3, #0]
			break;
 80017c0:	e003      	b.n	80017ca <HIGH_LEVEL_Process_Main+0x21e>
			break;
 80017c2:	bf00      	nop
 80017c4:	e002      	b.n	80017cc <HIGH_LEVEL_Process_Main+0x220>
			break;
 80017c6:	bf00      	nop
 80017c8:	e000      	b.n	80017cc <HIGH_LEVEL_Process_Main+0x220>
			break;
 80017ca:	bf00      	nop
}
 80017cc:	bf00      	nop
 80017ce:	370c      	adds	r7, #12
 80017d0:	46bd      	mov	sp, r7
 80017d2:	bd90      	pop	{r4, r7, pc}
 80017d4:	200002fc 	.word	0x200002fc
 80017d8:	3d4ccccd 	.word	0x3d4ccccd

080017dc <MOTOR_MIXER_Process>:
#include "Motor_Mixer.h"

static motor_mixer_t motor_mixer = { 0 };

void MOTOR_MIXER_Process(void)
{
 80017dc:	b580      	push	{r7, lr}
 80017de:	af00      	add	r7, sp, #0
	motor_mixer.output[motor_eFRONT_LEFT] = 	motor_mixer.input_power + motor_mixer.input_angle[axe_eROLL] - motor_mixer.input_angle[axe_ePITCH] - motor_mixer.input_angle[axe_eYAW];
 80017e0:	4b2c      	ldr	r3, [pc, #176]	; (8001894 <MOTOR_MIXER_Process+0xb8>)
 80017e2:	ed93 7a03 	vldr	s14, [r3, #12]
 80017e6:	4b2b      	ldr	r3, [pc, #172]	; (8001894 <MOTOR_MIXER_Process+0xb8>)
 80017e8:	edd3 7a00 	vldr	s15, [r3]
 80017ec:	ee37 7a27 	vadd.f32	s14, s14, s15
 80017f0:	4b28      	ldr	r3, [pc, #160]	; (8001894 <MOTOR_MIXER_Process+0xb8>)
 80017f2:	edd3 7a01 	vldr	s15, [r3, #4]
 80017f6:	ee37 7a67 	vsub.f32	s14, s14, s15
 80017fa:	4b26      	ldr	r3, [pc, #152]	; (8001894 <MOTOR_MIXER_Process+0xb8>)
 80017fc:	edd3 7a02 	vldr	s15, [r3, #8]
 8001800:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001804:	4b23      	ldr	r3, [pc, #140]	; (8001894 <MOTOR_MIXER_Process+0xb8>)
 8001806:	edc3 7a04 	vstr	s15, [r3, #16]
	motor_mixer.output[motor_eFRONT_RIGHT] = 	motor_mixer.input_power - motor_mixer.input_angle[axe_eROLL] - motor_mixer.input_angle[axe_ePITCH] + motor_mixer.input_angle[axe_eYAW];
 800180a:	4b22      	ldr	r3, [pc, #136]	; (8001894 <MOTOR_MIXER_Process+0xb8>)
 800180c:	ed93 7a03 	vldr	s14, [r3, #12]
 8001810:	4b20      	ldr	r3, [pc, #128]	; (8001894 <MOTOR_MIXER_Process+0xb8>)
 8001812:	edd3 7a00 	vldr	s15, [r3]
 8001816:	ee37 7a67 	vsub.f32	s14, s14, s15
 800181a:	4b1e      	ldr	r3, [pc, #120]	; (8001894 <MOTOR_MIXER_Process+0xb8>)
 800181c:	edd3 7a01 	vldr	s15, [r3, #4]
 8001820:	ee37 7a67 	vsub.f32	s14, s14, s15
 8001824:	4b1b      	ldr	r3, [pc, #108]	; (8001894 <MOTOR_MIXER_Process+0xb8>)
 8001826:	edd3 7a02 	vldr	s15, [r3, #8]
 800182a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800182e:	4b19      	ldr	r3, [pc, #100]	; (8001894 <MOTOR_MIXER_Process+0xb8>)
 8001830:	edc3 7a05 	vstr	s15, [r3, #20]
	motor_mixer.output[motor_eBACK_RIGHT] = 	motor_mixer.input_power - motor_mixer.input_angle[axe_eROLL] + motor_mixer.input_angle[axe_ePITCH] - motor_mixer.input_angle[axe_eYAW];
 8001834:	4b17      	ldr	r3, [pc, #92]	; (8001894 <MOTOR_MIXER_Process+0xb8>)
 8001836:	ed93 7a03 	vldr	s14, [r3, #12]
 800183a:	4b16      	ldr	r3, [pc, #88]	; (8001894 <MOTOR_MIXER_Process+0xb8>)
 800183c:	edd3 7a00 	vldr	s15, [r3]
 8001840:	ee37 7a67 	vsub.f32	s14, s14, s15
 8001844:	4b13      	ldr	r3, [pc, #76]	; (8001894 <MOTOR_MIXER_Process+0xb8>)
 8001846:	edd3 7a01 	vldr	s15, [r3, #4]
 800184a:	ee37 7a27 	vadd.f32	s14, s14, s15
 800184e:	4b11      	ldr	r3, [pc, #68]	; (8001894 <MOTOR_MIXER_Process+0xb8>)
 8001850:	edd3 7a02 	vldr	s15, [r3, #8]
 8001854:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001858:	4b0e      	ldr	r3, [pc, #56]	; (8001894 <MOTOR_MIXER_Process+0xb8>)
 800185a:	edc3 7a06 	vstr	s15, [r3, #24]
	motor_mixer.output[motor_eBACK_LEFT] = 		motor_mixer.input_power + motor_mixer.input_angle[axe_eROLL] + motor_mixer.input_angle[axe_ePITCH] + motor_mixer.input_angle[axe_eYAW];
 800185e:	4b0d      	ldr	r3, [pc, #52]	; (8001894 <MOTOR_MIXER_Process+0xb8>)
 8001860:	ed93 7a03 	vldr	s14, [r3, #12]
 8001864:	4b0b      	ldr	r3, [pc, #44]	; (8001894 <MOTOR_MIXER_Process+0xb8>)
 8001866:	edd3 7a00 	vldr	s15, [r3]
 800186a:	ee37 7a27 	vadd.f32	s14, s14, s15
 800186e:	4b09      	ldr	r3, [pc, #36]	; (8001894 <MOTOR_MIXER_Process+0xb8>)
 8001870:	edd3 7a01 	vldr	s15, [r3, #4]
 8001874:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001878:	4b06      	ldr	r3, [pc, #24]	; (8001894 <MOTOR_MIXER_Process+0xb8>)
 800187a:	edd3 7a02 	vldr	s15, [r3, #8]
 800187e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001882:	4b04      	ldr	r3, [pc, #16]	; (8001894 <MOTOR_MIXER_Process+0xb8>)
 8001884:	edc3 7a07 	vstr	s15, [r3, #28]

	MOTOR_Set(motor_mixer.output);
 8001888:	4803      	ldr	r0, [pc, #12]	; (8001898 <MOTOR_MIXER_Process+0xbc>)
 800188a:	f000 f863 	bl	8001954 <MOTOR_Set>
}
 800188e:	bf00      	nop
 8001890:	bd80      	pop	{r7, pc}
 8001892:	bf00      	nop
 8001894:	2000030c 	.word	0x2000030c
 8001898:	2000031c 	.word	0x2000031c

0800189c <MOTOR_MIXER_Get_Angle_Input_Ptr>:
float * MOTOR_MIXER_Get_Angle_Input_Ptr(void)
{
 800189c:	b480      	push	{r7}
 800189e:	af00      	add	r7, sp, #0
	return motor_mixer.input_angle;
 80018a0:	4b02      	ldr	r3, [pc, #8]	; (80018ac <MOTOR_MIXER_Get_Angle_Input_Ptr+0x10>)
}
 80018a2:	4618      	mov	r0, r3
 80018a4:	46bd      	mov	sp, r7
 80018a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018aa:	4770      	bx	lr
 80018ac:	2000030c 	.word	0x2000030c

080018b0 <MOTOR_MIXER_Get_Power_Input_Ptr>:
float * MOTOR_MIXER_Get_Power_Input_Ptr(void)
{
 80018b0:	b480      	push	{r7}
 80018b2:	af00      	add	r7, sp, #0
	return &motor_mixer.input_power;
 80018b4:	4b02      	ldr	r3, [pc, #8]	; (80018c0 <MOTOR_MIXER_Get_Power_Input_Ptr+0x10>)
}
 80018b6:	4618      	mov	r0, r3
 80018b8:	46bd      	mov	sp, r7
 80018ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018be:	4770      	bx	lr
 80018c0:	20000318 	.word	0x20000318

080018c4 <MOTOR_Init>:
 80018c4:	b580      	push	{r7, lr}
 80018c6:	af00      	add	r7, sp, #0
 80018c8:	2000      	movs	r0, #0
 80018ca:	f000 f9df 	bl	8001c8c <TIMER_Start_All_Channels>
 80018ce:	bf00      	nop
 80018d0:	bd80      	pop	{r7, pc}
	...

080018d4 <MOTOR_Process>:
 80018d4:	b580      	push	{r7, lr}
 80018d6:	af00      	add	r7, sp, #0
 80018d8:	4b1a      	ldr	r3, [pc, #104]	; (8001944 <MOTOR_Process+0x70>)
 80018da:	781b      	ldrb	r3, [r3, #0]
 80018dc:	2b00      	cmp	r3, #0
 80018de:	d009      	beq.n	80018f4 <MOTOR_Process+0x20>
 80018e0:	4b18      	ldr	r3, [pc, #96]	; (8001944 <MOTOR_Process+0x70>)
 80018e2:	2200      	movs	r2, #0
 80018e4:	701a      	strb	r2, [r3, #0]
 80018e6:	2000      	movs	r0, #0
 80018e8:	f000 f9fc 	bl	8001ce4 <TIMER_Stop_All_Channels>
 80018ec:	4b16      	ldr	r3, [pc, #88]	; (8001948 <MOTOR_Process+0x74>)
 80018ee:	2200      	movs	r2, #0
 80018f0:	701a      	strb	r2, [r3, #0]
 80018f2:	e01c      	b.n	800192e <MOTOR_Process+0x5a>
 80018f4:	4b15      	ldr	r3, [pc, #84]	; (800194c <MOTOR_Process+0x78>)
 80018f6:	781b      	ldrb	r3, [r3, #0]
 80018f8:	2b00      	cmp	r3, #0
 80018fa:	d018      	beq.n	800192e <MOTOR_Process+0x5a>
 80018fc:	4b13      	ldr	r3, [pc, #76]	; (800194c <MOTOR_Process+0x78>)
 80018fe:	2200      	movs	r2, #0
 8001900:	701a      	strb	r2, [r3, #0]
 8001902:	4b11      	ldr	r3, [pc, #68]	; (8001948 <MOTOR_Process+0x74>)
 8001904:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8001908:	805a      	strh	r2, [r3, #2]
 800190a:	4b0f      	ldr	r3, [pc, #60]	; (8001948 <MOTOR_Process+0x74>)
 800190c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8001910:	809a      	strh	r2, [r3, #4]
 8001912:	4b0d      	ldr	r3, [pc, #52]	; (8001948 <MOTOR_Process+0x74>)
 8001914:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8001918:	80da      	strh	r2, [r3, #6]
 800191a:	4b0b      	ldr	r3, [pc, #44]	; (8001948 <MOTOR_Process+0x74>)
 800191c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8001920:	811a      	strh	r2, [r3, #8]
 8001922:	2000      	movs	r0, #0
 8001924:	f000 f9b2 	bl	8001c8c <TIMER_Start_All_Channels>
 8001928:	4b07      	ldr	r3, [pc, #28]	; (8001948 <MOTOR_Process+0x74>)
 800192a:	2201      	movs	r2, #1
 800192c:	701a      	strb	r2, [r3, #0]
 800192e:	4b06      	ldr	r3, [pc, #24]	; (8001948 <MOTOR_Process+0x74>)
 8001930:	781b      	ldrb	r3, [r3, #0]
 8001932:	2b00      	cmp	r3, #0
 8001934:	d003      	beq.n	800193e <MOTOR_Process+0x6a>
 8001936:	4906      	ldr	r1, [pc, #24]	; (8001950 <MOTOR_Process+0x7c>)
 8001938:	2000      	movs	r0, #0
 800193a:	f000 f9ff 	bl	8001d3c <TIMER_Set_All_CCR>
 800193e:	bf00      	nop
 8001940:	bd80      	pop	{r7, pc}
 8001942:	bf00      	nop
 8001944:	20000336 	.word	0x20000336
 8001948:	2000032c 	.word	0x2000032c
 800194c:	20000099 	.word	0x20000099
 8001950:	2000032e 	.word	0x2000032e

08001954 <MOTOR_Set>:
 8001954:	b480      	push	{r7}
 8001956:	b083      	sub	sp, #12
 8001958:	af00      	add	r7, sp, #0
 800195a:	6078      	str	r0, [r7, #4]
 800195c:	687b      	ldr	r3, [r7, #4]
 800195e:	edd3 7a00 	vldr	s15, [r3]
 8001962:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001966:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800196a:	dd0c      	ble.n	8001986 <MOTOR_Set+0x32>
 800196c:	687b      	ldr	r3, [r7, #4]
 800196e:	edd3 7a00 	vldr	s15, [r3]
 8001972:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001976:	ee17 3a90 	vmov	r3, s15
 800197a:	b29b      	uxth	r3, r3
 800197c:	ee07 3a90 	vmov	s15, r3
 8001980:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001984:	e001      	b.n	800198a <MOTOR_Set+0x36>
 8001986:	eddf 7a89 	vldr	s15, [pc, #548]	; 8001bac <MOTOR_Set+0x258>
 800198a:	687b      	ldr	r3, [r7, #4]
 800198c:	edc3 7a00 	vstr	s15, [r3]
 8001990:	687b      	ldr	r3, [r7, #4]
 8001992:	3304      	adds	r3, #4
 8001994:	edd3 7a00 	vldr	s15, [r3]
 8001998:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800199c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80019a0:	dd0d      	ble.n	80019be <MOTOR_Set+0x6a>
 80019a2:	687b      	ldr	r3, [r7, #4]
 80019a4:	3304      	adds	r3, #4
 80019a6:	edd3 7a00 	vldr	s15, [r3]
 80019aa:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80019ae:	ee17 3a90 	vmov	r3, s15
 80019b2:	b29b      	uxth	r3, r3
 80019b4:	ee07 3a90 	vmov	s15, r3
 80019b8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80019bc:	e001      	b.n	80019c2 <MOTOR_Set+0x6e>
 80019be:	eddf 7a7b 	vldr	s15, [pc, #492]	; 8001bac <MOTOR_Set+0x258>
 80019c2:	687b      	ldr	r3, [r7, #4]
 80019c4:	3304      	adds	r3, #4
 80019c6:	edc3 7a00 	vstr	s15, [r3]
 80019ca:	687b      	ldr	r3, [r7, #4]
 80019cc:	3308      	adds	r3, #8
 80019ce:	edd3 7a00 	vldr	s15, [r3]
 80019d2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80019d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80019da:	dd0d      	ble.n	80019f8 <MOTOR_Set+0xa4>
 80019dc:	687b      	ldr	r3, [r7, #4]
 80019de:	3308      	adds	r3, #8
 80019e0:	edd3 7a00 	vldr	s15, [r3]
 80019e4:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80019e8:	ee17 3a90 	vmov	r3, s15
 80019ec:	b29b      	uxth	r3, r3
 80019ee:	ee07 3a90 	vmov	s15, r3
 80019f2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80019f6:	e001      	b.n	80019fc <MOTOR_Set+0xa8>
 80019f8:	eddf 7a6c 	vldr	s15, [pc, #432]	; 8001bac <MOTOR_Set+0x258>
 80019fc:	687b      	ldr	r3, [r7, #4]
 80019fe:	3308      	adds	r3, #8
 8001a00:	edc3 7a00 	vstr	s15, [r3]
 8001a04:	687b      	ldr	r3, [r7, #4]
 8001a06:	330c      	adds	r3, #12
 8001a08:	edd3 7a00 	vldr	s15, [r3]
 8001a0c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001a10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001a14:	dd0d      	ble.n	8001a32 <MOTOR_Set+0xde>
 8001a16:	687b      	ldr	r3, [r7, #4]
 8001a18:	330c      	adds	r3, #12
 8001a1a:	edd3 7a00 	vldr	s15, [r3]
 8001a1e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001a22:	ee17 3a90 	vmov	r3, s15
 8001a26:	b29b      	uxth	r3, r3
 8001a28:	ee07 3a90 	vmov	s15, r3
 8001a2c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001a30:	e001      	b.n	8001a36 <MOTOR_Set+0xe2>
 8001a32:	eddf 7a5e 	vldr	s15, [pc, #376]	; 8001bac <MOTOR_Set+0x258>
 8001a36:	687b      	ldr	r3, [r7, #4]
 8001a38:	330c      	adds	r3, #12
 8001a3a:	edc3 7a00 	vstr	s15, [r3]
 8001a3e:	687b      	ldr	r3, [r7, #4]
 8001a40:	edd3 7a00 	vldr	s15, [r3]
 8001a44:	ed9f 7a5a 	vldr	s14, [pc, #360]	; 8001bb0 <MOTOR_Set+0x25c>
 8001a48:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001a4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001a50:	dd02      	ble.n	8001a58 <MOTOR_Set+0x104>
 8001a52:	eddf 7a57 	vldr	s15, [pc, #348]	; 8001bb0 <MOTOR_Set+0x25c>
 8001a56:	e00b      	b.n	8001a70 <MOTOR_Set+0x11c>
 8001a58:	687b      	ldr	r3, [r7, #4]
 8001a5a:	edd3 7a00 	vldr	s15, [r3]
 8001a5e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001a62:	ee17 3a90 	vmov	r3, s15
 8001a66:	b29b      	uxth	r3, r3
 8001a68:	ee07 3a90 	vmov	s15, r3
 8001a6c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001a70:	687b      	ldr	r3, [r7, #4]
 8001a72:	edc3 7a00 	vstr	s15, [r3]
 8001a76:	687b      	ldr	r3, [r7, #4]
 8001a78:	3304      	adds	r3, #4
 8001a7a:	edd3 7a00 	vldr	s15, [r3]
 8001a7e:	ed9f 7a4c 	vldr	s14, [pc, #304]	; 8001bb0 <MOTOR_Set+0x25c>
 8001a82:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001a86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001a8a:	dd02      	ble.n	8001a92 <MOTOR_Set+0x13e>
 8001a8c:	eddf 7a48 	vldr	s15, [pc, #288]	; 8001bb0 <MOTOR_Set+0x25c>
 8001a90:	e00c      	b.n	8001aac <MOTOR_Set+0x158>
 8001a92:	687b      	ldr	r3, [r7, #4]
 8001a94:	3304      	adds	r3, #4
 8001a96:	edd3 7a00 	vldr	s15, [r3]
 8001a9a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001a9e:	ee17 3a90 	vmov	r3, s15
 8001aa2:	b29b      	uxth	r3, r3
 8001aa4:	ee07 3a90 	vmov	s15, r3
 8001aa8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001aac:	687b      	ldr	r3, [r7, #4]
 8001aae:	3304      	adds	r3, #4
 8001ab0:	edc3 7a00 	vstr	s15, [r3]
 8001ab4:	687b      	ldr	r3, [r7, #4]
 8001ab6:	3308      	adds	r3, #8
 8001ab8:	edd3 7a00 	vldr	s15, [r3]
 8001abc:	ed9f 7a3c 	vldr	s14, [pc, #240]	; 8001bb0 <MOTOR_Set+0x25c>
 8001ac0:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001ac4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001ac8:	dd02      	ble.n	8001ad0 <MOTOR_Set+0x17c>
 8001aca:	eddf 7a39 	vldr	s15, [pc, #228]	; 8001bb0 <MOTOR_Set+0x25c>
 8001ace:	e00c      	b.n	8001aea <MOTOR_Set+0x196>
 8001ad0:	687b      	ldr	r3, [r7, #4]
 8001ad2:	3308      	adds	r3, #8
 8001ad4:	edd3 7a00 	vldr	s15, [r3]
 8001ad8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001adc:	ee17 3a90 	vmov	r3, s15
 8001ae0:	b29b      	uxth	r3, r3
 8001ae2:	ee07 3a90 	vmov	s15, r3
 8001ae6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001aea:	687b      	ldr	r3, [r7, #4]
 8001aec:	3308      	adds	r3, #8
 8001aee:	edc3 7a00 	vstr	s15, [r3]
 8001af2:	687b      	ldr	r3, [r7, #4]
 8001af4:	330c      	adds	r3, #12
 8001af6:	edd3 7a00 	vldr	s15, [r3]
 8001afa:	ed9f 7a2d 	vldr	s14, [pc, #180]	; 8001bb0 <MOTOR_Set+0x25c>
 8001afe:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001b02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001b06:	dd02      	ble.n	8001b0e <MOTOR_Set+0x1ba>
 8001b08:	eddf 7a29 	vldr	s15, [pc, #164]	; 8001bb0 <MOTOR_Set+0x25c>
 8001b0c:	e00c      	b.n	8001b28 <MOTOR_Set+0x1d4>
 8001b0e:	687b      	ldr	r3, [r7, #4]
 8001b10:	330c      	adds	r3, #12
 8001b12:	edd3 7a00 	vldr	s15, [r3]
 8001b16:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001b1a:	ee17 3a90 	vmov	r3, s15
 8001b1e:	b29b      	uxth	r3, r3
 8001b20:	ee07 3a90 	vmov	s15, r3
 8001b24:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001b28:	687b      	ldr	r3, [r7, #4]
 8001b2a:	330c      	adds	r3, #12
 8001b2c:	edc3 7a00 	vstr	s15, [r3]
 8001b30:	687b      	ldr	r3, [r7, #4]
 8001b32:	edd3 7a00 	vldr	s15, [r3]
 8001b36:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001b3a:	ee17 3a90 	vmov	r3, s15
 8001b3e:	b29b      	uxth	r3, r3
 8001b40:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
 8001b44:	b29a      	uxth	r2, r3
 8001b46:	4b1b      	ldr	r3, [pc, #108]	; (8001bb4 <MOTOR_Set+0x260>)
 8001b48:	805a      	strh	r2, [r3, #2]
 8001b4a:	687b      	ldr	r3, [r7, #4]
 8001b4c:	3304      	adds	r3, #4
 8001b4e:	edd3 7a00 	vldr	s15, [r3]
 8001b52:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001b56:	ee17 3a90 	vmov	r3, s15
 8001b5a:	b29b      	uxth	r3, r3
 8001b5c:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
 8001b60:	b29a      	uxth	r2, r3
 8001b62:	4b14      	ldr	r3, [pc, #80]	; (8001bb4 <MOTOR_Set+0x260>)
 8001b64:	809a      	strh	r2, [r3, #4]
 8001b66:	687b      	ldr	r3, [r7, #4]
 8001b68:	3308      	adds	r3, #8
 8001b6a:	edd3 7a00 	vldr	s15, [r3]
 8001b6e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001b72:	ee17 3a90 	vmov	r3, s15
 8001b76:	b29b      	uxth	r3, r3
 8001b78:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
 8001b7c:	b29a      	uxth	r2, r3
 8001b7e:	4b0d      	ldr	r3, [pc, #52]	; (8001bb4 <MOTOR_Set+0x260>)
 8001b80:	80da      	strh	r2, [r3, #6]
 8001b82:	687b      	ldr	r3, [r7, #4]
 8001b84:	330c      	adds	r3, #12
 8001b86:	edd3 7a00 	vldr	s15, [r3]
 8001b8a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001b8e:	ee17 3a90 	vmov	r3, s15
 8001b92:	b29b      	uxth	r3, r3
 8001b94:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
 8001b98:	b29a      	uxth	r2, r3
 8001b9a:	4b06      	ldr	r3, [pc, #24]	; (8001bb4 <MOTOR_Set+0x260>)
 8001b9c:	811a      	strh	r2, [r3, #8]
 8001b9e:	bf00      	nop
 8001ba0:	370c      	adds	r7, #12
 8001ba2:	46bd      	mov	sp, r7
 8001ba4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ba8:	4770      	bx	lr
 8001baa:	bf00      	nop
 8001bac:	00000000 	.word	0x00000000
 8001bb0:	43fa0000 	.word	0x43fa0000
 8001bb4:	2000032c 	.word	0x2000032c

08001bb8 <I2C_Mem_Write>:

void I2C_Init(void)
{
}
HAL_StatusTypeDef I2C_Mem_Write(i2c_e i2c_id, uint8_t device_address, uint8_t mem_address, uint8_t * data, uint8_t size)
{
 8001bb8:	b590      	push	{r4, r7, lr}
 8001bba:	b087      	sub	sp, #28
 8001bbc:	af04      	add	r7, sp, #16
 8001bbe:	603b      	str	r3, [r7, #0]
 8001bc0:	4603      	mov	r3, r0
 8001bc2:	71fb      	strb	r3, [r7, #7]
 8001bc4:	460b      	mov	r3, r1
 8001bc6:	71bb      	strb	r3, [r7, #6]
 8001bc8:	4613      	mov	r3, r2
 8001bca:	717b      	strb	r3, [r7, #5]
	return HAL_I2C_Mem_Write(i2c[i2c_id].hi2c, device_address, mem_address, I2C_MEMADD_SIZE_8BIT, data, size, I2C_OPERATION_TIMEOUT);
 8001bcc:	79fb      	ldrb	r3, [r7, #7]
 8001bce:	4a0b      	ldr	r2, [pc, #44]	; (8001bfc <I2C_Mem_Write+0x44>)
 8001bd0:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8001bd4:	79bb      	ldrb	r3, [r7, #6]
 8001bd6:	b299      	uxth	r1, r3
 8001bd8:	797b      	ldrb	r3, [r7, #5]
 8001bda:	b29a      	uxth	r2, r3
 8001bdc:	7e3b      	ldrb	r3, [r7, #24]
 8001bde:	b29b      	uxth	r3, r3
 8001be0:	240a      	movs	r4, #10
 8001be2:	9402      	str	r4, [sp, #8]
 8001be4:	9301      	str	r3, [sp, #4]
 8001be6:	683b      	ldr	r3, [r7, #0]
 8001be8:	9300      	str	r3, [sp, #0]
 8001bea:	2301      	movs	r3, #1
 8001bec:	f002 fe82 	bl	80048f4 <HAL_I2C_Mem_Write>
 8001bf0:	4603      	mov	r3, r0
}
 8001bf2:	4618      	mov	r0, r3
 8001bf4:	370c      	adds	r7, #12
 8001bf6:	46bd      	mov	sp, r7
 8001bf8:	bd90      	pop	{r4, r7, pc}
 8001bfa:	bf00      	nop
 8001bfc:	2000009c 	.word	0x2000009c

08001c00 <I2C_Mem_Read>:

HAL_StatusTypeDef I2C_Mem_Read(i2c_e i2c_id, uint8_t device_address, uint8_t mem_address, uint8_t * data, uint8_t size)
{
 8001c00:	b590      	push	{r4, r7, lr}
 8001c02:	b087      	sub	sp, #28
 8001c04:	af04      	add	r7, sp, #16
 8001c06:	603b      	str	r3, [r7, #0]
 8001c08:	4603      	mov	r3, r0
 8001c0a:	71fb      	strb	r3, [r7, #7]
 8001c0c:	460b      	mov	r3, r1
 8001c0e:	71bb      	strb	r3, [r7, #6]
 8001c10:	4613      	mov	r3, r2
 8001c12:	717b      	strb	r3, [r7, #5]
	return HAL_I2C_Mem_Read(i2c[i2c_id].hi2c, device_address, mem_address, I2C_MEMADD_SIZE_8BIT, data, size, I2C_OPERATION_TIMEOUT);
 8001c14:	79fb      	ldrb	r3, [r7, #7]
 8001c16:	4a0b      	ldr	r2, [pc, #44]	; (8001c44 <I2C_Mem_Read+0x44>)
 8001c18:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8001c1c:	79bb      	ldrb	r3, [r7, #6]
 8001c1e:	b299      	uxth	r1, r3
 8001c20:	797b      	ldrb	r3, [r7, #5]
 8001c22:	b29a      	uxth	r2, r3
 8001c24:	7e3b      	ldrb	r3, [r7, #24]
 8001c26:	b29b      	uxth	r3, r3
 8001c28:	240a      	movs	r4, #10
 8001c2a:	9402      	str	r4, [sp, #8]
 8001c2c:	9301      	str	r3, [sp, #4]
 8001c2e:	683b      	ldr	r3, [r7, #0]
 8001c30:	9300      	str	r3, [sp, #0]
 8001c32:	2301      	movs	r3, #1
 8001c34:	f002 ff58 	bl	8004ae8 <HAL_I2C_Mem_Read>
 8001c38:	4603      	mov	r3, r0
}
 8001c3a:	4618      	mov	r0, r3
 8001c3c:	370c      	adds	r7, #12
 8001c3e:	46bd      	mov	sp, r7
 8001c40:	bd90      	pop	{r4, r7, pc}
 8001c42:	bf00      	nop
 8001c44:	2000009c 	.word	0x2000009c

08001c48 <I2C_Mem_Read_Dma>:

HAL_StatusTypeDef I2C_Mem_Read_Dma(i2c_e i2c_id, uint8_t device_address, uint8_t mem_address, uint8_t * data, uint8_t size)
{
 8001c48:	b580      	push	{r7, lr}
 8001c4a:	b084      	sub	sp, #16
 8001c4c:	af02      	add	r7, sp, #8
 8001c4e:	603b      	str	r3, [r7, #0]
 8001c50:	4603      	mov	r3, r0
 8001c52:	71fb      	strb	r3, [r7, #7]
 8001c54:	460b      	mov	r3, r1
 8001c56:	71bb      	strb	r3, [r7, #6]
 8001c58:	4613      	mov	r3, r2
 8001c5a:	717b      	strb	r3, [r7, #5]
	return HAL_I2C_Mem_Read_DMA(i2c[i2c_id].hi2c, device_address, mem_address, I2C_MEMADD_SIZE_8BIT, data, size);
 8001c5c:	79fb      	ldrb	r3, [r7, #7]
 8001c5e:	4a0a      	ldr	r2, [pc, #40]	; (8001c88 <I2C_Mem_Read_Dma+0x40>)
 8001c60:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8001c64:	79bb      	ldrb	r3, [r7, #6]
 8001c66:	b299      	uxth	r1, r3
 8001c68:	797b      	ldrb	r3, [r7, #5]
 8001c6a:	b29a      	uxth	r2, r3
 8001c6c:	7c3b      	ldrb	r3, [r7, #16]
 8001c6e:	b29b      	uxth	r3, r3
 8001c70:	9301      	str	r3, [sp, #4]
 8001c72:	683b      	ldr	r3, [r7, #0]
 8001c74:	9300      	str	r3, [sp, #0]
 8001c76:	2301      	movs	r3, #1
 8001c78:	f003 f95c 	bl	8004f34 <HAL_I2C_Mem_Read_DMA>
 8001c7c:	4603      	mov	r3, r0
}
 8001c7e:	4618      	mov	r0, r3
 8001c80:	3708      	adds	r7, #8
 8001c82:	46bd      	mov	sp, r7
 8001c84:	bd80      	pop	{r7, pc}
 8001c86:	bf00      	nop
 8001c88:	2000009c 	.word	0x2000009c

08001c8c <TIMER_Start_All_Channels>:
 8001c8c:	b580      	push	{r7, lr}
 8001c8e:	b082      	sub	sp, #8
 8001c90:	af00      	add	r7, sp, #0
 8001c92:	4603      	mov	r3, r0
 8001c94:	71fb      	strb	r3, [r7, #7]
 8001c96:	79fb      	ldrb	r3, [r7, #7]
 8001c98:	4a11      	ldr	r2, [pc, #68]	; (8001ce0 <TIMER_Start_All_Channels+0x54>)
 8001c9a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001c9e:	2100      	movs	r1, #0
 8001ca0:	4618      	mov	r0, r3
 8001ca2:	f004 fc61 	bl	8006568 <HAL_TIM_PWM_Start>
 8001ca6:	79fb      	ldrb	r3, [r7, #7]
 8001ca8:	4a0d      	ldr	r2, [pc, #52]	; (8001ce0 <TIMER_Start_All_Channels+0x54>)
 8001caa:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001cae:	2104      	movs	r1, #4
 8001cb0:	4618      	mov	r0, r3
 8001cb2:	f004 fc59 	bl	8006568 <HAL_TIM_PWM_Start>
 8001cb6:	79fb      	ldrb	r3, [r7, #7]
 8001cb8:	4a09      	ldr	r2, [pc, #36]	; (8001ce0 <TIMER_Start_All_Channels+0x54>)
 8001cba:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001cbe:	2108      	movs	r1, #8
 8001cc0:	4618      	mov	r0, r3
 8001cc2:	f004 fc51 	bl	8006568 <HAL_TIM_PWM_Start>
 8001cc6:	79fb      	ldrb	r3, [r7, #7]
 8001cc8:	4a05      	ldr	r2, [pc, #20]	; (8001ce0 <TIMER_Start_All_Channels+0x54>)
 8001cca:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001cce:	210c      	movs	r1, #12
 8001cd0:	4618      	mov	r0, r3
 8001cd2:	f004 fc49 	bl	8006568 <HAL_TIM_PWM_Start>
 8001cd6:	bf00      	nop
 8001cd8:	3708      	adds	r7, #8
 8001cda:	46bd      	mov	sp, r7
 8001cdc:	bd80      	pop	{r7, pc}
 8001cde:	bf00      	nop
 8001ce0:	200000a0 	.word	0x200000a0

08001ce4 <TIMER_Stop_All_Channels>:
 8001ce4:	b580      	push	{r7, lr}
 8001ce6:	b082      	sub	sp, #8
 8001ce8:	af00      	add	r7, sp, #0
 8001cea:	4603      	mov	r3, r0
 8001cec:	71fb      	strb	r3, [r7, #7]
 8001cee:	79fb      	ldrb	r3, [r7, #7]
 8001cf0:	4a11      	ldr	r2, [pc, #68]	; (8001d38 <TIMER_Stop_All_Channels+0x54>)
 8001cf2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001cf6:	2100      	movs	r1, #0
 8001cf8:	4618      	mov	r0, r3
 8001cfa:	f004 fcfd 	bl	80066f8 <HAL_TIM_PWM_Stop>
 8001cfe:	79fb      	ldrb	r3, [r7, #7]
 8001d00:	4a0d      	ldr	r2, [pc, #52]	; (8001d38 <TIMER_Stop_All_Channels+0x54>)
 8001d02:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001d06:	2104      	movs	r1, #4
 8001d08:	4618      	mov	r0, r3
 8001d0a:	f004 fcf5 	bl	80066f8 <HAL_TIM_PWM_Stop>
 8001d0e:	79fb      	ldrb	r3, [r7, #7]
 8001d10:	4a09      	ldr	r2, [pc, #36]	; (8001d38 <TIMER_Stop_All_Channels+0x54>)
 8001d12:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001d16:	2108      	movs	r1, #8
 8001d18:	4618      	mov	r0, r3
 8001d1a:	f004 fced 	bl	80066f8 <HAL_TIM_PWM_Stop>
 8001d1e:	79fb      	ldrb	r3, [r7, #7]
 8001d20:	4a05      	ldr	r2, [pc, #20]	; (8001d38 <TIMER_Stop_All_Channels+0x54>)
 8001d22:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001d26:	210c      	movs	r1, #12
 8001d28:	4618      	mov	r0, r3
 8001d2a:	f004 fce5 	bl	80066f8 <HAL_TIM_PWM_Stop>
 8001d2e:	bf00      	nop
 8001d30:	3708      	adds	r7, #8
 8001d32:	46bd      	mov	sp, r7
 8001d34:	bd80      	pop	{r7, pc}
 8001d36:	bf00      	nop
 8001d38:	200000a0 	.word	0x200000a0

08001d3c <TIMER_Set_All_CCR>:
 8001d3c:	b480      	push	{r7}
 8001d3e:	b083      	sub	sp, #12
 8001d40:	af00      	add	r7, sp, #0
 8001d42:	4603      	mov	r3, r0
 8001d44:	6039      	str	r1, [r7, #0]
 8001d46:	71fb      	strb	r3, [r7, #7]
 8001d48:	683b      	ldr	r3, [r7, #0]
 8001d4a:	8819      	ldrh	r1, [r3, #0]
 8001d4c:	79fb      	ldrb	r3, [r7, #7]
 8001d4e:	4a15      	ldr	r2, [pc, #84]	; (8001da4 <TIMER_Set_All_CCR+0x68>)
 8001d50:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001d54:	681b      	ldr	r3, [r3, #0]
 8001d56:	460a      	mov	r2, r1
 8001d58:	635a      	str	r2, [r3, #52]	; 0x34
 8001d5a:	683b      	ldr	r3, [r7, #0]
 8001d5c:	3302      	adds	r3, #2
 8001d5e:	8819      	ldrh	r1, [r3, #0]
 8001d60:	79fb      	ldrb	r3, [r7, #7]
 8001d62:	4a10      	ldr	r2, [pc, #64]	; (8001da4 <TIMER_Set_All_CCR+0x68>)
 8001d64:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001d68:	681b      	ldr	r3, [r3, #0]
 8001d6a:	460a      	mov	r2, r1
 8001d6c:	639a      	str	r2, [r3, #56]	; 0x38
 8001d6e:	683b      	ldr	r3, [r7, #0]
 8001d70:	3304      	adds	r3, #4
 8001d72:	8819      	ldrh	r1, [r3, #0]
 8001d74:	79fb      	ldrb	r3, [r7, #7]
 8001d76:	4a0b      	ldr	r2, [pc, #44]	; (8001da4 <TIMER_Set_All_CCR+0x68>)
 8001d78:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001d7c:	681b      	ldr	r3, [r3, #0]
 8001d7e:	460a      	mov	r2, r1
 8001d80:	63da      	str	r2, [r3, #60]	; 0x3c
 8001d82:	683b      	ldr	r3, [r7, #0]
 8001d84:	3306      	adds	r3, #6
 8001d86:	8819      	ldrh	r1, [r3, #0]
 8001d88:	79fb      	ldrb	r3, [r7, #7]
 8001d8a:	4a06      	ldr	r2, [pc, #24]	; (8001da4 <TIMER_Set_All_CCR+0x68>)
 8001d8c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001d90:	681b      	ldr	r3, [r3, #0]
 8001d92:	460a      	mov	r2, r1
 8001d94:	641a      	str	r2, [r3, #64]	; 0x40
 8001d96:	bf00      	nop
 8001d98:	370c      	adds	r7, #12
 8001d9a:	46bd      	mov	sp, r7
 8001d9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001da0:	4770      	bx	lr
 8001da2:	bf00      	nop
 8001da4:	200000a0 	.word	0x200000a0

08001da8 <UART_Idle_Line_Callback>:
 8001da8:	b480      	push	{r7}
 8001daa:	b085      	sub	sp, #20
 8001dac:	af00      	add	r7, sp, #0
 8001dae:	4603      	mov	r3, r0
 8001db0:	71fb      	strb	r3, [r7, #7]
 8001db2:	79fa      	ldrb	r2, [r7, #7]
 8001db4:	4922      	ldr	r1, [pc, #136]	; (8001e40 <UART_Idle_Line_Callback+0x98>)
 8001db6:	4613      	mov	r3, r2
 8001db8:	019b      	lsls	r3, r3, #6
 8001dba:	4413      	add	r3, r2
 8001dbc:	011b      	lsls	r3, r3, #4
 8001dbe:	440b      	add	r3, r1
 8001dc0:	681b      	ldr	r3, [r3, #0]
 8001dc2:	681b      	ldr	r3, [r3, #0]
 8001dc4:	681b      	ldr	r3, [r3, #0]
 8001dc6:	f003 0310 	and.w	r3, r3, #16
 8001dca:	2b10      	cmp	r3, #16
 8001dcc:	d132      	bne.n	8001e34 <UART_Idle_Line_Callback+0x8c>
 8001dce:	79fa      	ldrb	r2, [r7, #7]
 8001dd0:	491b      	ldr	r1, [pc, #108]	; (8001e40 <UART_Idle_Line_Callback+0x98>)
 8001dd2:	4613      	mov	r3, r2
 8001dd4:	019b      	lsls	r3, r3, #6
 8001dd6:	4413      	add	r3, r2
 8001dd8:	011b      	lsls	r3, r3, #4
 8001dda:	440b      	add	r3, r1
 8001ddc:	681b      	ldr	r3, [r3, #0]
 8001dde:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001de0:	681b      	ldr	r3, [r3, #0]
 8001de2:	685b      	ldr	r3, [r3, #4]
 8001de4:	b29b      	uxth	r3, r3
 8001de6:	79fa      	ldrb	r2, [r7, #7]
 8001de8:	f5c3 7300 	rsb	r3, r3, #512	; 0x200
 8001dec:	b298      	uxth	r0, r3
 8001dee:	4914      	ldr	r1, [pc, #80]	; (8001e40 <UART_Idle_Line_Callback+0x98>)
 8001df0:	4613      	mov	r3, r2
 8001df2:	019b      	lsls	r3, r3, #6
 8001df4:	4413      	add	r3, r2
 8001df6:	011b      	lsls	r3, r3, #4
 8001df8:	440b      	add	r3, r1
 8001dfa:	f203 430a 	addw	r3, r3, #1034	; 0x40a
 8001dfe:	4602      	mov	r2, r0
 8001e00:	801a      	strh	r2, [r3, #0]
 8001e02:	2300      	movs	r3, #0
 8001e04:	60fb      	str	r3, [r7, #12]
 8001e06:	79fa      	ldrb	r2, [r7, #7]
 8001e08:	490d      	ldr	r1, [pc, #52]	; (8001e40 <UART_Idle_Line_Callback+0x98>)
 8001e0a:	4613      	mov	r3, r2
 8001e0c:	019b      	lsls	r3, r3, #6
 8001e0e:	4413      	add	r3, r2
 8001e10:	011b      	lsls	r3, r3, #4
 8001e12:	440b      	add	r3, r1
 8001e14:	681b      	ldr	r3, [r3, #0]
 8001e16:	681b      	ldr	r3, [r3, #0]
 8001e18:	681b      	ldr	r3, [r3, #0]
 8001e1a:	60fb      	str	r3, [r7, #12]
 8001e1c:	79fa      	ldrb	r2, [r7, #7]
 8001e1e:	4908      	ldr	r1, [pc, #32]	; (8001e40 <UART_Idle_Line_Callback+0x98>)
 8001e20:	4613      	mov	r3, r2
 8001e22:	019b      	lsls	r3, r3, #6
 8001e24:	4413      	add	r3, r2
 8001e26:	011b      	lsls	r3, r3, #4
 8001e28:	440b      	add	r3, r1
 8001e2a:	681b      	ldr	r3, [r3, #0]
 8001e2c:	681b      	ldr	r3, [r3, #0]
 8001e2e:	685b      	ldr	r3, [r3, #4]
 8001e30:	60fb      	str	r3, [r7, #12]
 8001e32:	68fb      	ldr	r3, [r7, #12]
 8001e34:	bf00      	nop
 8001e36:	3714      	adds	r7, #20
 8001e38:	46bd      	mov	sp, r7
 8001e3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e3e:	4770      	bx	lr
 8001e40:	20000338 	.word	0x20000338

08001e44 <UART_Transfer_Complete_Callback>:
 8001e44:	b590      	push	{r4, r7, lr}
 8001e46:	b085      	sub	sp, #20
 8001e48:	af00      	add	r7, sp, #0
 8001e4a:	4603      	mov	r3, r0
 8001e4c:	71fb      	strb	r3, [r7, #7]
 8001e4e:	79fa      	ldrb	r2, [r7, #7]
 8001e50:	494d      	ldr	r1, [pc, #308]	; (8001f88 <UART_Transfer_Complete_Callback+0x144>)
 8001e52:	4613      	mov	r3, r2
 8001e54:	019b      	lsls	r3, r3, #6
 8001e56:	4413      	add	r3, r2
 8001e58:	011b      	lsls	r3, r3, #4
 8001e5a:	440b      	add	r3, r1
 8001e5c:	f203 2306 	addw	r3, r3, #518	; 0x206
 8001e60:	8819      	ldrh	r1, [r3, #0]
 8001e62:	79fa      	ldrb	r2, [r7, #7]
 8001e64:	4848      	ldr	r0, [pc, #288]	; (8001f88 <UART_Transfer_Complete_Callback+0x144>)
 8001e66:	4613      	mov	r3, r2
 8001e68:	019b      	lsls	r3, r3, #6
 8001e6a:	4413      	add	r3, r2
 8001e6c:	011b      	lsls	r3, r3, #4
 8001e6e:	4403      	add	r3, r0
 8001e70:	f503 7302 	add.w	r3, r3, #520	; 0x208
 8001e74:	881b      	ldrh	r3, [r3, #0]
 8001e76:	4299      	cmp	r1, r3
 8001e78:	d077      	beq.n	8001f6a <UART_Transfer_Complete_Callback+0x126>
 8001e7a:	2300      	movs	r3, #0
 8001e7c:	81fb      	strh	r3, [r7, #14]
 8001e7e:	79fa      	ldrb	r2, [r7, #7]
 8001e80:	4941      	ldr	r1, [pc, #260]	; (8001f88 <UART_Transfer_Complete_Callback+0x144>)
 8001e82:	4613      	mov	r3, r2
 8001e84:	019b      	lsls	r3, r3, #6
 8001e86:	4413      	add	r3, r2
 8001e88:	011b      	lsls	r3, r3, #4
 8001e8a:	440b      	add	r3, r1
 8001e8c:	f203 2306 	addw	r3, r3, #518	; 0x206
 8001e90:	8819      	ldrh	r1, [r3, #0]
 8001e92:	79fa      	ldrb	r2, [r7, #7]
 8001e94:	483c      	ldr	r0, [pc, #240]	; (8001f88 <UART_Transfer_Complete_Callback+0x144>)
 8001e96:	4613      	mov	r3, r2
 8001e98:	019b      	lsls	r3, r3, #6
 8001e9a:	4413      	add	r3, r2
 8001e9c:	011b      	lsls	r3, r3, #4
 8001e9e:	4403      	add	r3, r0
 8001ea0:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 8001ea4:	881b      	ldrh	r3, [r3, #0]
 8001ea6:	4299      	cmp	r1, r3
 8001ea8:	d916      	bls.n	8001ed8 <UART_Transfer_Complete_Callback+0x94>
 8001eaa:	79fa      	ldrb	r2, [r7, #7]
 8001eac:	4936      	ldr	r1, [pc, #216]	; (8001f88 <UART_Transfer_Complete_Callback+0x144>)
 8001eae:	4613      	mov	r3, r2
 8001eb0:	019b      	lsls	r3, r3, #6
 8001eb2:	4413      	add	r3, r2
 8001eb4:	011b      	lsls	r3, r3, #4
 8001eb6:	440b      	add	r3, r1
 8001eb8:	f203 2306 	addw	r3, r3, #518	; 0x206
 8001ebc:	8819      	ldrh	r1, [r3, #0]
 8001ebe:	79fa      	ldrb	r2, [r7, #7]
 8001ec0:	4831      	ldr	r0, [pc, #196]	; (8001f88 <UART_Transfer_Complete_Callback+0x144>)
 8001ec2:	4613      	mov	r3, r2
 8001ec4:	019b      	lsls	r3, r3, #6
 8001ec6:	4413      	add	r3, r2
 8001ec8:	011b      	lsls	r3, r3, #4
 8001eca:	4403      	add	r3, r0
 8001ecc:	f503 7302 	add.w	r3, r3, #520	; 0x208
 8001ed0:	881b      	ldrh	r3, [r3, #0]
 8001ed2:	1acb      	subs	r3, r1, r3
 8001ed4:	81fb      	strh	r3, [r7, #14]
 8001ed6:	e00c      	b.n	8001ef2 <UART_Transfer_Complete_Callback+0xae>
 8001ed8:	79fa      	ldrb	r2, [r7, #7]
 8001eda:	492b      	ldr	r1, [pc, #172]	; (8001f88 <UART_Transfer_Complete_Callback+0x144>)
 8001edc:	4613      	mov	r3, r2
 8001ede:	019b      	lsls	r3, r3, #6
 8001ee0:	4413      	add	r3, r2
 8001ee2:	011b      	lsls	r3, r3, #4
 8001ee4:	440b      	add	r3, r1
 8001ee6:	f503 7302 	add.w	r3, r3, #520	; 0x208
 8001eea:	881b      	ldrh	r3, [r3, #0]
 8001eec:	f5c3 7300 	rsb	r3, r3, #512	; 0x200
 8001ef0:	81fb      	strh	r3, [r7, #14]
 8001ef2:	79fa      	ldrb	r2, [r7, #7]
 8001ef4:	4924      	ldr	r1, [pc, #144]	; (8001f88 <UART_Transfer_Complete_Callback+0x144>)
 8001ef6:	4613      	mov	r3, r2
 8001ef8:	019b      	lsls	r3, r3, #6
 8001efa:	4413      	add	r3, r2
 8001efc:	011b      	lsls	r3, r3, #4
 8001efe:	440b      	add	r3, r1
 8001f00:	6818      	ldr	r0, [r3, #0]
 8001f02:	79fa      	ldrb	r2, [r7, #7]
 8001f04:	79f9      	ldrb	r1, [r7, #7]
 8001f06:	4c20      	ldr	r4, [pc, #128]	; (8001f88 <UART_Transfer_Complete_Callback+0x144>)
 8001f08:	460b      	mov	r3, r1
 8001f0a:	019b      	lsls	r3, r3, #6
 8001f0c:	440b      	add	r3, r1
 8001f0e:	011b      	lsls	r3, r3, #4
 8001f10:	4423      	add	r3, r4
 8001f12:	f503 7302 	add.w	r3, r3, #520	; 0x208
 8001f16:	881b      	ldrh	r3, [r3, #0]
 8001f18:	4619      	mov	r1, r3
 8001f1a:	4613      	mov	r3, r2
 8001f1c:	019b      	lsls	r3, r3, #6
 8001f1e:	4413      	add	r3, r2
 8001f20:	011b      	lsls	r3, r3, #4
 8001f22:	440b      	add	r3, r1
 8001f24:	4a18      	ldr	r2, [pc, #96]	; (8001f88 <UART_Transfer_Complete_Callback+0x144>)
 8001f26:	4413      	add	r3, r2
 8001f28:	3306      	adds	r3, #6
 8001f2a:	89fa      	ldrh	r2, [r7, #14]
 8001f2c:	4619      	mov	r1, r3
 8001f2e:	f005 f9b7 	bl	80072a0 <HAL_UART_Transmit_DMA>
 8001f32:	79fa      	ldrb	r2, [r7, #7]
 8001f34:	4914      	ldr	r1, [pc, #80]	; (8001f88 <UART_Transfer_Complete_Callback+0x144>)
 8001f36:	4613      	mov	r3, r2
 8001f38:	019b      	lsls	r3, r3, #6
 8001f3a:	4413      	add	r3, r2
 8001f3c:	011b      	lsls	r3, r3, #4
 8001f3e:	440b      	add	r3, r1
 8001f40:	f503 7302 	add.w	r3, r3, #520	; 0x208
 8001f44:	881a      	ldrh	r2, [r3, #0]
 8001f46:	89fb      	ldrh	r3, [r7, #14]
 8001f48:	4413      	add	r3, r2
 8001f4a:	b29b      	uxth	r3, r3
 8001f4c:	79fa      	ldrb	r2, [r7, #7]
 8001f4e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8001f52:	b298      	uxth	r0, r3
 8001f54:	490c      	ldr	r1, [pc, #48]	; (8001f88 <UART_Transfer_Complete_Callback+0x144>)
 8001f56:	4613      	mov	r3, r2
 8001f58:	019b      	lsls	r3, r3, #6
 8001f5a:	4413      	add	r3, r2
 8001f5c:	011b      	lsls	r3, r3, #4
 8001f5e:	440b      	add	r3, r1
 8001f60:	f503 7302 	add.w	r3, r3, #520	; 0x208
 8001f64:	4602      	mov	r2, r0
 8001f66:	801a      	strh	r2, [r3, #0]
 8001f68:	e009      	b.n	8001f7e <UART_Transfer_Complete_Callback+0x13a>
 8001f6a:	79fa      	ldrb	r2, [r7, #7]
 8001f6c:	4906      	ldr	r1, [pc, #24]	; (8001f88 <UART_Transfer_Complete_Callback+0x144>)
 8001f6e:	4613      	mov	r3, r2
 8001f70:	019b      	lsls	r3, r3, #6
 8001f72:	4413      	add	r3, r2
 8001f74:	011b      	lsls	r3, r3, #4
 8001f76:	440b      	add	r3, r1
 8001f78:	3305      	adds	r3, #5
 8001f7a:	2200      	movs	r2, #0
 8001f7c:	701a      	strb	r2, [r3, #0]
 8001f7e:	bf00      	nop
 8001f80:	3714      	adds	r7, #20
 8001f82:	46bd      	mov	sp, r7
 8001f84:	bd90      	pop	{r4, r7, pc}
 8001f86:	bf00      	nop
 8001f88:	20000338 	.word	0x20000338

08001f8c <UART_Availables>:
 8001f8c:	b580      	push	{r7, lr}
 8001f8e:	b082      	sub	sp, #8
 8001f90:	af00      	add	r7, sp, #0
 8001f92:	4603      	mov	r3, r0
 8001f94:	71fb      	strb	r3, [r7, #7]
 8001f96:	79fb      	ldrb	r3, [r7, #7]
 8001f98:	4618      	mov	r0, r3
 8001f9a:	f000 f94f 	bl	800223c <get_nb_bytes_available>
 8001f9e:	4603      	mov	r3, r0
 8001fa0:	4618      	mov	r0, r3
 8001fa2:	3708      	adds	r7, #8
 8001fa4:	46bd      	mov	sp, r7
 8001fa6:	bd80      	pop	{r7, pc}

08001fa8 <UART_Get>:
 8001fa8:	b580      	push	{r7, lr}
 8001faa:	b082      	sub	sp, #8
 8001fac:	af00      	add	r7, sp, #0
 8001fae:	4603      	mov	r3, r0
 8001fb0:	6039      	str	r1, [r7, #0]
 8001fb2:	71fb      	strb	r3, [r7, #7]
 8001fb4:	79fb      	ldrb	r3, [r7, #7]
 8001fb6:	4618      	mov	r0, r3
 8001fb8:	f000 f940 	bl	800223c <get_nb_bytes_available>
 8001fbc:	4603      	mov	r3, r0
 8001fbe:	2b00      	cmp	r3, #0
 8001fc0:	d035      	beq.n	800202e <UART_Get+0x86>
 8001fc2:	79fa      	ldrb	r2, [r7, #7]
 8001fc4:	79f9      	ldrb	r1, [r7, #7]
 8001fc6:	481c      	ldr	r0, [pc, #112]	; (8002038 <UART_Get+0x90>)
 8001fc8:	460b      	mov	r3, r1
 8001fca:	019b      	lsls	r3, r3, #6
 8001fcc:	440b      	add	r3, r1
 8001fce:	011b      	lsls	r3, r3, #4
 8001fd0:	4403      	add	r3, r0
 8001fd2:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 8001fd6:	881b      	ldrh	r3, [r3, #0]
 8001fd8:	4618      	mov	r0, r3
 8001fda:	4917      	ldr	r1, [pc, #92]	; (8002038 <UART_Get+0x90>)
 8001fdc:	4613      	mov	r3, r2
 8001fde:	019b      	lsls	r3, r3, #6
 8001fe0:	4413      	add	r3, r2
 8001fe2:	011b      	lsls	r3, r3, #4
 8001fe4:	440b      	add	r3, r1
 8001fe6:	4403      	add	r3, r0
 8001fe8:	f203 230a 	addw	r3, r3, #522	; 0x20a
 8001fec:	781a      	ldrb	r2, [r3, #0]
 8001fee:	683b      	ldr	r3, [r7, #0]
 8001ff0:	701a      	strb	r2, [r3, #0]
 8001ff2:	79fa      	ldrb	r2, [r7, #7]
 8001ff4:	4910      	ldr	r1, [pc, #64]	; (8002038 <UART_Get+0x90>)
 8001ff6:	4613      	mov	r3, r2
 8001ff8:	019b      	lsls	r3, r3, #6
 8001ffa:	4413      	add	r3, r2
 8001ffc:	011b      	lsls	r3, r3, #4
 8001ffe:	440b      	add	r3, r1
 8002000:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 8002004:	881b      	ldrh	r3, [r3, #0]
 8002006:	3301      	adds	r3, #1
 8002008:	425a      	negs	r2, r3
 800200a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800200e:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8002012:	bf58      	it	pl
 8002014:	4253      	negpl	r3, r2
 8002016:	79fa      	ldrb	r2, [r7, #7]
 8002018:	b298      	uxth	r0, r3
 800201a:	4907      	ldr	r1, [pc, #28]	; (8002038 <UART_Get+0x90>)
 800201c:	4613      	mov	r3, r2
 800201e:	019b      	lsls	r3, r3, #6
 8002020:	4413      	add	r3, r2
 8002022:	011b      	lsls	r3, r3, #4
 8002024:	440b      	add	r3, r1
 8002026:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 800202a:	4602      	mov	r2, r0
 800202c:	801a      	strh	r2, [r3, #0]
 800202e:	bf00      	nop
 8002030:	3708      	adds	r7, #8
 8002032:	46bd      	mov	sp, r7
 8002034:	bd80      	pop	{r7, pc}
 8002036:	bf00      	nop
 8002038:	20000338 	.word	0x20000338

0800203c <UART_Init>:
 800203c:	b580      	push	{r7, lr}
 800203e:	b082      	sub	sp, #8
 8002040:	af00      	add	r7, sp, #0
 8002042:	4b21      	ldr	r3, [pc, #132]	; (80020c8 <UART_Init+0x8c>)
 8002044:	4a21      	ldr	r2, [pc, #132]	; (80020cc <UART_Init+0x90>)
 8002046:	601a      	str	r2, [r3, #0]
 8002048:	4b1f      	ldr	r3, [pc, #124]	; (80020c8 <UART_Init+0x8c>)
 800204a:	4a21      	ldr	r2, [pc, #132]	; (80020d0 <UART_Init+0x94>)
 800204c:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
 8002050:	2300      	movs	r3, #0
 8002052:	71fb      	strb	r3, [r7, #7]
 8002054:	e02f      	b.n	80020b6 <UART_Init+0x7a>
 8002056:	79fa      	ldrb	r2, [r7, #7]
 8002058:	491b      	ldr	r1, [pc, #108]	; (80020c8 <UART_Init+0x8c>)
 800205a:	4613      	mov	r3, r2
 800205c:	019b      	lsls	r3, r3, #6
 800205e:	4413      	add	r3, r2
 8002060:	011b      	lsls	r3, r3, #4
 8002062:	440b      	add	r3, r1
 8002064:	681b      	ldr	r3, [r3, #0]
 8002066:	681b      	ldr	r3, [r3, #0]
 8002068:	68d9      	ldr	r1, [r3, #12]
 800206a:	79fa      	ldrb	r2, [r7, #7]
 800206c:	4816      	ldr	r0, [pc, #88]	; (80020c8 <UART_Init+0x8c>)
 800206e:	4613      	mov	r3, r2
 8002070:	019b      	lsls	r3, r3, #6
 8002072:	4413      	add	r3, r2
 8002074:	011b      	lsls	r3, r3, #4
 8002076:	4403      	add	r3, r0
 8002078:	681b      	ldr	r3, [r3, #0]
 800207a:	681b      	ldr	r3, [r3, #0]
 800207c:	f041 0210 	orr.w	r2, r1, #16
 8002080:	60da      	str	r2, [r3, #12]
 8002082:	79fa      	ldrb	r2, [r7, #7]
 8002084:	4910      	ldr	r1, [pc, #64]	; (80020c8 <UART_Init+0x8c>)
 8002086:	4613      	mov	r3, r2
 8002088:	019b      	lsls	r3, r3, #6
 800208a:	4413      	add	r3, r2
 800208c:	011b      	lsls	r3, r3, #4
 800208e:	440b      	add	r3, r1
 8002090:	6818      	ldr	r0, [r3, #0]
 8002092:	79fa      	ldrb	r2, [r7, #7]
 8002094:	4613      	mov	r3, r2
 8002096:	019b      	lsls	r3, r3, #6
 8002098:	4413      	add	r3, r2
 800209a:	011b      	lsls	r3, r3, #4
 800209c:	f503 7302 	add.w	r3, r3, #520	; 0x208
 80020a0:	4a09      	ldr	r2, [pc, #36]	; (80020c8 <UART_Init+0x8c>)
 80020a2:	4413      	add	r3, r2
 80020a4:	3302      	adds	r3, #2
 80020a6:	f44f 7200 	mov.w	r2, #512	; 0x200
 80020aa:	4619      	mov	r1, r3
 80020ac:	f005 f976 	bl	800739c <HAL_UART_Receive_DMA>
 80020b0:	79fb      	ldrb	r3, [r7, #7]
 80020b2:	3301      	adds	r3, #1
 80020b4:	71fb      	strb	r3, [r7, #7]
 80020b6:	79fb      	ldrb	r3, [r7, #7]
 80020b8:	2b01      	cmp	r3, #1
 80020ba:	d9cc      	bls.n	8002056 <UART_Init+0x1a>
 80020bc:	bf00      	nop
 80020be:	bf00      	nop
 80020c0:	3708      	adds	r7, #8
 80020c2:	46bd      	mov	sp, r7
 80020c4:	bd80      	pop	{r7, pc}
 80020c6:	bf00      	nop
 80020c8:	20000338 	.word	0x20000338
 80020cc:	200010f8 	.word	0x200010f8
 80020d0:	2000113c 	.word	0x2000113c

080020d4 <UART_Transmit>:
 80020d4:	b590      	push	{r4, r7, lr}
 80020d6:	b085      	sub	sp, #20
 80020d8:	af00      	add	r7, sp, #0
 80020da:	4603      	mov	r3, r0
 80020dc:	6039      	str	r1, [r7, #0]
 80020de:	71fb      	strb	r3, [r7, #7]
 80020e0:	4613      	mov	r3, r2
 80020e2:	80bb      	strh	r3, [r7, #4]
 80020e4:	2300      	movs	r3, #0
 80020e6:	81fb      	strh	r3, [r7, #14]
 80020e8:	e020      	b.n	800212c <UART_Transmit+0x58>
 80020ea:	89fb      	ldrh	r3, [r7, #14]
 80020ec:	683a      	ldr	r2, [r7, #0]
 80020ee:	18d0      	adds	r0, r2, r3
 80020f0:	79fa      	ldrb	r2, [r7, #7]
 80020f2:	79f9      	ldrb	r1, [r7, #7]
 80020f4:	4c50      	ldr	r4, [pc, #320]	; (8002238 <UART_Transmit+0x164>)
 80020f6:	460b      	mov	r3, r1
 80020f8:	019b      	lsls	r3, r3, #6
 80020fa:	440b      	add	r3, r1
 80020fc:	011b      	lsls	r3, r3, #4
 80020fe:	4423      	add	r3, r4
 8002100:	f203 2306 	addw	r3, r3, #518	; 0x206
 8002104:	8819      	ldrh	r1, [r3, #0]
 8002106:	89fb      	ldrh	r3, [r7, #14]
 8002108:	440b      	add	r3, r1
 800210a:	b29b      	uxth	r3, r3
 800210c:	f3c3 0108 	ubfx	r1, r3, #0, #9
 8002110:	7804      	ldrb	r4, [r0, #0]
 8002112:	4849      	ldr	r0, [pc, #292]	; (8002238 <UART_Transmit+0x164>)
 8002114:	4613      	mov	r3, r2
 8002116:	019b      	lsls	r3, r3, #6
 8002118:	4413      	add	r3, r2
 800211a:	011b      	lsls	r3, r3, #4
 800211c:	4403      	add	r3, r0
 800211e:	440b      	add	r3, r1
 8002120:	3306      	adds	r3, #6
 8002122:	4622      	mov	r2, r4
 8002124:	701a      	strb	r2, [r3, #0]
 8002126:	89fb      	ldrh	r3, [r7, #14]
 8002128:	3301      	adds	r3, #1
 800212a:	81fb      	strh	r3, [r7, #14]
 800212c:	89fa      	ldrh	r2, [r7, #14]
 800212e:	88bb      	ldrh	r3, [r7, #4]
 8002130:	429a      	cmp	r2, r3
 8002132:	d3da      	bcc.n	80020ea <UART_Transmit+0x16>
 8002134:	79fa      	ldrb	r2, [r7, #7]
 8002136:	4940      	ldr	r1, [pc, #256]	; (8002238 <UART_Transmit+0x164>)
 8002138:	4613      	mov	r3, r2
 800213a:	019b      	lsls	r3, r3, #6
 800213c:	4413      	add	r3, r2
 800213e:	011b      	lsls	r3, r3, #4
 8002140:	440b      	add	r3, r1
 8002142:	f203 2306 	addw	r3, r3, #518	; 0x206
 8002146:	881a      	ldrh	r2, [r3, #0]
 8002148:	88bb      	ldrh	r3, [r7, #4]
 800214a:	4413      	add	r3, r2
 800214c:	b29b      	uxth	r3, r3
 800214e:	79fa      	ldrb	r2, [r7, #7]
 8002150:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8002154:	b298      	uxth	r0, r3
 8002156:	4938      	ldr	r1, [pc, #224]	; (8002238 <UART_Transmit+0x164>)
 8002158:	4613      	mov	r3, r2
 800215a:	019b      	lsls	r3, r3, #6
 800215c:	4413      	add	r3, r2
 800215e:	011b      	lsls	r3, r3, #4
 8002160:	440b      	add	r3, r1
 8002162:	f203 2306 	addw	r3, r3, #518	; 0x206
 8002166:	4602      	mov	r2, r0
 8002168:	801a      	strh	r2, [r3, #0]
 800216a:	79fa      	ldrb	r2, [r7, #7]
 800216c:	4932      	ldr	r1, [pc, #200]	; (8002238 <UART_Transmit+0x164>)
 800216e:	4613      	mov	r3, r2
 8002170:	019b      	lsls	r3, r3, #6
 8002172:	4413      	add	r3, r2
 8002174:	011b      	lsls	r3, r3, #4
 8002176:	440b      	add	r3, r1
 8002178:	3305      	adds	r3, #5
 800217a:	781b      	ldrb	r3, [r3, #0]
 800217c:	2b00      	cmp	r3, #0
 800217e:	d157      	bne.n	8002230 <UART_Transmit+0x15c>
 8002180:	79fa      	ldrb	r2, [r7, #7]
 8002182:	492d      	ldr	r1, [pc, #180]	; (8002238 <UART_Transmit+0x164>)
 8002184:	4613      	mov	r3, r2
 8002186:	019b      	lsls	r3, r3, #6
 8002188:	4413      	add	r3, r2
 800218a:	011b      	lsls	r3, r3, #4
 800218c:	440b      	add	r3, r1
 800218e:	3305      	adds	r3, #5
 8002190:	2201      	movs	r2, #1
 8002192:	701a      	strb	r2, [r3, #0]
 8002194:	79fa      	ldrb	r2, [r7, #7]
 8002196:	4928      	ldr	r1, [pc, #160]	; (8002238 <UART_Transmit+0x164>)
 8002198:	4613      	mov	r3, r2
 800219a:	019b      	lsls	r3, r3, #6
 800219c:	4413      	add	r3, r2
 800219e:	011b      	lsls	r3, r3, #4
 80021a0:	440b      	add	r3, r1
 80021a2:	f503 7302 	add.w	r3, r3, #520	; 0x208
 80021a6:	881b      	ldrh	r3, [r3, #0]
 80021a8:	f5c3 7300 	rsb	r3, r3, #512	; 0x200
 80021ac:	81bb      	strh	r3, [r7, #12]
 80021ae:	88ba      	ldrh	r2, [r7, #4]
 80021b0:	89bb      	ldrh	r3, [r7, #12]
 80021b2:	4293      	cmp	r3, r2
 80021b4:	bf28      	it	cs
 80021b6:	4613      	movcs	r3, r2
 80021b8:	80bb      	strh	r3, [r7, #4]
 80021ba:	79fa      	ldrb	r2, [r7, #7]
 80021bc:	491e      	ldr	r1, [pc, #120]	; (8002238 <UART_Transmit+0x164>)
 80021be:	4613      	mov	r3, r2
 80021c0:	019b      	lsls	r3, r3, #6
 80021c2:	4413      	add	r3, r2
 80021c4:	011b      	lsls	r3, r3, #4
 80021c6:	440b      	add	r3, r1
 80021c8:	6818      	ldr	r0, [r3, #0]
 80021ca:	79fa      	ldrb	r2, [r7, #7]
 80021cc:	79f9      	ldrb	r1, [r7, #7]
 80021ce:	4c1a      	ldr	r4, [pc, #104]	; (8002238 <UART_Transmit+0x164>)
 80021d0:	460b      	mov	r3, r1
 80021d2:	019b      	lsls	r3, r3, #6
 80021d4:	440b      	add	r3, r1
 80021d6:	011b      	lsls	r3, r3, #4
 80021d8:	4423      	add	r3, r4
 80021da:	f503 7302 	add.w	r3, r3, #520	; 0x208
 80021de:	881b      	ldrh	r3, [r3, #0]
 80021e0:	4619      	mov	r1, r3
 80021e2:	4613      	mov	r3, r2
 80021e4:	019b      	lsls	r3, r3, #6
 80021e6:	4413      	add	r3, r2
 80021e8:	011b      	lsls	r3, r3, #4
 80021ea:	440b      	add	r3, r1
 80021ec:	4a12      	ldr	r2, [pc, #72]	; (8002238 <UART_Transmit+0x164>)
 80021ee:	4413      	add	r3, r2
 80021f0:	3306      	adds	r3, #6
 80021f2:	88ba      	ldrh	r2, [r7, #4]
 80021f4:	4619      	mov	r1, r3
 80021f6:	f005 f853 	bl	80072a0 <HAL_UART_Transmit_DMA>
 80021fa:	79fa      	ldrb	r2, [r7, #7]
 80021fc:	490e      	ldr	r1, [pc, #56]	; (8002238 <UART_Transmit+0x164>)
 80021fe:	4613      	mov	r3, r2
 8002200:	019b      	lsls	r3, r3, #6
 8002202:	4413      	add	r3, r2
 8002204:	011b      	lsls	r3, r3, #4
 8002206:	440b      	add	r3, r1
 8002208:	f503 7302 	add.w	r3, r3, #520	; 0x208
 800220c:	881a      	ldrh	r2, [r3, #0]
 800220e:	88bb      	ldrh	r3, [r7, #4]
 8002210:	4413      	add	r3, r2
 8002212:	b29b      	uxth	r3, r3
 8002214:	79fa      	ldrb	r2, [r7, #7]
 8002216:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800221a:	b298      	uxth	r0, r3
 800221c:	4906      	ldr	r1, [pc, #24]	; (8002238 <UART_Transmit+0x164>)
 800221e:	4613      	mov	r3, r2
 8002220:	019b      	lsls	r3, r3, #6
 8002222:	4413      	add	r3, r2
 8002224:	011b      	lsls	r3, r3, #4
 8002226:	440b      	add	r3, r1
 8002228:	f503 7302 	add.w	r3, r3, #520	; 0x208
 800222c:	4602      	mov	r2, r0
 800222e:	801a      	strh	r2, [r3, #0]
 8002230:	bf00      	nop
 8002232:	3714      	adds	r7, #20
 8002234:	46bd      	mov	sp, r7
 8002236:	bd90      	pop	{r4, r7, pc}
 8002238:	20000338 	.word	0x20000338

0800223c <get_nb_bytes_available>:
 800223c:	b480      	push	{r7}
 800223e:	b085      	sub	sp, #20
 8002240:	af00      	add	r7, sp, #0
 8002242:	4603      	mov	r3, r0
 8002244:	71fb      	strb	r3, [r7, #7]
 8002246:	2300      	movs	r3, #0
 8002248:	81fb      	strh	r3, [r7, #14]
 800224a:	79fa      	ldrb	r2, [r7, #7]
 800224c:	4932      	ldr	r1, [pc, #200]	; (8002318 <get_nb_bytes_available+0xdc>)
 800224e:	4613      	mov	r3, r2
 8002250:	019b      	lsls	r3, r3, #6
 8002252:	4413      	add	r3, r2
 8002254:	011b      	lsls	r3, r3, #4
 8002256:	440b      	add	r3, r1
 8002258:	f203 430a 	addw	r3, r3, #1034	; 0x40a
 800225c:	881b      	ldrh	r3, [r3, #0]
 800225e:	b299      	uxth	r1, r3
 8002260:	79fa      	ldrb	r2, [r7, #7]
 8002262:	482d      	ldr	r0, [pc, #180]	; (8002318 <get_nb_bytes_available+0xdc>)
 8002264:	4613      	mov	r3, r2
 8002266:	019b      	lsls	r3, r3, #6
 8002268:	4413      	add	r3, r2
 800226a:	011b      	lsls	r3, r3, #4
 800226c:	4403      	add	r3, r0
 800226e:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 8002272:	881b      	ldrh	r3, [r3, #0]
 8002274:	4299      	cmp	r1, r3
 8002276:	d917      	bls.n	80022a8 <get_nb_bytes_available+0x6c>
 8002278:	79fa      	ldrb	r2, [r7, #7]
 800227a:	4927      	ldr	r1, [pc, #156]	; (8002318 <get_nb_bytes_available+0xdc>)
 800227c:	4613      	mov	r3, r2
 800227e:	019b      	lsls	r3, r3, #6
 8002280:	4413      	add	r3, r2
 8002282:	011b      	lsls	r3, r3, #4
 8002284:	440b      	add	r3, r1
 8002286:	f203 430a 	addw	r3, r3, #1034	; 0x40a
 800228a:	881b      	ldrh	r3, [r3, #0]
 800228c:	b299      	uxth	r1, r3
 800228e:	79fa      	ldrb	r2, [r7, #7]
 8002290:	4821      	ldr	r0, [pc, #132]	; (8002318 <get_nb_bytes_available+0xdc>)
 8002292:	4613      	mov	r3, r2
 8002294:	019b      	lsls	r3, r3, #6
 8002296:	4413      	add	r3, r2
 8002298:	011b      	lsls	r3, r3, #4
 800229a:	4403      	add	r3, r0
 800229c:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 80022a0:	881b      	ldrh	r3, [r3, #0]
 80022a2:	1acb      	subs	r3, r1, r3
 80022a4:	81fb      	strh	r3, [r7, #14]
 80022a6:	e030      	b.n	800230a <get_nb_bytes_available+0xce>
 80022a8:	79fa      	ldrb	r2, [r7, #7]
 80022aa:	491b      	ldr	r1, [pc, #108]	; (8002318 <get_nb_bytes_available+0xdc>)
 80022ac:	4613      	mov	r3, r2
 80022ae:	019b      	lsls	r3, r3, #6
 80022b0:	4413      	add	r3, r2
 80022b2:	011b      	lsls	r3, r3, #4
 80022b4:	440b      	add	r3, r1
 80022b6:	f203 430a 	addw	r3, r3, #1034	; 0x40a
 80022ba:	881b      	ldrh	r3, [r3, #0]
 80022bc:	b299      	uxth	r1, r3
 80022be:	79fa      	ldrb	r2, [r7, #7]
 80022c0:	4815      	ldr	r0, [pc, #84]	; (8002318 <get_nb_bytes_available+0xdc>)
 80022c2:	4613      	mov	r3, r2
 80022c4:	019b      	lsls	r3, r3, #6
 80022c6:	4413      	add	r3, r2
 80022c8:	011b      	lsls	r3, r3, #4
 80022ca:	4403      	add	r3, r0
 80022cc:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 80022d0:	881b      	ldrh	r3, [r3, #0]
 80022d2:	4299      	cmp	r1, r3
 80022d4:	d219      	bcs.n	800230a <get_nb_bytes_available+0xce>
 80022d6:	79fa      	ldrb	r2, [r7, #7]
 80022d8:	490f      	ldr	r1, [pc, #60]	; (8002318 <get_nb_bytes_available+0xdc>)
 80022da:	4613      	mov	r3, r2
 80022dc:	019b      	lsls	r3, r3, #6
 80022de:	4413      	add	r3, r2
 80022e0:	011b      	lsls	r3, r3, #4
 80022e2:	440b      	add	r3, r1
 80022e4:	f203 430a 	addw	r3, r3, #1034	; 0x40a
 80022e8:	881b      	ldrh	r3, [r3, #0]
 80022ea:	b299      	uxth	r1, r3
 80022ec:	79fa      	ldrb	r2, [r7, #7]
 80022ee:	480a      	ldr	r0, [pc, #40]	; (8002318 <get_nb_bytes_available+0xdc>)
 80022f0:	4613      	mov	r3, r2
 80022f2:	019b      	lsls	r3, r3, #6
 80022f4:	4413      	add	r3, r2
 80022f6:	011b      	lsls	r3, r3, #4
 80022f8:	4403      	add	r3, r0
 80022fa:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 80022fe:	881b      	ldrh	r3, [r3, #0]
 8002300:	1acb      	subs	r3, r1, r3
 8002302:	b29b      	uxth	r3, r3
 8002304:	f503 7300 	add.w	r3, r3, #512	; 0x200
 8002308:	81fb      	strh	r3, [r7, #14]
 800230a:	89fb      	ldrh	r3, [r7, #14]
 800230c:	4618      	mov	r0, r3
 800230e:	3714      	adds	r7, #20
 8002310:	46bd      	mov	sp, r7
 8002312:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002316:	4770      	bx	lr
 8002318:	20000338 	.word	0x20000338

0800231c <IBUS_Init>:
 800231c:	b480      	push	{r7}
 800231e:	b083      	sub	sp, #12
 8002320:	af00      	add	r7, sp, #0
 8002322:	6078      	str	r0, [r7, #4]
 8002324:	4a04      	ldr	r2, [pc, #16]	; (8002338 <IBUS_Init+0x1c>)
 8002326:	687b      	ldr	r3, [r7, #4]
 8002328:	6013      	str	r3, [r2, #0]
 800232a:	bf00      	nop
 800232c:	370c      	adds	r7, #12
 800232e:	46bd      	mov	sp, r7
 8002330:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002334:	4770      	bx	lr
 8002336:	bf00      	nop
 8002338:	20000b58 	.word	0x20000b58

0800233c <IBUS_Process>:
 800233c:	b580      	push	{r7, lr}
 800233e:	b084      	sub	sp, #16
 8002340:	af00      	add	r7, sp, #0
 8002342:	2001      	movs	r0, #1
 8002344:	f7ff fe22 	bl	8001f8c <UART_Availables>
 8002348:	4603      	mov	r3, r0
 800234a:	81fb      	strh	r3, [r7, #14]
 800234c:	89fb      	ldrh	r3, [r7, #14]
 800234e:	2b00      	cmp	r3, #0
 8002350:	d101      	bne.n	8002356 <IBUS_Process+0x1a>
 8002352:	2300      	movs	r3, #0
 8002354:	e092      	b.n	800247c <IBUS_Process+0x140>
 8002356:	89fb      	ldrh	r3, [r7, #14]
 8002358:	2b32      	cmp	r3, #50	; 0x32
 800235a:	bf28      	it	cs
 800235c:	2332      	movcs	r3, #50	; 0x32
 800235e:	81fb      	strh	r3, [r7, #14]
 8002360:	2300      	movs	r3, #0
 8002362:	737b      	strb	r3, [r7, #13]
 8002364:	2300      	movs	r3, #0
 8002366:	70fb      	strb	r3, [r7, #3]
 8002368:	e083      	b.n	8002472 <IBUS_Process+0x136>
 800236a:	1cfb      	adds	r3, r7, #3
 800236c:	4619      	mov	r1, r3
 800236e:	2001      	movs	r0, #1
 8002370:	f7ff fe1a 	bl	8001fa8 <UART_Get>
 8002374:	4b43      	ldr	r3, [pc, #268]	; (8002484 <IBUS_Process+0x148>)
 8002376:	f893 3026 	ldrb.w	r3, [r3, #38]	; 0x26
 800237a:	2b02      	cmp	r3, #2
 800237c:	d027      	beq.n	80023ce <IBUS_Process+0x92>
 800237e:	2b02      	cmp	r3, #2
 8002380:	dc74      	bgt.n	800246c <IBUS_Process+0x130>
 8002382:	2b00      	cmp	r3, #0
 8002384:	d002      	beq.n	800238c <IBUS_Process+0x50>
 8002386:	2b01      	cmp	r3, #1
 8002388:	d00b      	beq.n	80023a2 <IBUS_Process+0x66>
 800238a:	e06f      	b.n	800246c <IBUS_Process+0x130>
 800238c:	78fb      	ldrb	r3, [r7, #3]
 800238e:	2b20      	cmp	r3, #32
 8002390:	d167      	bne.n	8002462 <IBUS_Process+0x126>
 8002392:	4b3c      	ldr	r3, [pc, #240]	; (8002484 <IBUS_Process+0x148>)
 8002394:	2201      	movs	r2, #1
 8002396:	f883 2026 	strb.w	r2, [r3, #38]	; 0x26
 800239a:	78fa      	ldrb	r2, [r7, #3]
 800239c:	4b39      	ldr	r3, [pc, #228]	; (8002484 <IBUS_Process+0x148>)
 800239e:	711a      	strb	r2, [r3, #4]
 80023a0:	e05f      	b.n	8002462 <IBUS_Process+0x126>
 80023a2:	78fb      	ldrb	r3, [r7, #3]
 80023a4:	2b40      	cmp	r3, #64	; 0x40
 80023a6:	d10a      	bne.n	80023be <IBUS_Process+0x82>
 80023a8:	4b36      	ldr	r3, [pc, #216]	; (8002484 <IBUS_Process+0x148>)
 80023aa:	2202      	movs	r2, #2
 80023ac:	f883 2026 	strb.w	r2, [r3, #38]	; 0x26
 80023b0:	78fa      	ldrb	r2, [r7, #3]
 80023b2:	4b34      	ldr	r3, [pc, #208]	; (8002484 <IBUS_Process+0x148>)
 80023b4:	715a      	strb	r2, [r3, #5]
 80023b6:	4b33      	ldr	r3, [pc, #204]	; (8002484 <IBUS_Process+0x148>)
 80023b8:	2202      	movs	r2, #2
 80023ba:	849a      	strh	r2, [r3, #36]	; 0x24
 80023bc:	e053      	b.n	8002466 <IBUS_Process+0x12a>
 80023be:	78fb      	ldrb	r3, [r7, #3]
 80023c0:	2b20      	cmp	r3, #32
 80023c2:	d050      	beq.n	8002466 <IBUS_Process+0x12a>
 80023c4:	4b2f      	ldr	r3, [pc, #188]	; (8002484 <IBUS_Process+0x148>)
 80023c6:	2200      	movs	r2, #0
 80023c8:	f883 2026 	strb.w	r2, [r3, #38]	; 0x26
 80023cc:	e04b      	b.n	8002466 <IBUS_Process+0x12a>
 80023ce:	4b2d      	ldr	r3, [pc, #180]	; (8002484 <IBUS_Process+0x148>)
 80023d0:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 80023d2:	1c5a      	adds	r2, r3, #1
 80023d4:	b291      	uxth	r1, r2
 80023d6:	4a2b      	ldr	r2, [pc, #172]	; (8002484 <IBUS_Process+0x148>)
 80023d8:	8491      	strh	r1, [r2, #36]	; 0x24
 80023da:	4619      	mov	r1, r3
 80023dc:	78fa      	ldrb	r2, [r7, #3]
 80023de:	4b29      	ldr	r3, [pc, #164]	; (8002484 <IBUS_Process+0x148>)
 80023e0:	440b      	add	r3, r1
 80023e2:	711a      	strb	r2, [r3, #4]
 80023e4:	4b27      	ldr	r3, [pc, #156]	; (8002484 <IBUS_Process+0x148>)
 80023e6:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 80023e8:	2b20      	cmp	r3, #32
 80023ea:	d13e      	bne.n	800246a <IBUS_Process+0x12e>
 80023ec:	4b25      	ldr	r3, [pc, #148]	; (8002484 <IBUS_Process+0x148>)
 80023ee:	f893 3022 	ldrb.w	r3, [r3, #34]	; 0x22
 80023f2:	461a      	mov	r2, r3
 80023f4:	4b23      	ldr	r3, [pc, #140]	; (8002484 <IBUS_Process+0x148>)
 80023f6:	f893 3023 	ldrb.w	r3, [r3, #35]	; 0x23
 80023fa:	021b      	lsls	r3, r3, #8
 80023fc:	4313      	orrs	r3, r2
 80023fe:	607b      	str	r3, [r7, #4]
 8002400:	4821      	ldr	r0, [pc, #132]	; (8002488 <IBUS_Process+0x14c>)
 8002402:	f000 f843 	bl	800248c <check_sum_f>
 8002406:	4603      	mov	r3, r0
 8002408:	f5c3 437f 	rsb	r3, r3, #65280	; 0xff00
 800240c:	33ff      	adds	r3, #255	; 0xff
 800240e:	687a      	ldr	r2, [r7, #4]
 8002410:	429a      	cmp	r2, r3
 8002412:	d121      	bne.n	8002458 <IBUS_Process+0x11c>
 8002414:	2300      	movs	r3, #0
 8002416:	60bb      	str	r3, [r7, #8]
 8002418:	e019      	b.n	800244e <IBUS_Process+0x112>
 800241a:	68bb      	ldr	r3, [r7, #8]
 800241c:	3302      	adds	r3, #2
 800241e:	4a19      	ldr	r2, [pc, #100]	; (8002484 <IBUS_Process+0x148>)
 8002420:	4413      	add	r3, r2
 8002422:	791b      	ldrb	r3, [r3, #4]
 8002424:	b21a      	sxth	r2, r3
 8002426:	68bb      	ldr	r3, [r7, #8]
 8002428:	3303      	adds	r3, #3
 800242a:	4916      	ldr	r1, [pc, #88]	; (8002484 <IBUS_Process+0x148>)
 800242c:	440b      	add	r3, r1
 800242e:	791b      	ldrb	r3, [r3, #4]
 8002430:	021b      	lsls	r3, r3, #8
 8002432:	b21b      	sxth	r3, r3
 8002434:	4313      	orrs	r3, r2
 8002436:	b219      	sxth	r1, r3
 8002438:	4b12      	ldr	r3, [pc, #72]	; (8002484 <IBUS_Process+0x148>)
 800243a:	681a      	ldr	r2, [r3, #0]
 800243c:	68bb      	ldr	r3, [r7, #8]
 800243e:	f023 0301 	bic.w	r3, r3, #1
 8002442:	4413      	add	r3, r2
 8002444:	b28a      	uxth	r2, r1
 8002446:	801a      	strh	r2, [r3, #0]
 8002448:	68bb      	ldr	r3, [r7, #8]
 800244a:	3302      	adds	r3, #2
 800244c:	60bb      	str	r3, [r7, #8]
 800244e:	68bb      	ldr	r3, [r7, #8]
 8002450:	2b1b      	cmp	r3, #27
 8002452:	d9e2      	bls.n	800241a <IBUS_Process+0xde>
 8002454:	2301      	movs	r3, #1
 8002456:	737b      	strb	r3, [r7, #13]
 8002458:	4b0a      	ldr	r3, [pc, #40]	; (8002484 <IBUS_Process+0x148>)
 800245a:	2200      	movs	r2, #0
 800245c:	f883 2026 	strb.w	r2, [r3, #38]	; 0x26
 8002460:	e003      	b.n	800246a <IBUS_Process+0x12e>
 8002462:	bf00      	nop
 8002464:	e002      	b.n	800246c <IBUS_Process+0x130>
 8002466:	bf00      	nop
 8002468:	e000      	b.n	800246c <IBUS_Process+0x130>
 800246a:	bf00      	nop
 800246c:	89fb      	ldrh	r3, [r7, #14]
 800246e:	3b01      	subs	r3, #1
 8002470:	81fb      	strh	r3, [r7, #14]
 8002472:	89fb      	ldrh	r3, [r7, #14]
 8002474:	2b00      	cmp	r3, #0
 8002476:	f47f af78 	bne.w	800236a <IBUS_Process+0x2e>
 800247a:	7b7b      	ldrb	r3, [r7, #13]
 800247c:	4618      	mov	r0, r3
 800247e:	3710      	adds	r7, #16
 8002480:	46bd      	mov	sp, r7
 8002482:	bd80      	pop	{r7, pc}
 8002484:	20000b58 	.word	0x20000b58
 8002488:	20000b5c 	.word	0x20000b5c

0800248c <check_sum_f>:
 800248c:	b480      	push	{r7}
 800248e:	b085      	sub	sp, #20
 8002490:	af00      	add	r7, sp, #0
 8002492:	6078      	str	r0, [r7, #4]
 8002494:	2300      	movs	r3, #0
 8002496:	60fb      	str	r3, [r7, #12]
 8002498:	2300      	movs	r3, #0
 800249a:	72fb      	strb	r3, [r7, #11]
 800249c:	e00a      	b.n	80024b4 <check_sum_f+0x28>
 800249e:	7afb      	ldrb	r3, [r7, #11]
 80024a0:	687a      	ldr	r2, [r7, #4]
 80024a2:	4413      	add	r3, r2
 80024a4:	781b      	ldrb	r3, [r3, #0]
 80024a6:	461a      	mov	r2, r3
 80024a8:	68fb      	ldr	r3, [r7, #12]
 80024aa:	4413      	add	r3, r2
 80024ac:	60fb      	str	r3, [r7, #12]
 80024ae:	7afb      	ldrb	r3, [r7, #11]
 80024b0:	3301      	adds	r3, #1
 80024b2:	72fb      	strb	r3, [r7, #11]
 80024b4:	7afb      	ldrb	r3, [r7, #11]
 80024b6:	2b1d      	cmp	r3, #29
 80024b8:	d9f1      	bls.n	800249e <check_sum_f+0x12>
 80024ba:	68fb      	ldr	r3, [r7, #12]
 80024bc:	4618      	mov	r0, r3
 80024be:	3714      	adds	r7, #20
 80024c0:	46bd      	mov	sp, r7
 80024c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024c6:	4770      	bx	lr

080024c8 <RADIO_Process_Init>:
 80024c8:	b580      	push	{r7, lr}
 80024ca:	af00      	add	r7, sp, #0
 80024cc:	4802      	ldr	r0, [pc, #8]	; (80024d8 <RADIO_Process_Init+0x10>)
 80024ce:	f7ff ff25 	bl	800231c <IBUS_Init>
 80024d2:	bf00      	nop
 80024d4:	bd80      	pop	{r7, pc}
 80024d6:	bf00      	nop
 80024d8:	20000b84 	.word	0x20000b84

080024dc <RADIO_Process_Main>:
 80024dc:	b580      	push	{r7, lr}
 80024de:	af00      	add	r7, sp, #0
 80024e0:	f7ff ff2c 	bl	800233c <IBUS_Process>
 80024e4:	4603      	mov	r3, r0
 80024e6:	2b00      	cmp	r3, #0
 80024e8:	d009      	beq.n	80024fe <RADIO_Process_Main+0x22>
 80024ea:	f001 f9b9 	bl	8003860 <HAL_GetTick>
 80024ee:	4603      	mov	r3, r0
 80024f0:	3332      	adds	r3, #50	; 0x32
 80024f2:	4a09      	ldr	r2, [pc, #36]	; (8002518 <RADIO_Process_Main+0x3c>)
 80024f4:	6213      	str	r3, [r2, #32]
 80024f6:	4b08      	ldr	r3, [pc, #32]	; (8002518 <RADIO_Process_Main+0x3c>)
 80024f8:	2200      	movs	r2, #0
 80024fa:	771a      	strb	r2, [r3, #28]
 80024fc:	e009      	b.n	8002512 <RADIO_Process_Main+0x36>
 80024fe:	f001 f9af 	bl	8003860 <HAL_GetTick>
 8002502:	4602      	mov	r2, r0
 8002504:	4b04      	ldr	r3, [pc, #16]	; (8002518 <RADIO_Process_Main+0x3c>)
 8002506:	6a1b      	ldr	r3, [r3, #32]
 8002508:	429a      	cmp	r2, r3
 800250a:	d902      	bls.n	8002512 <RADIO_Process_Main+0x36>
 800250c:	4b02      	ldr	r3, [pc, #8]	; (8002518 <RADIO_Process_Main+0x3c>)
 800250e:	2201      	movs	r2, #1
 8002510:	771a      	strb	r2, [r3, #28]
 8002512:	bf00      	nop
 8002514:	bd80      	pop	{r7, pc}
 8002516:	bf00      	nop
 8002518:	20000b84 	.word	0x20000b84

0800251c <RADIO_Get_Channel>:
 800251c:	b480      	push	{r7}
 800251e:	af00      	add	r7, sp, #0
 8002520:	4b02      	ldr	r3, [pc, #8]	; (800252c <RADIO_Get_Channel+0x10>)
 8002522:	4618      	mov	r0, r3
 8002524:	46bd      	mov	sp, r7
 8002526:	f85d 7b04 	ldr.w	r7, [sp], #4
 800252a:	4770      	bx	lr
 800252c:	20000b84 	.word	0x20000b84

08002530 <MPU_Init>:
/*
 * @brief Wake up the MPU6000
 *		  Configure the Gyroscope and the Accelerometer
 */
void MPU_Init(void)
{
 8002530:	b580      	push	{r7, lr}
 8002532:	b084      	sub	sp, #16
 8002534:	af02      	add	r7, sp, #8
	/* Set the Gyroscope and Accelerometer data buffer */
	mpu.gyro_data = &mpu.data[8];
 8002536:	4b54      	ldr	r3, [pc, #336]	; (8002688 <MPU_Init+0x158>)
 8002538:	4a54      	ldr	r2, [pc, #336]	; (800268c <MPU_Init+0x15c>)
 800253a:	611a      	str	r2, [r3, #16]
	mpu.acc_data = &mpu.data[0];
 800253c:	4b52      	ldr	r3, [pc, #328]	; (8002688 <MPU_Init+0x158>)
 800253e:	4a54      	ldr	r2, [pc, #336]	; (8002690 <MPU_Init+0x160>)
 8002540:	625a      	str	r2, [r3, #36]	; 0x24
	/* Disable I2C */
	SPI_Transmit(SPI_MPU, CS_MPU, mpu_disable_i2c, 2);
	HAL_Delay(150);
#else
	/* Power up the mpu an wait for it to start */
	HAL_GPIO_WritePin(MPU_POWER_GPIO_Port, MPU_POWER_Pin, GPIO_PIN_SET);
 8002542:	2201      	movs	r2, #1
 8002544:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8002548:	4852      	ldr	r0, [pc, #328]	; (8002694 <MPU_Init+0x164>)
 800254a:	f002 f875 	bl	8004638 <HAL_GPIO_WritePin>
	HAL_Delay(200);
 800254e:	20c8      	movs	r0, #200	; 0xc8
 8002550:	f001 f992 	bl	8003878 <HAL_Delay>
	/* Wake up the mpu */
	uint8_t wakeup_data = 0x80;
 8002554:	2380      	movs	r3, #128	; 0x80
 8002556:	71fb      	strb	r3, [r7, #7]
	I2C_Mem_Write(I2C_MPU, MPU6050_I2C_ADDR, MPU6050_PWR_MGMT_1, &wakeup_data, 1);
 8002558:	1dfb      	adds	r3, r7, #7
 800255a:	2201      	movs	r2, #1
 800255c:	9200      	str	r2, [sp, #0]
 800255e:	226b      	movs	r2, #107	; 0x6b
 8002560:	21d0      	movs	r1, #208	; 0xd0
 8002562:	2000      	movs	r0, #0
 8002564:	f7ff fb28 	bl	8001bb8 <I2C_Mem_Write>
	HAL_Delay(15);
 8002568:	200f      	movs	r0, #15
 800256a:	f001 f985 	bl	8003878 <HAL_Delay>
	/* Select the clock */
	uint8_t clock_select = 0x03;
 800256e:	2303      	movs	r3, #3
 8002570:	71bb      	strb	r3, [r7, #6]
	I2C_Mem_Write(I2C_MPU, MPU6050_I2C_ADDR, MPU6050_PWR_MGMT_1, &clock_select, 1);
 8002572:	1dbb      	adds	r3, r7, #6
 8002574:	2201      	movs	r2, #1
 8002576:	9200      	str	r2, [sp, #0]
 8002578:	226b      	movs	r2, #107	; 0x6b
 800257a:	21d0      	movs	r1, #208	; 0xd0
 800257c:	2000      	movs	r0, #0
 800257e:	f7ff fb1b 	bl	8001bb8 <I2C_Mem_Write>
	SPI_Transmit(SPI_MPU, CS_MPU, temp_write, 2);
	HAL_Delay(150);
#else
	/* Sensitivity configuration */
	uint8_t temp;
	I2C_Mem_Read(I2C_MPU, MPU6050_I2C_ADDR, MPU6050_GYRO_CONFIG, &temp, 1);
 8002582:	1d7b      	adds	r3, r7, #5
 8002584:	2201      	movs	r2, #1
 8002586:	9200      	str	r2, [sp, #0]
 8002588:	221b      	movs	r2, #27
 800258a:	21d0      	movs	r1, #208	; 0xd0
 800258c:	2000      	movs	r0, #0
 800258e:	f7ff fb37 	bl	8001c00 <I2C_Mem_Read>
	temp = (temp & 0xE7) | (uint8_t)mpu.gyro_range << 3;
 8002592:	797b      	ldrb	r3, [r7, #5]
 8002594:	b25b      	sxtb	r3, r3
 8002596:	f023 0318 	bic.w	r3, r3, #24
 800259a:	b25a      	sxtb	r2, r3
 800259c:	4b3a      	ldr	r3, [pc, #232]	; (8002688 <MPU_Init+0x158>)
 800259e:	7bdb      	ldrb	r3, [r3, #15]
 80025a0:	00db      	lsls	r3, r3, #3
 80025a2:	b25b      	sxtb	r3, r3
 80025a4:	4313      	orrs	r3, r2
 80025a6:	b25b      	sxtb	r3, r3
 80025a8:	b2db      	uxtb	r3, r3
 80025aa:	717b      	strb	r3, [r7, #5]
	I2C_Mem_Write(I2C_MPU, MPU6050_I2C_ADDR, MPU6050_GYRO_CONFIG, &temp, 1);
 80025ac:	1d7b      	adds	r3, r7, #5
 80025ae:	2201      	movs	r2, #1
 80025b0:	9200      	str	r2, [sp, #0]
 80025b2:	221b      	movs	r2, #27
 80025b4:	21d0      	movs	r1, #208	; 0xd0
 80025b6:	2000      	movs	r0, #0
 80025b8:	f7ff fafe 	bl	8001bb8 <I2C_Mem_Write>
#endif
	switch(mpu.gyro_range)
 80025bc:	4b32      	ldr	r3, [pc, #200]	; (8002688 <MPU_Init+0x158>)
 80025be:	7bdb      	ldrb	r3, [r3, #15]
 80025c0:	2b03      	cmp	r3, #3
 80025c2:	d81b      	bhi.n	80025fc <MPU_Init+0xcc>
 80025c4:	a201      	add	r2, pc, #4	; (adr r2, 80025cc <MPU_Init+0x9c>)
 80025c6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80025ca:	bf00      	nop
 80025cc:	080025dd 	.word	0x080025dd
 80025d0:	080025e5 	.word	0x080025e5
 80025d4:	080025ed 	.word	0x080025ed
 80025d8:	080025f5 	.word	0x080025f5
	{
		case MPU_GYRO_250s :
			mpu.gyro_conversion = (float)1 / MPU6050_GYRO_SENS_250 ;
 80025dc:	4b2a      	ldr	r3, [pc, #168]	; (8002688 <MPU_Init+0x158>)
 80025de:	4a2e      	ldr	r2, [pc, #184]	; (8002698 <MPU_Init+0x168>)
 80025e0:	615a      	str	r2, [r3, #20]
			break;
 80025e2:	e00b      	b.n	80025fc <MPU_Init+0xcc>
		case MPU_GYRO_500s :
			mpu.gyro_conversion = (float)1 / MPU6050_GYRO_SENS_500 ;
 80025e4:	4b28      	ldr	r3, [pc, #160]	; (8002688 <MPU_Init+0x158>)
 80025e6:	4a2d      	ldr	r2, [pc, #180]	; (800269c <MPU_Init+0x16c>)
 80025e8:	615a      	str	r2, [r3, #20]
			break;
 80025ea:	e007      	b.n	80025fc <MPU_Init+0xcc>
		case MPU_GYRO_1000s :
			mpu.gyro_conversion = (float)1 / MPU6050_GYRO_SENS_1000 ;
 80025ec:	4b26      	ldr	r3, [pc, #152]	; (8002688 <MPU_Init+0x158>)
 80025ee:	4a2c      	ldr	r2, [pc, #176]	; (80026a0 <MPU_Init+0x170>)
 80025f0:	615a      	str	r2, [r3, #20]
			break;
 80025f2:	e003      	b.n	80025fc <MPU_Init+0xcc>
		case MPU_GYRO_2000s :
			mpu.gyro_conversion = (float)1 / MPU6050_GYRO_SENS_2000 ;
 80025f4:	4b24      	ldr	r3, [pc, #144]	; (8002688 <MPU_Init+0x158>)
 80025f6:	4a2b      	ldr	r2, [pc, #172]	; (80026a4 <MPU_Init+0x174>)
 80025f8:	615a      	str	r2, [r3, #20]
			break;
 80025fa:	bf00      	nop
	temp_write[1] = (temp_read[1] & 0xE7) | (uint8_t)mpu.acc_range << 3;
	SPI_Transmit(SPI_MPU, CS_MPU, temp_write, 2);
	HAL_Delay(150);
#else
	/* Sensitivity configuration */
	I2C_Mem_Read(I2C_MPU, MPU6050_I2C_ADDR, MPU6050_ACCEL_CONFIG, &temp, 1);
 80025fc:	1d7b      	adds	r3, r7, #5
 80025fe:	2201      	movs	r2, #1
 8002600:	9200      	str	r2, [sp, #0]
 8002602:	221c      	movs	r2, #28
 8002604:	21d0      	movs	r1, #208	; 0xd0
 8002606:	2000      	movs	r0, #0
 8002608:	f7ff fafa 	bl	8001c00 <I2C_Mem_Read>
	temp = (temp & 0xE7) | (uint8_t)mpu.acc_range << 3;
 800260c:	797b      	ldrb	r3, [r7, #5]
 800260e:	b25b      	sxtb	r3, r3
 8002610:	f023 0318 	bic.w	r3, r3, #24
 8002614:	b25a      	sxtb	r2, r3
 8002616:	4b1c      	ldr	r3, [pc, #112]	; (8002688 <MPU_Init+0x158>)
 8002618:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 800261c:	00db      	lsls	r3, r3, #3
 800261e:	b25b      	sxtb	r3, r3
 8002620:	4313      	orrs	r3, r2
 8002622:	b25b      	sxtb	r3, r3
 8002624:	b2db      	uxtb	r3, r3
 8002626:	717b      	strb	r3, [r7, #5]
	I2C_Mem_Write(I2C_MPU, MPU6050_I2C_ADDR, MPU6050_ACCEL_CONFIG, &temp, 1);
 8002628:	1d7b      	adds	r3, r7, #5
 800262a:	2201      	movs	r2, #1
 800262c:	9200      	str	r2, [sp, #0]
 800262e:	221c      	movs	r2, #28
 8002630:	21d0      	movs	r1, #208	; 0xd0
 8002632:	2000      	movs	r0, #0
 8002634:	f7ff fac0 	bl	8001bb8 <I2C_Mem_Write>
#endif
	switch(mpu.acc_range)
 8002638:	4b13      	ldr	r3, [pc, #76]	; (8002688 <MPU_Init+0x158>)
 800263a:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 800263e:	2b03      	cmp	r3, #3
 8002640:	d81e      	bhi.n	8002680 <MPU_Init+0x150>
 8002642:	a201      	add	r2, pc, #4	; (adr r2, 8002648 <MPU_Init+0x118>)
 8002644:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002648:	08002659 	.word	0x08002659
 800264c:	08002663 	.word	0x08002663
 8002650:	0800266d 	.word	0x0800266d
 8002654:	08002677 	.word	0x08002677
	{
		case MPU_ACC_2G :
			mpu.acc_conversion = (float)1 / MPU6050_ACCE_SENS_2 ;
 8002658:	4b0b      	ldr	r3, [pc, #44]	; (8002688 <MPU_Init+0x158>)
 800265a:	f04f 5262 	mov.w	r2, #947912704	; 0x38800000
 800265e:	62da      	str	r2, [r3, #44]	; 0x2c
			break;
 8002660:	e00e      	b.n	8002680 <MPU_Init+0x150>
		case MPU_ACC_4G :
			mpu.acc_conversion = (float)1 / MPU6050_ACCE_SENS_4 ;
 8002662:	4b09      	ldr	r3, [pc, #36]	; (8002688 <MPU_Init+0x158>)
 8002664:	f04f 5264 	mov.w	r2, #956301312	; 0x39000000
 8002668:	62da      	str	r2, [r3, #44]	; 0x2c
			break;
 800266a:	e009      	b.n	8002680 <MPU_Init+0x150>
		case MPU_ACC_8G :
			mpu.acc_conversion = (float)1 / MPU6050_ACCE_SENS_8 ;
 800266c:	4b06      	ldr	r3, [pc, #24]	; (8002688 <MPU_Init+0x158>)
 800266e:	f04f 5266 	mov.w	r2, #964689920	; 0x39800000
 8002672:	62da      	str	r2, [r3, #44]	; 0x2c
			break;
 8002674:	e004      	b.n	8002680 <MPU_Init+0x150>
		case MPU_ACC_16G :
			mpu.acc_conversion = (float)1 / MPU6050_ACCE_SENS_16 ;
 8002676:	4b04      	ldr	r3, [pc, #16]	; (8002688 <MPU_Init+0x158>)
 8002678:	f04f 5268 	mov.w	r2, #973078528	; 0x3a000000
 800267c:	62da      	str	r2, [r3, #44]	; 0x2c
			break;
 800267e:	bf00      	nop
	}
}
 8002680:	bf00      	nop
 8002682:	3708      	adds	r7, #8
 8002684:	46bd      	mov	sp, r7
 8002686:	bd80      	pop	{r7, pc}
 8002688:	200000a4 	.word	0x200000a4
 800268c:	200000ad 	.word	0x200000ad
 8002690:	200000a5 	.word	0x200000a5
 8002694:	40020800 	.word	0x40020800
 8002698:	3bfa232d 	.word	0x3bfa232d
 800269c:	3c7a232d 	.word	0x3c7a232d
 80026a0:	3cf9c190 	.word	0x3cf9c190
 80026a4:	3d79c190 	.word	0x3d79c190

080026a8 <MPU_Get_Gyro_Ptr>:
float * MPU_Get_Gyro_Ptr(void)
{
 80026a8:	b480      	push	{r7}
 80026aa:	af00      	add	r7, sp, #0
	return mpu.gyro;
 80026ac:	4b02      	ldr	r3, [pc, #8]	; (80026b8 <MPU_Get_Gyro_Ptr+0x10>)
}
 80026ae:	4618      	mov	r0, r3
 80026b0:	46bd      	mov	sp, r7
 80026b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026b6:	4770      	bx	lr
 80026b8:	200000bc 	.word	0x200000bc

080026bc <MPU_Get_Acc_Ptr>:

float * MPU_Get_Acc_Ptr(void)
{
 80026bc:	b480      	push	{r7}
 80026be:	af00      	add	r7, sp, #0
	return mpu.acc;
 80026c0:	4b02      	ldr	r3, [pc, #8]	; (80026cc <MPU_Get_Acc_Ptr+0x10>)
}
 80026c2:	4618      	mov	r0, r3
 80026c4:	46bd      	mov	sp, r7
 80026c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026ca:	4770      	bx	lr
 80026cc:	200000d4 	.word	0x200000d4

080026d0 <MPU_Read_All_Dma>:
	MPU_Convert_Acc_Data();
	MPU_Convert_Gyro_Data();
}

void MPU_Read_All_Dma(void)
{
 80026d0:	b580      	push	{r7, lr}
 80026d2:	b082      	sub	sp, #8
 80026d4:	af02      	add	r7, sp, #8
	if(mpu.state == mpu_state_eERROR)
 80026d6:	4b0d      	ldr	r3, [pc, #52]	; (800270c <MPU_Read_All_Dma+0x3c>)
 80026d8:	781b      	ldrb	r3, [r3, #0]
 80026da:	2b01      	cmp	r3, #1
 80026dc:	d013      	beq.n	8002706 <MPU_Read_All_Dma+0x36>
	}
#if USE_SPI
	uint8_t registers [14] = {MPU6050_ACCEL_XOUT_H | MPU6050_READ};
	SPI_Transmit_Receive(SPI_MPU, CS_MPU, registers, mpu.data, 14);
#else
	if(I2C_Mem_Read_Dma(I2C_MPU, MPU6050_I2C_ADDR, MPU6050_ACCEL_XOUT_H, mpu.data, 14))
 80026de:	230e      	movs	r3, #14
 80026e0:	9300      	str	r3, [sp, #0]
 80026e2:	4b0b      	ldr	r3, [pc, #44]	; (8002710 <MPU_Read_All_Dma+0x40>)
 80026e4:	223b      	movs	r2, #59	; 0x3b
 80026e6:	21d0      	movs	r1, #208	; 0xd0
 80026e8:	2000      	movs	r0, #0
 80026ea:	f7ff faad 	bl	8001c48 <I2C_Mem_Read_Dma>
 80026ee:	4603      	mov	r3, r0
 80026f0:	2b00      	cmp	r3, #0
 80026f2:	d003      	beq.n	80026fc <MPU_Read_All_Dma+0x2c>
	{
		mpu.state = mpu_state_eERROR;
 80026f4:	4b05      	ldr	r3, [pc, #20]	; (800270c <MPU_Read_All_Dma+0x3c>)
 80026f6:	2201      	movs	r2, #1
 80026f8:	701a      	strb	r2, [r3, #0]
		return;
 80026fa:	e005      	b.n	8002708 <MPU_Read_All_Dma+0x38>
	}
	mpu.dma_state = dma_state_eIN_PORGRESS_ALL;
 80026fc:	4b03      	ldr	r3, [pc, #12]	; (800270c <MPU_Read_All_Dma+0x3c>)
 80026fe:	2203      	movs	r2, #3
 8002700:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002704:	e000      	b.n	8002708 <MPU_Read_All_Dma+0x38>
		return;
 8002706:	bf00      	nop
#endif
}
 8002708:	46bd      	mov	sp, r7
 800270a:	bd80      	pop	{r7, pc}
 800270c:	200000a4 	.word	0x200000a4
 8002710:	200000a5 	.word	0x200000a5

08002714 <MPU_Convert_Acc_Data>:

/*
 * @brief Convert acc bytes to measurement
 */
void MPU_Convert_Acc_Data(void)
{
 8002714:	b480      	push	{r7}
 8002716:	af00      	add	r7, sp, #0
	mpu.acc[0] = (int16_t)(mpu.acc_data[1] | (mpu.acc_data[0] << 8)) * mpu.acc_conversion;
 8002718:	4b27      	ldr	r3, [pc, #156]	; (80027b8 <MPU_Convert_Acc_Data+0xa4>)
 800271a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800271c:	3301      	adds	r3, #1
 800271e:	781b      	ldrb	r3, [r3, #0]
 8002720:	b21a      	sxth	r2, r3
 8002722:	4b25      	ldr	r3, [pc, #148]	; (80027b8 <MPU_Convert_Acc_Data+0xa4>)
 8002724:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002726:	781b      	ldrb	r3, [r3, #0]
 8002728:	021b      	lsls	r3, r3, #8
 800272a:	b21b      	sxth	r3, r3
 800272c:	4313      	orrs	r3, r2
 800272e:	b21b      	sxth	r3, r3
 8002730:	ee07 3a90 	vmov	s15, r3
 8002734:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8002738:	4b1f      	ldr	r3, [pc, #124]	; (80027b8 <MPU_Convert_Acc_Data+0xa4>)
 800273a:	edd3 7a0b 	vldr	s15, [r3, #44]	; 0x2c
 800273e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8002742:	4b1d      	ldr	r3, [pc, #116]	; (80027b8 <MPU_Convert_Acc_Data+0xa4>)
 8002744:	edc3 7a0c 	vstr	s15, [r3, #48]	; 0x30
	mpu.acc[1] = (int16_t)(mpu.acc_data[3] | (mpu.acc_data[2] << 8)) * mpu.acc_conversion;
 8002748:	4b1b      	ldr	r3, [pc, #108]	; (80027b8 <MPU_Convert_Acc_Data+0xa4>)
 800274a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800274c:	3303      	adds	r3, #3
 800274e:	781b      	ldrb	r3, [r3, #0]
 8002750:	b21a      	sxth	r2, r3
 8002752:	4b19      	ldr	r3, [pc, #100]	; (80027b8 <MPU_Convert_Acc_Data+0xa4>)
 8002754:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002756:	3302      	adds	r3, #2
 8002758:	781b      	ldrb	r3, [r3, #0]
 800275a:	021b      	lsls	r3, r3, #8
 800275c:	b21b      	sxth	r3, r3
 800275e:	4313      	orrs	r3, r2
 8002760:	b21b      	sxth	r3, r3
 8002762:	ee07 3a90 	vmov	s15, r3
 8002766:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800276a:	4b13      	ldr	r3, [pc, #76]	; (80027b8 <MPU_Convert_Acc_Data+0xa4>)
 800276c:	edd3 7a0b 	vldr	s15, [r3, #44]	; 0x2c
 8002770:	ee67 7a27 	vmul.f32	s15, s14, s15
 8002774:	4b10      	ldr	r3, [pc, #64]	; (80027b8 <MPU_Convert_Acc_Data+0xa4>)
 8002776:	edc3 7a0d 	vstr	s15, [r3, #52]	; 0x34
	mpu.acc[2] = (int16_t)(mpu.acc_data[5] | (mpu.acc_data[4] << 8)) * mpu.acc_conversion;
 800277a:	4b0f      	ldr	r3, [pc, #60]	; (80027b8 <MPU_Convert_Acc_Data+0xa4>)
 800277c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800277e:	3305      	adds	r3, #5
 8002780:	781b      	ldrb	r3, [r3, #0]
 8002782:	b21a      	sxth	r2, r3
 8002784:	4b0c      	ldr	r3, [pc, #48]	; (80027b8 <MPU_Convert_Acc_Data+0xa4>)
 8002786:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002788:	3304      	adds	r3, #4
 800278a:	781b      	ldrb	r3, [r3, #0]
 800278c:	021b      	lsls	r3, r3, #8
 800278e:	b21b      	sxth	r3, r3
 8002790:	4313      	orrs	r3, r2
 8002792:	b21b      	sxth	r3, r3
 8002794:	ee07 3a90 	vmov	s15, r3
 8002798:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800279c:	4b06      	ldr	r3, [pc, #24]	; (80027b8 <MPU_Convert_Acc_Data+0xa4>)
 800279e:	edd3 7a0b 	vldr	s15, [r3, #44]	; 0x2c
 80027a2:	ee67 7a27 	vmul.f32	s15, s14, s15
 80027a6:	4b04      	ldr	r3, [pc, #16]	; (80027b8 <MPU_Convert_Acc_Data+0xa4>)
 80027a8:	edc3 7a0e 	vstr	s15, [r3, #56]	; 0x38
}
 80027ac:	bf00      	nop
 80027ae:	46bd      	mov	sp, r7
 80027b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027b4:	4770      	bx	lr
 80027b6:	bf00      	nop
 80027b8:	200000a4 	.word	0x200000a4

080027bc <MPU_Convert_Gyro_Data>:

/*
 * @brief Convert gyro bytes to measurement
 */
void MPU_Convert_Gyro_Data(void)
{
 80027bc:	b480      	push	{r7}
 80027be:	af00      	add	r7, sp, #0
	mpu.gyro[0] = (int16_t)(mpu.gyro_data[1] | (mpu.gyro_data[0] << 8)) * mpu.gyro_conversion;
 80027c0:	4b27      	ldr	r3, [pc, #156]	; (8002860 <MPU_Convert_Gyro_Data+0xa4>)
 80027c2:	691b      	ldr	r3, [r3, #16]
 80027c4:	3301      	adds	r3, #1
 80027c6:	781b      	ldrb	r3, [r3, #0]
 80027c8:	b21a      	sxth	r2, r3
 80027ca:	4b25      	ldr	r3, [pc, #148]	; (8002860 <MPU_Convert_Gyro_Data+0xa4>)
 80027cc:	691b      	ldr	r3, [r3, #16]
 80027ce:	781b      	ldrb	r3, [r3, #0]
 80027d0:	021b      	lsls	r3, r3, #8
 80027d2:	b21b      	sxth	r3, r3
 80027d4:	4313      	orrs	r3, r2
 80027d6:	b21b      	sxth	r3, r3
 80027d8:	ee07 3a90 	vmov	s15, r3
 80027dc:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80027e0:	4b1f      	ldr	r3, [pc, #124]	; (8002860 <MPU_Convert_Gyro_Data+0xa4>)
 80027e2:	edd3 7a05 	vldr	s15, [r3, #20]
 80027e6:	ee67 7a27 	vmul.f32	s15, s14, s15
 80027ea:	4b1d      	ldr	r3, [pc, #116]	; (8002860 <MPU_Convert_Gyro_Data+0xa4>)
 80027ec:	edc3 7a06 	vstr	s15, [r3, #24]
	mpu.gyro[1] = (int16_t)(mpu.gyro_data[3] | (mpu.gyro_data[2] << 8)) * mpu.gyro_conversion;
 80027f0:	4b1b      	ldr	r3, [pc, #108]	; (8002860 <MPU_Convert_Gyro_Data+0xa4>)
 80027f2:	691b      	ldr	r3, [r3, #16]
 80027f4:	3303      	adds	r3, #3
 80027f6:	781b      	ldrb	r3, [r3, #0]
 80027f8:	b21a      	sxth	r2, r3
 80027fa:	4b19      	ldr	r3, [pc, #100]	; (8002860 <MPU_Convert_Gyro_Data+0xa4>)
 80027fc:	691b      	ldr	r3, [r3, #16]
 80027fe:	3302      	adds	r3, #2
 8002800:	781b      	ldrb	r3, [r3, #0]
 8002802:	021b      	lsls	r3, r3, #8
 8002804:	b21b      	sxth	r3, r3
 8002806:	4313      	orrs	r3, r2
 8002808:	b21b      	sxth	r3, r3
 800280a:	ee07 3a90 	vmov	s15, r3
 800280e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8002812:	4b13      	ldr	r3, [pc, #76]	; (8002860 <MPU_Convert_Gyro_Data+0xa4>)
 8002814:	edd3 7a05 	vldr	s15, [r3, #20]
 8002818:	ee67 7a27 	vmul.f32	s15, s14, s15
 800281c:	4b10      	ldr	r3, [pc, #64]	; (8002860 <MPU_Convert_Gyro_Data+0xa4>)
 800281e:	edc3 7a07 	vstr	s15, [r3, #28]
	mpu.gyro[2] = (int16_t)(mpu.gyro_data[5] | (mpu.gyro_data[4] << 8)) * mpu.gyro_conversion;
 8002822:	4b0f      	ldr	r3, [pc, #60]	; (8002860 <MPU_Convert_Gyro_Data+0xa4>)
 8002824:	691b      	ldr	r3, [r3, #16]
 8002826:	3305      	adds	r3, #5
 8002828:	781b      	ldrb	r3, [r3, #0]
 800282a:	b21a      	sxth	r2, r3
 800282c:	4b0c      	ldr	r3, [pc, #48]	; (8002860 <MPU_Convert_Gyro_Data+0xa4>)
 800282e:	691b      	ldr	r3, [r3, #16]
 8002830:	3304      	adds	r3, #4
 8002832:	781b      	ldrb	r3, [r3, #0]
 8002834:	021b      	lsls	r3, r3, #8
 8002836:	b21b      	sxth	r3, r3
 8002838:	4313      	orrs	r3, r2
 800283a:	b21b      	sxth	r3, r3
 800283c:	ee07 3a90 	vmov	s15, r3
 8002840:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8002844:	4b06      	ldr	r3, [pc, #24]	; (8002860 <MPU_Convert_Gyro_Data+0xa4>)
 8002846:	edd3 7a05 	vldr	s15, [r3, #20]
 800284a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800284e:	4b04      	ldr	r3, [pc, #16]	; (8002860 <MPU_Convert_Gyro_Data+0xa4>)
 8002850:	edc3 7a08 	vstr	s15, [r3, #32]
}
 8002854:	bf00      	nop
 8002856:	46bd      	mov	sp, r7
 8002858:	f85d 7b04 	ldr.w	r7, [sp], #4
 800285c:	4770      	bx	lr
 800285e:	bf00      	nop
 8002860:	200000a4 	.word	0x200000a4

08002864 <MPU_Rx_Complete_Callback>:

/*
 * @brief Called back on half rx cplt it
 */
bool_e MPU_Rx_Complete_Callback(void)
{
 8002864:	b580      	push	{r7, lr}
 8002866:	af00      	add	r7, sp, #0
	if(mpu.dma_state)
 8002868:	4b12      	ldr	r3, [pc, #72]	; (80028b4 <MPU_Rx_Complete_Callback+0x50>)
 800286a:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800286e:	2b00      	cmp	r3, #0
 8002870:	d01d      	beq.n	80028ae <MPU_Rx_Complete_Callback+0x4a>
	{
		switch(mpu.dma_state)
 8002872:	4b10      	ldr	r3, [pc, #64]	; (80028b4 <MPU_Rx_Complete_Callback+0x50>)
 8002874:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002878:	2b03      	cmp	r3, #3
 800287a:	d00c      	beq.n	8002896 <MPU_Rx_Complete_Callback+0x32>
 800287c:	2b03      	cmp	r3, #3
 800287e:	dc0f      	bgt.n	80028a0 <MPU_Rx_Complete_Callback+0x3c>
 8002880:	2b01      	cmp	r3, #1
 8002882:	d002      	beq.n	800288a <MPU_Rx_Complete_Callback+0x26>
 8002884:	2b02      	cmp	r3, #2
 8002886:	d003      	beq.n	8002890 <MPU_Rx_Complete_Callback+0x2c>
			case dma_state_eIN_PORGRESS_ALL:
				MPU_Convert_Acc_Data();
				MPU_Convert_Gyro_Data();
				break;
			default:
				break;
 8002888:	e00a      	b.n	80028a0 <MPU_Rx_Complete_Callback+0x3c>
				MPU_Convert_Gyro_Data();
 800288a:	f7ff ff97 	bl	80027bc <MPU_Convert_Gyro_Data>
				break;
 800288e:	e008      	b.n	80028a2 <MPU_Rx_Complete_Callback+0x3e>
				MPU_Convert_Acc_Data();
 8002890:	f7ff ff40 	bl	8002714 <MPU_Convert_Acc_Data>
				break;
 8002894:	e005      	b.n	80028a2 <MPU_Rx_Complete_Callback+0x3e>
				MPU_Convert_Acc_Data();
 8002896:	f7ff ff3d 	bl	8002714 <MPU_Convert_Acc_Data>
				MPU_Convert_Gyro_Data();
 800289a:	f7ff ff8f 	bl	80027bc <MPU_Convert_Gyro_Data>
				break;
 800289e:	e000      	b.n	80028a2 <MPU_Rx_Complete_Callback+0x3e>
				break;
 80028a0:	bf00      	nop
		}
		mpu.dma_state = dma_state_eIDLE;
 80028a2:	4b04      	ldr	r3, [pc, #16]	; (80028b4 <MPU_Rx_Complete_Callback+0x50>)
 80028a4:	2200      	movs	r2, #0
 80028a6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
		return TRUE;
 80028aa:	2301      	movs	r3, #1
 80028ac:	e000      	b.n	80028b0 <MPU_Rx_Complete_Callback+0x4c>
	}
	return FALSE;
 80028ae:	2300      	movs	r3, #0
}
 80028b0:	4618      	mov	r0, r3
 80028b2:	bd80      	pop	{r7, pc}
 80028b4:	200000a4 	.word	0x200000a4

080028b8 <MX_DMA_Init>:
 80028b8:	b580      	push	{r7, lr}
 80028ba:	b082      	sub	sp, #8
 80028bc:	af00      	add	r7, sp, #0
 80028be:	2300      	movs	r3, #0
 80028c0:	607b      	str	r3, [r7, #4]
 80028c2:	4b27      	ldr	r3, [pc, #156]	; (8002960 <MX_DMA_Init+0xa8>)
 80028c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80028c6:	4a26      	ldr	r2, [pc, #152]	; (8002960 <MX_DMA_Init+0xa8>)
 80028c8:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80028cc:	6313      	str	r3, [r2, #48]	; 0x30
 80028ce:	4b24      	ldr	r3, [pc, #144]	; (8002960 <MX_DMA_Init+0xa8>)
 80028d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80028d2:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80028d6:	607b      	str	r3, [r7, #4]
 80028d8:	687b      	ldr	r3, [r7, #4]
 80028da:	2300      	movs	r3, #0
 80028dc:	603b      	str	r3, [r7, #0]
 80028de:	4b20      	ldr	r3, [pc, #128]	; (8002960 <MX_DMA_Init+0xa8>)
 80028e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80028e2:	4a1f      	ldr	r2, [pc, #124]	; (8002960 <MX_DMA_Init+0xa8>)
 80028e4:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80028e8:	6313      	str	r3, [r2, #48]	; 0x30
 80028ea:	4b1d      	ldr	r3, [pc, #116]	; (8002960 <MX_DMA_Init+0xa8>)
 80028ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80028ee:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80028f2:	603b      	str	r3, [r7, #0]
 80028f4:	683b      	ldr	r3, [r7, #0]
 80028f6:	2200      	movs	r2, #0
 80028f8:	2100      	movs	r1, #0
 80028fa:	200b      	movs	r0, #11
 80028fc:	f001 f8bb 	bl	8003a76 <HAL_NVIC_SetPriority>
 8002900:	200b      	movs	r0, #11
 8002902:	f001 f8d4 	bl	8003aae <HAL_NVIC_EnableIRQ>
 8002906:	2200      	movs	r2, #0
 8002908:	2100      	movs	r1, #0
 800290a:	200d      	movs	r0, #13
 800290c:	f001 f8b3 	bl	8003a76 <HAL_NVIC_SetPriority>
 8002910:	200d      	movs	r0, #13
 8002912:	f001 f8cc 	bl	8003aae <HAL_NVIC_EnableIRQ>
 8002916:	2200      	movs	r2, #0
 8002918:	2100      	movs	r1, #0
 800291a:	200f      	movs	r0, #15
 800291c:	f001 f8ab 	bl	8003a76 <HAL_NVIC_SetPriority>
 8002920:	200f      	movs	r0, #15
 8002922:	f001 f8c4 	bl	8003aae <HAL_NVIC_EnableIRQ>
 8002926:	2200      	movs	r2, #0
 8002928:	2100      	movs	r1, #0
 800292a:	2011      	movs	r0, #17
 800292c:	f001 f8a3 	bl	8003a76 <HAL_NVIC_SetPriority>
 8002930:	2011      	movs	r0, #17
 8002932:	f001 f8bc 	bl	8003aae <HAL_NVIC_EnableIRQ>
 8002936:	2200      	movs	r2, #0
 8002938:	2100      	movs	r1, #0
 800293a:	203a      	movs	r0, #58	; 0x3a
 800293c:	f001 f89b 	bl	8003a76 <HAL_NVIC_SetPriority>
 8002940:	203a      	movs	r0, #58	; 0x3a
 8002942:	f001 f8b4 	bl	8003aae <HAL_NVIC_EnableIRQ>
 8002946:	2200      	movs	r2, #0
 8002948:	2100      	movs	r1, #0
 800294a:	2046      	movs	r0, #70	; 0x46
 800294c:	f001 f893 	bl	8003a76 <HAL_NVIC_SetPriority>
 8002950:	2046      	movs	r0, #70	; 0x46
 8002952:	f001 f8ac 	bl	8003aae <HAL_NVIC_EnableIRQ>
 8002956:	bf00      	nop
 8002958:	3708      	adds	r7, #8
 800295a:	46bd      	mov	sp, r7
 800295c:	bd80      	pop	{r7, pc}
 800295e:	bf00      	nop
 8002960:	40023800 	.word	0x40023800

08002964 <MX_GPIO_Init>:
 8002964:	b580      	push	{r7, lr}
 8002966:	b088      	sub	sp, #32
 8002968:	af00      	add	r7, sp, #0
 800296a:	f107 030c 	add.w	r3, r7, #12
 800296e:	2200      	movs	r2, #0
 8002970:	601a      	str	r2, [r3, #0]
 8002972:	605a      	str	r2, [r3, #4]
 8002974:	609a      	str	r2, [r3, #8]
 8002976:	60da      	str	r2, [r3, #12]
 8002978:	611a      	str	r2, [r3, #16]
 800297a:	2300      	movs	r3, #0
 800297c:	60bb      	str	r3, [r7, #8]
 800297e:	4b20      	ldr	r3, [pc, #128]	; (8002a00 <MX_GPIO_Init+0x9c>)
 8002980:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002982:	4a1f      	ldr	r2, [pc, #124]	; (8002a00 <MX_GPIO_Init+0x9c>)
 8002984:	f043 0301 	orr.w	r3, r3, #1
 8002988:	6313      	str	r3, [r2, #48]	; 0x30
 800298a:	4b1d      	ldr	r3, [pc, #116]	; (8002a00 <MX_GPIO_Init+0x9c>)
 800298c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800298e:	f003 0301 	and.w	r3, r3, #1
 8002992:	60bb      	str	r3, [r7, #8]
 8002994:	68bb      	ldr	r3, [r7, #8]
 8002996:	2300      	movs	r3, #0
 8002998:	607b      	str	r3, [r7, #4]
 800299a:	4b19      	ldr	r3, [pc, #100]	; (8002a00 <MX_GPIO_Init+0x9c>)
 800299c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800299e:	4a18      	ldr	r2, [pc, #96]	; (8002a00 <MX_GPIO_Init+0x9c>)
 80029a0:	f043 0302 	orr.w	r3, r3, #2
 80029a4:	6313      	str	r3, [r2, #48]	; 0x30
 80029a6:	4b16      	ldr	r3, [pc, #88]	; (8002a00 <MX_GPIO_Init+0x9c>)
 80029a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029aa:	f003 0302 	and.w	r3, r3, #2
 80029ae:	607b      	str	r3, [r7, #4]
 80029b0:	687b      	ldr	r3, [r7, #4]
 80029b2:	2300      	movs	r3, #0
 80029b4:	603b      	str	r3, [r7, #0]
 80029b6:	4b12      	ldr	r3, [pc, #72]	; (8002a00 <MX_GPIO_Init+0x9c>)
 80029b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029ba:	4a11      	ldr	r2, [pc, #68]	; (8002a00 <MX_GPIO_Init+0x9c>)
 80029bc:	f043 0304 	orr.w	r3, r3, #4
 80029c0:	6313      	str	r3, [r2, #48]	; 0x30
 80029c2:	4b0f      	ldr	r3, [pc, #60]	; (8002a00 <MX_GPIO_Init+0x9c>)
 80029c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029c6:	f003 0304 	and.w	r3, r3, #4
 80029ca:	603b      	str	r3, [r7, #0]
 80029cc:	683b      	ldr	r3, [r7, #0]
 80029ce:	2200      	movs	r2, #0
 80029d0:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80029d4:	480b      	ldr	r0, [pc, #44]	; (8002a04 <MX_GPIO_Init+0xa0>)
 80029d6:	f001 fe2f 	bl	8004638 <HAL_GPIO_WritePin>
 80029da:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80029de:	60fb      	str	r3, [r7, #12]
 80029e0:	2301      	movs	r3, #1
 80029e2:	613b      	str	r3, [r7, #16]
 80029e4:	2300      	movs	r3, #0
 80029e6:	617b      	str	r3, [r7, #20]
 80029e8:	2300      	movs	r3, #0
 80029ea:	61bb      	str	r3, [r7, #24]
 80029ec:	f107 030c 	add.w	r3, r7, #12
 80029f0:	4619      	mov	r1, r3
 80029f2:	4804      	ldr	r0, [pc, #16]	; (8002a04 <MX_GPIO_Init+0xa0>)
 80029f4:	f001 fc84 	bl	8004300 <HAL_GPIO_Init>
 80029f8:	bf00      	nop
 80029fa:	3720      	adds	r7, #32
 80029fc:	46bd      	mov	sp, r7
 80029fe:	bd80      	pop	{r7, pc}
 8002a00:	40023800 	.word	0x40023800
 8002a04:	40020800 	.word	0x40020800

08002a08 <MX_I2C1_Init>:
 8002a08:	b580      	push	{r7, lr}
 8002a0a:	af00      	add	r7, sp, #0
 8002a0c:	4b12      	ldr	r3, [pc, #72]	; (8002a58 <MX_I2C1_Init+0x50>)
 8002a0e:	4a13      	ldr	r2, [pc, #76]	; (8002a5c <MX_I2C1_Init+0x54>)
 8002a10:	601a      	str	r2, [r3, #0]
 8002a12:	4b11      	ldr	r3, [pc, #68]	; (8002a58 <MX_I2C1_Init+0x50>)
 8002a14:	4a12      	ldr	r2, [pc, #72]	; (8002a60 <MX_I2C1_Init+0x58>)
 8002a16:	605a      	str	r2, [r3, #4]
 8002a18:	4b0f      	ldr	r3, [pc, #60]	; (8002a58 <MX_I2C1_Init+0x50>)
 8002a1a:	2200      	movs	r2, #0
 8002a1c:	609a      	str	r2, [r3, #8]
 8002a1e:	4b0e      	ldr	r3, [pc, #56]	; (8002a58 <MX_I2C1_Init+0x50>)
 8002a20:	2200      	movs	r2, #0
 8002a22:	60da      	str	r2, [r3, #12]
 8002a24:	4b0c      	ldr	r3, [pc, #48]	; (8002a58 <MX_I2C1_Init+0x50>)
 8002a26:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8002a2a:	611a      	str	r2, [r3, #16]
 8002a2c:	4b0a      	ldr	r3, [pc, #40]	; (8002a58 <MX_I2C1_Init+0x50>)
 8002a2e:	2200      	movs	r2, #0
 8002a30:	615a      	str	r2, [r3, #20]
 8002a32:	4b09      	ldr	r3, [pc, #36]	; (8002a58 <MX_I2C1_Init+0x50>)
 8002a34:	2200      	movs	r2, #0
 8002a36:	619a      	str	r2, [r3, #24]
 8002a38:	4b07      	ldr	r3, [pc, #28]	; (8002a58 <MX_I2C1_Init+0x50>)
 8002a3a:	2200      	movs	r2, #0
 8002a3c:	61da      	str	r2, [r3, #28]
 8002a3e:	4b06      	ldr	r3, [pc, #24]	; (8002a58 <MX_I2C1_Init+0x50>)
 8002a40:	2200      	movs	r2, #0
 8002a42:	621a      	str	r2, [r3, #32]
 8002a44:	4804      	ldr	r0, [pc, #16]	; (8002a58 <MX_I2C1_Init+0x50>)
 8002a46:	f001 fe11 	bl	800466c <HAL_I2C_Init>
 8002a4a:	4603      	mov	r3, r0
 8002a4c:	2b00      	cmp	r3, #0
 8002a4e:	d001      	beq.n	8002a54 <MX_I2C1_Init+0x4c>
 8002a50:	f000 f9ac 	bl	8002dac <Error_Handler>
 8002a54:	bf00      	nop
 8002a56:	bd80      	pop	{r7, pc}
 8002a58:	20000edc 	.word	0x20000edc
 8002a5c:	40005400 	.word	0x40005400
 8002a60:	00061a80 	.word	0x00061a80

08002a64 <HAL_I2C_MspInit>:
 8002a64:	b580      	push	{r7, lr}
 8002a66:	b08a      	sub	sp, #40	; 0x28
 8002a68:	af00      	add	r7, sp, #0
 8002a6a:	6078      	str	r0, [r7, #4]
 8002a6c:	f107 0314 	add.w	r3, r7, #20
 8002a70:	2200      	movs	r2, #0
 8002a72:	601a      	str	r2, [r3, #0]
 8002a74:	605a      	str	r2, [r3, #4]
 8002a76:	609a      	str	r2, [r3, #8]
 8002a78:	60da      	str	r2, [r3, #12]
 8002a7a:	611a      	str	r2, [r3, #16]
 8002a7c:	687b      	ldr	r3, [r7, #4]
 8002a7e:	681b      	ldr	r3, [r3, #0]
 8002a80:	4a48      	ldr	r2, [pc, #288]	; (8002ba4 <HAL_I2C_MspInit+0x140>)
 8002a82:	4293      	cmp	r3, r2
 8002a84:	f040 8089 	bne.w	8002b9a <HAL_I2C_MspInit+0x136>
 8002a88:	2300      	movs	r3, #0
 8002a8a:	613b      	str	r3, [r7, #16]
 8002a8c:	4b46      	ldr	r3, [pc, #280]	; (8002ba8 <HAL_I2C_MspInit+0x144>)
 8002a8e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002a90:	4a45      	ldr	r2, [pc, #276]	; (8002ba8 <HAL_I2C_MspInit+0x144>)
 8002a92:	f043 0302 	orr.w	r3, r3, #2
 8002a96:	6313      	str	r3, [r2, #48]	; 0x30
 8002a98:	4b43      	ldr	r3, [pc, #268]	; (8002ba8 <HAL_I2C_MspInit+0x144>)
 8002a9a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002a9c:	f003 0302 	and.w	r3, r3, #2
 8002aa0:	613b      	str	r3, [r7, #16]
 8002aa2:	693b      	ldr	r3, [r7, #16]
 8002aa4:	f44f 7340 	mov.w	r3, #768	; 0x300
 8002aa8:	617b      	str	r3, [r7, #20]
 8002aaa:	2312      	movs	r3, #18
 8002aac:	61bb      	str	r3, [r7, #24]
 8002aae:	2300      	movs	r3, #0
 8002ab0:	61fb      	str	r3, [r7, #28]
 8002ab2:	2303      	movs	r3, #3
 8002ab4:	623b      	str	r3, [r7, #32]
 8002ab6:	2304      	movs	r3, #4
 8002ab8:	627b      	str	r3, [r7, #36]	; 0x24
 8002aba:	f107 0314 	add.w	r3, r7, #20
 8002abe:	4619      	mov	r1, r3
 8002ac0:	483a      	ldr	r0, [pc, #232]	; (8002bac <HAL_I2C_MspInit+0x148>)
 8002ac2:	f001 fc1d 	bl	8004300 <HAL_GPIO_Init>
 8002ac6:	2300      	movs	r3, #0
 8002ac8:	60fb      	str	r3, [r7, #12]
 8002aca:	4b37      	ldr	r3, [pc, #220]	; (8002ba8 <HAL_I2C_MspInit+0x144>)
 8002acc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002ace:	4a36      	ldr	r2, [pc, #216]	; (8002ba8 <HAL_I2C_MspInit+0x144>)
 8002ad0:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8002ad4:	6413      	str	r3, [r2, #64]	; 0x40
 8002ad6:	4b34      	ldr	r3, [pc, #208]	; (8002ba8 <HAL_I2C_MspInit+0x144>)
 8002ad8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002ada:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002ade:	60fb      	str	r3, [r7, #12]
 8002ae0:	68fb      	ldr	r3, [r7, #12]
 8002ae2:	4b33      	ldr	r3, [pc, #204]	; (8002bb0 <HAL_I2C_MspInit+0x14c>)
 8002ae4:	4a33      	ldr	r2, [pc, #204]	; (8002bb4 <HAL_I2C_MspInit+0x150>)
 8002ae6:	601a      	str	r2, [r3, #0]
 8002ae8:	4b31      	ldr	r3, [pc, #196]	; (8002bb0 <HAL_I2C_MspInit+0x14c>)
 8002aea:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8002aee:	605a      	str	r2, [r3, #4]
 8002af0:	4b2f      	ldr	r3, [pc, #188]	; (8002bb0 <HAL_I2C_MspInit+0x14c>)
 8002af2:	2200      	movs	r2, #0
 8002af4:	609a      	str	r2, [r3, #8]
 8002af6:	4b2e      	ldr	r3, [pc, #184]	; (8002bb0 <HAL_I2C_MspInit+0x14c>)
 8002af8:	2200      	movs	r2, #0
 8002afa:	60da      	str	r2, [r3, #12]
 8002afc:	4b2c      	ldr	r3, [pc, #176]	; (8002bb0 <HAL_I2C_MspInit+0x14c>)
 8002afe:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002b02:	611a      	str	r2, [r3, #16]
 8002b04:	4b2a      	ldr	r3, [pc, #168]	; (8002bb0 <HAL_I2C_MspInit+0x14c>)
 8002b06:	2200      	movs	r2, #0
 8002b08:	615a      	str	r2, [r3, #20]
 8002b0a:	4b29      	ldr	r3, [pc, #164]	; (8002bb0 <HAL_I2C_MspInit+0x14c>)
 8002b0c:	2200      	movs	r2, #0
 8002b0e:	619a      	str	r2, [r3, #24]
 8002b10:	4b27      	ldr	r3, [pc, #156]	; (8002bb0 <HAL_I2C_MspInit+0x14c>)
 8002b12:	2200      	movs	r2, #0
 8002b14:	61da      	str	r2, [r3, #28]
 8002b16:	4b26      	ldr	r3, [pc, #152]	; (8002bb0 <HAL_I2C_MspInit+0x14c>)
 8002b18:	2200      	movs	r2, #0
 8002b1a:	621a      	str	r2, [r3, #32]
 8002b1c:	4b24      	ldr	r3, [pc, #144]	; (8002bb0 <HAL_I2C_MspInit+0x14c>)
 8002b1e:	2200      	movs	r2, #0
 8002b20:	625a      	str	r2, [r3, #36]	; 0x24
 8002b22:	4823      	ldr	r0, [pc, #140]	; (8002bb0 <HAL_I2C_MspInit+0x14c>)
 8002b24:	f000 ffde 	bl	8003ae4 <HAL_DMA_Init>
 8002b28:	4603      	mov	r3, r0
 8002b2a:	2b00      	cmp	r3, #0
 8002b2c:	d001      	beq.n	8002b32 <HAL_I2C_MspInit+0xce>
 8002b2e:	f000 f93d 	bl	8002dac <Error_Handler>
 8002b32:	687b      	ldr	r3, [r7, #4]
 8002b34:	4a1e      	ldr	r2, [pc, #120]	; (8002bb0 <HAL_I2C_MspInit+0x14c>)
 8002b36:	639a      	str	r2, [r3, #56]	; 0x38
 8002b38:	4a1d      	ldr	r2, [pc, #116]	; (8002bb0 <HAL_I2C_MspInit+0x14c>)
 8002b3a:	687b      	ldr	r3, [r7, #4]
 8002b3c:	6393      	str	r3, [r2, #56]	; 0x38
 8002b3e:	4b1e      	ldr	r3, [pc, #120]	; (8002bb8 <HAL_I2C_MspInit+0x154>)
 8002b40:	4a1e      	ldr	r2, [pc, #120]	; (8002bbc <HAL_I2C_MspInit+0x158>)
 8002b42:	601a      	str	r2, [r3, #0]
 8002b44:	4b1c      	ldr	r3, [pc, #112]	; (8002bb8 <HAL_I2C_MspInit+0x154>)
 8002b46:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8002b4a:	605a      	str	r2, [r3, #4]
 8002b4c:	4b1a      	ldr	r3, [pc, #104]	; (8002bb8 <HAL_I2C_MspInit+0x154>)
 8002b4e:	2240      	movs	r2, #64	; 0x40
 8002b50:	609a      	str	r2, [r3, #8]
 8002b52:	4b19      	ldr	r3, [pc, #100]	; (8002bb8 <HAL_I2C_MspInit+0x154>)
 8002b54:	2200      	movs	r2, #0
 8002b56:	60da      	str	r2, [r3, #12]
 8002b58:	4b17      	ldr	r3, [pc, #92]	; (8002bb8 <HAL_I2C_MspInit+0x154>)
 8002b5a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002b5e:	611a      	str	r2, [r3, #16]
 8002b60:	4b15      	ldr	r3, [pc, #84]	; (8002bb8 <HAL_I2C_MspInit+0x154>)
 8002b62:	2200      	movs	r2, #0
 8002b64:	615a      	str	r2, [r3, #20]
 8002b66:	4b14      	ldr	r3, [pc, #80]	; (8002bb8 <HAL_I2C_MspInit+0x154>)
 8002b68:	2200      	movs	r2, #0
 8002b6a:	619a      	str	r2, [r3, #24]
 8002b6c:	4b12      	ldr	r3, [pc, #72]	; (8002bb8 <HAL_I2C_MspInit+0x154>)
 8002b6e:	2200      	movs	r2, #0
 8002b70:	61da      	str	r2, [r3, #28]
 8002b72:	4b11      	ldr	r3, [pc, #68]	; (8002bb8 <HAL_I2C_MspInit+0x154>)
 8002b74:	2200      	movs	r2, #0
 8002b76:	621a      	str	r2, [r3, #32]
 8002b78:	4b0f      	ldr	r3, [pc, #60]	; (8002bb8 <HAL_I2C_MspInit+0x154>)
 8002b7a:	2200      	movs	r2, #0
 8002b7c:	625a      	str	r2, [r3, #36]	; 0x24
 8002b7e:	480e      	ldr	r0, [pc, #56]	; (8002bb8 <HAL_I2C_MspInit+0x154>)
 8002b80:	f000 ffb0 	bl	8003ae4 <HAL_DMA_Init>
 8002b84:	4603      	mov	r3, r0
 8002b86:	2b00      	cmp	r3, #0
 8002b88:	d001      	beq.n	8002b8e <HAL_I2C_MspInit+0x12a>
 8002b8a:	f000 f90f 	bl	8002dac <Error_Handler>
 8002b8e:	687b      	ldr	r3, [r7, #4]
 8002b90:	4a09      	ldr	r2, [pc, #36]	; (8002bb8 <HAL_I2C_MspInit+0x154>)
 8002b92:	635a      	str	r2, [r3, #52]	; 0x34
 8002b94:	4a08      	ldr	r2, [pc, #32]	; (8002bb8 <HAL_I2C_MspInit+0x154>)
 8002b96:	687b      	ldr	r3, [r7, #4]
 8002b98:	6393      	str	r3, [r2, #56]	; 0x38
 8002b9a:	bf00      	nop
 8002b9c:	3728      	adds	r7, #40	; 0x28
 8002b9e:	46bd      	mov	sp, r7
 8002ba0:	bd80      	pop	{r7, pc}
 8002ba2:	bf00      	nop
 8002ba4:	40005400 	.word	0x40005400
 8002ba8:	40023800 	.word	0x40023800
 8002bac:	40020400 	.word	0x40020400
 8002bb0:	20000f30 	.word	0x20000f30
 8002bb4:	40026010 	.word	0x40026010
 8002bb8:	20000e7c 	.word	0x20000e7c
 8002bbc:	400260a0 	.word	0x400260a0

08002bc0 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8002bc0:	b580      	push	{r7, lr}
 8002bc2:	b082      	sub	sp, #8
 8002bc4:	af02      	add	r7, sp, #8
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8002bc6:	f000 fde5 	bl	8003794 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8002bca:	f000 f885 	bl	8002cd8 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8002bce:	f7ff fec9 	bl	8002964 <MX_GPIO_Init>
  MX_DMA_Init();
 8002bd2:	f7ff fe71 	bl	80028b8 <MX_DMA_Init>
  MX_UART4_Init();
 8002bd6:	f000 fae9 	bl	80031ac <MX_UART4_Init>
  MX_USART1_UART_Init();
 8002bda:	f000 fb11 	bl	8003200 <MX_USART1_UART_Init>
  MX_TIM3_Init();
 8002bde:	f000 f9d1 	bl	8002f84 <MX_TIM3_Init>
  MX_I2C1_Init();
 8002be2:	f7ff ff11 	bl	8002a08 <MX_I2C1_Init>
  /* USER CODE BEGIN 2 */
  /* Wait for everyone to start */
  HAL_Delay(15);
 8002be6:	200f      	movs	r0, #15
 8002be8:	f000 fe46 	bl	8003878 <HAL_Delay>
  /* Peripherals initialization */
  UART_Init();
 8002bec:	f7ff fa26 	bl	800203c <UART_Init>
  /* Task definition 	Name						Init process					Main process						1ms it process			Gyro data callback process */
  TASK_MANAGER_Add_Task("Gyro", 					MPU_Init, 						NULL, 								MPU_Read_All_Dma,  		NULL);
 8002bf0:	2300      	movs	r3, #0
 8002bf2:	9300      	str	r3, [sp, #0]
 8002bf4:	4b21      	ldr	r3, [pc, #132]	; (8002c7c <main+0xbc>)
 8002bf6:	2200      	movs	r2, #0
 8002bf8:	4921      	ldr	r1, [pc, #132]	; (8002c80 <main+0xc0>)
 8002bfa:	4822      	ldr	r0, [pc, #136]	; (8002c84 <main+0xc4>)
 8002bfc:	f000 fd68 	bl	80036d0 <TASK_MANAGER_Add_Task>
  TASK_MANAGER_Add_Task("Complementary Filter", 	COMPLEMENTARY_FILTER_Init, 		NULL, 								NULL,					COMPLEMENTARY_FILTER_Process);
 8002c00:	4b21      	ldr	r3, [pc, #132]	; (8002c88 <main+0xc8>)
 8002c02:	9300      	str	r3, [sp, #0]
 8002c04:	2300      	movs	r3, #0
 8002c06:	2200      	movs	r2, #0
 8002c08:	4920      	ldr	r1, [pc, #128]	; (8002c8c <main+0xcc>)
 8002c0a:	4821      	ldr	r0, [pc, #132]	; (8002c90 <main+0xd0>)
 8002c0c:	f000 fd60 	bl	80036d0 <TASK_MANAGER_Add_Task>
  TASK_MANAGER_Add_Task("Controller", 				CONTROLLER_Init, 				NULL, 								NULL, 					CONTROLLER_Process);
 8002c10:	4b20      	ldr	r3, [pc, #128]	; (8002c94 <main+0xd4>)
 8002c12:	9300      	str	r3, [sp, #0]
 8002c14:	2300      	movs	r3, #0
 8002c16:	2200      	movs	r2, #0
 8002c18:	491f      	ldr	r1, [pc, #124]	; (8002c98 <main+0xd8>)
 8002c1a:	4820      	ldr	r0, [pc, #128]	; (8002c9c <main+0xdc>)
 8002c1c:	f000 fd58 	bl	80036d0 <TASK_MANAGER_Add_Task>
  TASK_MANAGER_Add_Task("Motor Mixer", 				NULL, 							NULL, 								NULL, 					MOTOR_MIXER_Process);
 8002c20:	4b1f      	ldr	r3, [pc, #124]	; (8002ca0 <main+0xe0>)
 8002c22:	9300      	str	r3, [sp, #0]
 8002c24:	2300      	movs	r3, #0
 8002c26:	2200      	movs	r2, #0
 8002c28:	2100      	movs	r1, #0
 8002c2a:	481e      	ldr	r0, [pc, #120]	; (8002ca4 <main+0xe4>)
 8002c2c:	f000 fd50 	bl	80036d0 <TASK_MANAGER_Add_Task>
  TASK_MANAGER_Add_Task("Motors",					MOTOR_Init, 					NULL, 								MOTOR_Process, 			MOTOR_Process);
 8002c30:	4b1d      	ldr	r3, [pc, #116]	; (8002ca8 <main+0xe8>)
 8002c32:	9300      	str	r3, [sp, #0]
 8002c34:	4b1c      	ldr	r3, [pc, #112]	; (8002ca8 <main+0xe8>)
 8002c36:	2200      	movs	r2, #0
 8002c38:	491c      	ldr	r1, [pc, #112]	; (8002cac <main+0xec>)
 8002c3a:	481d      	ldr	r0, [pc, #116]	; (8002cb0 <main+0xf0>)
 8002c3c:	f000 fd48 	bl	80036d0 <TASK_MANAGER_Add_Task>
  TASK_MANAGER_Add_Task("Radio", 					RADIO_Process_Init, 			RADIO_Process_Main, 				NULL, 					NULL);
 8002c40:	2300      	movs	r3, #0
 8002c42:	9300      	str	r3, [sp, #0]
 8002c44:	2300      	movs	r3, #0
 8002c46:	4a1b      	ldr	r2, [pc, #108]	; (8002cb4 <main+0xf4>)
 8002c48:	491b      	ldr	r1, [pc, #108]	; (8002cb8 <main+0xf8>)
 8002c4a:	481c      	ldr	r0, [pc, #112]	; (8002cbc <main+0xfc>)
 8002c4c:	f000 fd40 	bl	80036d0 <TASK_MANAGER_Add_Task>
  TASK_MANAGER_Add_Task("Data Logger", 				DATA_LOGGER_Init, 				DATA_LOGGER_Main, 					NULL, 					NULL);
 8002c50:	2300      	movs	r3, #0
 8002c52:	9300      	str	r3, [sp, #0]
 8002c54:	2300      	movs	r3, #0
 8002c56:	4a1a      	ldr	r2, [pc, #104]	; (8002cc0 <main+0x100>)
 8002c58:	491a      	ldr	r1, [pc, #104]	; (8002cc4 <main+0x104>)
 8002c5a:	481b      	ldr	r0, [pc, #108]	; (8002cc8 <main+0x108>)
 8002c5c:	f000 fd38 	bl	80036d0 <TASK_MANAGER_Add_Task>
  TASK_MANAGER_Add_Task("High Level", 				HIGH_LEVEL_Init, 				HIGH_LEVEL_Process_Main, 			NULL, 					NULL);
 8002c60:	2300      	movs	r3, #0
 8002c62:	9300      	str	r3, [sp, #0]
 8002c64:	2300      	movs	r3, #0
 8002c66:	4a19      	ldr	r2, [pc, #100]	; (8002ccc <main+0x10c>)
 8002c68:	4919      	ldr	r1, [pc, #100]	; (8002cd0 <main+0x110>)
 8002c6a:	481a      	ldr	r0, [pc, #104]	; (8002cd4 <main+0x114>)
 8002c6c:	f000 fd30 	bl	80036d0 <TASK_MANAGER_Add_Task>

  /* System initialization */
  TASK_MANAGER_Init();
 8002c70:	f000 fc74 	bl	800355c <TASK_MANAGER_Init>
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
    /* USER CODE END WHILE */
	  TASK_MANAGER_Main();
 8002c74:	f000 fca2 	bl	80035bc <TASK_MANAGER_Main>
 8002c78:	e7fc      	b.n	8002c74 <main+0xb4>
 8002c7a:	bf00      	nop
 8002c7c:	080026d1 	.word	0x080026d1
 8002c80:	08002531 	.word	0x08002531
 8002c84:	080092ec 	.word	0x080092ec
 8002c88:	080004fd 	.word	0x080004fd
 8002c8c:	080004c1 	.word	0x080004c1
 8002c90:	080092f4 	.word	0x080092f4
 8002c94:	08000891 	.word	0x08000891
 8002c98:	0800085d 	.word	0x0800085d
 8002c9c:	0800930c 	.word	0x0800930c
 8002ca0:	080017dd 	.word	0x080017dd
 8002ca4:	08009318 	.word	0x08009318
 8002ca8:	080018d5 	.word	0x080018d5
 8002cac:	080018c5 	.word	0x080018c5
 8002cb0:	08009324 	.word	0x08009324
 8002cb4:	080024dd 	.word	0x080024dd
 8002cb8:	080024c9 	.word	0x080024c9
 8002cbc:	0800932c 	.word	0x0800932c
 8002cc0:	08000cdd 	.word	0x08000cdd
 8002cc4:	08000a3d 	.word	0x08000a3d
 8002cc8:	08009334 	.word	0x08009334
 8002ccc:	080015ad 	.word	0x080015ad
 8002cd0:	08001575 	.word	0x08001575
 8002cd4:	08009340 	.word	0x08009340

08002cd8 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8002cd8:	b580      	push	{r7, lr}
 8002cda:	b094      	sub	sp, #80	; 0x50
 8002cdc:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8002cde:	f107 0320 	add.w	r3, r7, #32
 8002ce2:	2230      	movs	r2, #48	; 0x30
 8002ce4:	2100      	movs	r1, #0
 8002ce6:	4618      	mov	r0, r3
 8002ce8:	f005 fbfa 	bl	80084e0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8002cec:	f107 030c 	add.w	r3, r7, #12
 8002cf0:	2200      	movs	r2, #0
 8002cf2:	601a      	str	r2, [r3, #0]
 8002cf4:	605a      	str	r2, [r3, #4]
 8002cf6:	609a      	str	r2, [r3, #8]
 8002cf8:	60da      	str	r2, [r3, #12]
 8002cfa:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8002cfc:	2300      	movs	r3, #0
 8002cfe:	60bb      	str	r3, [r7, #8]
 8002d00:	4b28      	ldr	r3, [pc, #160]	; (8002da4 <SystemClock_Config+0xcc>)
 8002d02:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002d04:	4a27      	ldr	r2, [pc, #156]	; (8002da4 <SystemClock_Config+0xcc>)
 8002d06:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002d0a:	6413      	str	r3, [r2, #64]	; 0x40
 8002d0c:	4b25      	ldr	r3, [pc, #148]	; (8002da4 <SystemClock_Config+0xcc>)
 8002d0e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002d10:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002d14:	60bb      	str	r3, [r7, #8]
 8002d16:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8002d18:	2300      	movs	r3, #0
 8002d1a:	607b      	str	r3, [r7, #4]
 8002d1c:	4b22      	ldr	r3, [pc, #136]	; (8002da8 <SystemClock_Config+0xd0>)
 8002d1e:	681b      	ldr	r3, [r3, #0]
 8002d20:	4a21      	ldr	r2, [pc, #132]	; (8002da8 <SystemClock_Config+0xd0>)
 8002d22:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002d26:	6013      	str	r3, [r2, #0]
 8002d28:	4b1f      	ldr	r3, [pc, #124]	; (8002da8 <SystemClock_Config+0xd0>)
 8002d2a:	681b      	ldr	r3, [r3, #0]
 8002d2c:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8002d30:	607b      	str	r3, [r7, #4]
 8002d32:	687b      	ldr	r3, [r7, #4]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8002d34:	2302      	movs	r3, #2
 8002d36:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8002d38:	2301      	movs	r3, #1
 8002d3a:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8002d3c:	2310      	movs	r3, #16
 8002d3e:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8002d40:	2302      	movs	r3, #2
 8002d42:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8002d44:	2300      	movs	r3, #0
 8002d46:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 8;
 8002d48:	2308      	movs	r3, #8
 8002d4a:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 168;
 8002d4c:	23a8      	movs	r3, #168	; 0xa8
 8002d4e:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8002d50:	2302      	movs	r3, #2
 8002d52:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8002d54:	2304      	movs	r3, #4
 8002d56:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002d58:	f107 0320 	add.w	r3, r7, #32
 8002d5c:	4618      	mov	r0, r3
 8002d5e:	f002 ff13 	bl	8005b88 <HAL_RCC_OscConfig>
 8002d62:	4603      	mov	r3, r0
 8002d64:	2b00      	cmp	r3, #0
 8002d66:	d001      	beq.n	8002d6c <SystemClock_Config+0x94>
  {
    Error_Handler();
 8002d68:	f000 f820 	bl	8002dac <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002d6c:	230f      	movs	r3, #15
 8002d6e:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8002d70:	2302      	movs	r3, #2
 8002d72:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8002d74:	2300      	movs	r3, #0
 8002d76:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8002d78:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8002d7c:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8002d7e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002d82:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8002d84:	f107 030c 	add.w	r3, r7, #12
 8002d88:	2105      	movs	r1, #5
 8002d8a:	4618      	mov	r0, r3
 8002d8c:	f003 f974 	bl	8006078 <HAL_RCC_ClockConfig>
 8002d90:	4603      	mov	r3, r0
 8002d92:	2b00      	cmp	r3, #0
 8002d94:	d001      	beq.n	8002d9a <SystemClock_Config+0xc2>
  {
    Error_Handler();
 8002d96:	f000 f809 	bl	8002dac <Error_Handler>
  }
}
 8002d9a:	bf00      	nop
 8002d9c:	3750      	adds	r7, #80	; 0x50
 8002d9e:	46bd      	mov	sp, r7
 8002da0:	bd80      	pop	{r7, pc}
 8002da2:	bf00      	nop
 8002da4:	40023800 	.word	0x40023800
 8002da8:	40007000 	.word	0x40007000

08002dac <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8002dac:	b480      	push	{r7}
 8002dae:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002db0:	b672      	cpsid	i
}
 8002db2:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8002db4:	e7fe      	b.n	8002db4 <Error_Handler+0x8>
	...

08002db8 <HAL_MspInit>:
 8002db8:	b480      	push	{r7}
 8002dba:	b083      	sub	sp, #12
 8002dbc:	af00      	add	r7, sp, #0
 8002dbe:	2300      	movs	r3, #0
 8002dc0:	607b      	str	r3, [r7, #4]
 8002dc2:	4b10      	ldr	r3, [pc, #64]	; (8002e04 <HAL_MspInit+0x4c>)
 8002dc4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002dc6:	4a0f      	ldr	r2, [pc, #60]	; (8002e04 <HAL_MspInit+0x4c>)
 8002dc8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002dcc:	6453      	str	r3, [r2, #68]	; 0x44
 8002dce:	4b0d      	ldr	r3, [pc, #52]	; (8002e04 <HAL_MspInit+0x4c>)
 8002dd0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002dd2:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8002dd6:	607b      	str	r3, [r7, #4]
 8002dd8:	687b      	ldr	r3, [r7, #4]
 8002dda:	2300      	movs	r3, #0
 8002ddc:	603b      	str	r3, [r7, #0]
 8002dde:	4b09      	ldr	r3, [pc, #36]	; (8002e04 <HAL_MspInit+0x4c>)
 8002de0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002de2:	4a08      	ldr	r2, [pc, #32]	; (8002e04 <HAL_MspInit+0x4c>)
 8002de4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002de8:	6413      	str	r3, [r2, #64]	; 0x40
 8002dea:	4b06      	ldr	r3, [pc, #24]	; (8002e04 <HAL_MspInit+0x4c>)
 8002dec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002dee:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002df2:	603b      	str	r3, [r7, #0]
 8002df4:	683b      	ldr	r3, [r7, #0]
 8002df6:	bf00      	nop
 8002df8:	370c      	adds	r7, #12
 8002dfa:	46bd      	mov	sp, r7
 8002dfc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e00:	4770      	bx	lr
 8002e02:	bf00      	nop
 8002e04:	40023800 	.word	0x40023800

08002e08 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002e08:	b480      	push	{r7}
 8002e0a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8002e0c:	e7fe      	b.n	8002e0c <NMI_Handler+0x4>

08002e0e <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8002e0e:	b480      	push	{r7}
 8002e10:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002e12:	e7fe      	b.n	8002e12 <HardFault_Handler+0x4>

08002e14 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002e14:	b480      	push	{r7}
 8002e16:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002e18:	e7fe      	b.n	8002e18 <MemManage_Handler+0x4>

08002e1a <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8002e1a:	b480      	push	{r7}
 8002e1c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002e1e:	e7fe      	b.n	8002e1e <BusFault_Handler+0x4>

08002e20 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8002e20:	b480      	push	{r7}
 8002e22:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002e24:	e7fe      	b.n	8002e24 <UsageFault_Handler+0x4>

08002e26 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002e26:	b480      	push	{r7}
 8002e28:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8002e2a:	bf00      	nop
 8002e2c:	46bd      	mov	sp, r7
 8002e2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e32:	4770      	bx	lr

08002e34 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8002e34:	b480      	push	{r7}
 8002e36:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8002e38:	bf00      	nop
 8002e3a:	46bd      	mov	sp, r7
 8002e3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e40:	4770      	bx	lr

08002e42 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8002e42:	b480      	push	{r7}
 8002e44:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8002e46:	bf00      	nop
 8002e48:	46bd      	mov	sp, r7
 8002e4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e4e:	4770      	bx	lr

08002e50 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002e50:	b580      	push	{r7, lr}
 8002e52:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */
  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8002e54:	f000 fcf0 	bl	8003838 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */
  TASK_MANAGER_It_ms();
 8002e58:	f000 fbdc 	bl	8003614 <TASK_MANAGER_It_ms>
  /* USER CODE END SysTick_IRQn 1 */
}
 8002e5c:	bf00      	nop
 8002e5e:	bd80      	pop	{r7, pc}

08002e60 <DMA1_Stream0_IRQHandler>:

/**
  * @brief This function handles DMA1 stream0 global interrupt.
  */
void DMA1_Stream0_IRQHandler(void)
{
 8002e60:	b580      	push	{r7, lr}
 8002e62:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream0_IRQn 0 */

  /* USER CODE END DMA1_Stream0_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_i2c1_rx);
 8002e64:	4802      	ldr	r0, [pc, #8]	; (8002e70 <DMA1_Stream0_IRQHandler+0x10>)
 8002e66:	f000 ffd5 	bl	8003e14 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream0_IRQn 1 */

  /* USER CODE END DMA1_Stream0_IRQn 1 */
}
 8002e6a:	bf00      	nop
 8002e6c:	bd80      	pop	{r7, pc}
 8002e6e:	bf00      	nop
 8002e70:	20000f30 	.word	0x20000f30

08002e74 <DMA1_Stream2_IRQHandler>:

/**
  * @brief This function handles DMA1 stream2 global interrupt.
  */
void DMA1_Stream2_IRQHandler(void)
{
 8002e74:	b580      	push	{r7, lr}
 8002e76:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream2_IRQn 0 */

  /* USER CODE END DMA1_Stream2_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_uart4_rx);
 8002e78:	4802      	ldr	r0, [pc, #8]	; (8002e84 <DMA1_Stream2_IRQHandler+0x10>)
 8002e7a:	f000 ffcb 	bl	8003e14 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream2_IRQn 1 */

  /* USER CODE END DMA1_Stream2_IRQn 1 */
}
 8002e7e:	bf00      	nop
 8002e80:	bd80      	pop	{r7, pc}
 8002e82:	bf00      	nop
 8002e84:	20000fd8 	.word	0x20000fd8

08002e88 <DMA1_Stream4_IRQHandler>:

/**
  * @brief This function handles DMA1 stream4 global interrupt.
  */
void DMA1_Stream4_IRQHandler(void)
{
 8002e88:	b580      	push	{r7, lr}
 8002e8a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream4_IRQn 0 */

  /* USER CODE END DMA1_Stream4_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_uart4_tx);
 8002e8c:	4802      	ldr	r0, [pc, #8]	; (8002e98 <DMA1_Stream4_IRQHandler+0x10>)
 8002e8e:	f000 ffc1 	bl	8003e14 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream4_IRQn 1 */

  /* USER CODE END DMA1_Stream4_IRQn 1 */
}
 8002e92:	bf00      	nop
 8002e94:	bd80      	pop	{r7, pc}
 8002e96:	bf00      	nop
 8002e98:	20001180 	.word	0x20001180

08002e9c <DMA1_Stream6_IRQHandler>:

/**
  * @brief This function handles DMA1 stream6 global interrupt.
  */
void DMA1_Stream6_IRQHandler(void)
{
 8002e9c:	b580      	push	{r7, lr}
 8002e9e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream6_IRQn 0 */

  /* USER CODE END DMA1_Stream6_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_i2c1_tx);
 8002ea0:	4802      	ldr	r0, [pc, #8]	; (8002eac <DMA1_Stream6_IRQHandler+0x10>)
 8002ea2:	f000 ffb7 	bl	8003e14 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream6_IRQn 1 */

  /* USER CODE END DMA1_Stream6_IRQn 1 */
}
 8002ea6:	bf00      	nop
 8002ea8:	bd80      	pop	{r7, pc}
 8002eaa:	bf00      	nop
 8002eac:	20000e7c 	.word	0x20000e7c

08002eb0 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 8002eb0:	b580      	push	{r7, lr}
 8002eb2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 8002eb4:	4803      	ldr	r0, [pc, #12]	; (8002ec4 <USART1_IRQHandler+0x14>)
 8002eb6:	f004 faa1 	bl	80073fc <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */
  UART_Idle_Line_Callback(uart_e1);
 8002eba:	2000      	movs	r0, #0
 8002ebc:	f7fe ff74 	bl	8001da8 <UART_Idle_Line_Callback>
  /* USER CODE END USART1_IRQn 1 */
}
 8002ec0:	bf00      	nop
 8002ec2:	bd80      	pop	{r7, pc}
 8002ec4:	200010f8 	.word	0x200010f8

08002ec8 <UART4_IRQHandler>:

/**
  * @brief This function handles UART4 global interrupt.
  */
void UART4_IRQHandler(void)
{
 8002ec8:	b580      	push	{r7, lr}
 8002eca:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UART4_IRQn 0 */

  /* USER CODE END UART4_IRQn 0 */
  HAL_UART_IRQHandler(&huart4);
 8002ecc:	4803      	ldr	r0, [pc, #12]	; (8002edc <UART4_IRQHandler+0x14>)
 8002ece:	f004 fa95 	bl	80073fc <HAL_UART_IRQHandler>
  /* USER CODE BEGIN UART4_IRQn 1 */
  UART_Idle_Line_Callback(uart_e4);
 8002ed2:	2001      	movs	r0, #1
 8002ed4:	f7fe ff68 	bl	8001da8 <UART_Idle_Line_Callback>
  /* USER CODE END UART4_IRQn 1 */
}
 8002ed8:	bf00      	nop
 8002eda:	bd80      	pop	{r7, pc}
 8002edc:	2000113c 	.word	0x2000113c

08002ee0 <DMA2_Stream2_IRQHandler>:

/**
  * @brief This function handles DMA2 stream2 global interrupt.
  */
void DMA2_Stream2_IRQHandler(void)
{
 8002ee0:	b580      	push	{r7, lr}
 8002ee2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream2_IRQn 0 */

  /* USER CODE END DMA2_Stream2_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart1_rx);
 8002ee4:	4802      	ldr	r0, [pc, #8]	; (8002ef0 <DMA2_Stream2_IRQHandler+0x10>)
 8002ee6:	f000 ff95 	bl	8003e14 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream2_IRQn 1 */

  /* USER CODE END DMA2_Stream2_IRQn 1 */
}
 8002eea:	bf00      	nop
 8002eec:	bd80      	pop	{r7, pc}
 8002eee:	bf00      	nop
 8002ef0:	20001098 	.word	0x20001098

08002ef4 <DMA2_Stream7_IRQHandler>:

/**
  * @brief This function handles DMA2 stream7 global interrupt.
  */
void DMA2_Stream7_IRQHandler(void)
{
 8002ef4:	b580      	push	{r7, lr}
 8002ef6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream7_IRQn 0 */

  /* USER CODE END DMA2_Stream7_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart1_tx);
 8002ef8:	4802      	ldr	r0, [pc, #8]	; (8002f04 <DMA2_Stream7_IRQHandler+0x10>)
 8002efa:	f000 ff8b 	bl	8003e14 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream7_IRQn 1 */

  /* USER CODE END DMA2_Stream7_IRQn 1 */
}
 8002efe:	bf00      	nop
 8002f00:	bd80      	pop	{r7, pc}
 8002f02:	bf00      	nop
 8002f04:	20001038 	.word	0x20001038

08002f08 <HAL_UART_TxCpltCallback>:

/* USER CODE BEGIN 1 */
void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
{
 8002f08:	b580      	push	{r7, lr}
 8002f0a:	b082      	sub	sp, #8
 8002f0c:	af00      	add	r7, sp, #0
 8002f0e:	6078      	str	r0, [r7, #4]
	if(huart == &huart4)
 8002f10:	687b      	ldr	r3, [r7, #4]
 8002f12:	4a09      	ldr	r2, [pc, #36]	; (8002f38 <HAL_UART_TxCpltCallback+0x30>)
 8002f14:	4293      	cmp	r3, r2
 8002f16:	d103      	bne.n	8002f20 <HAL_UART_TxCpltCallback+0x18>
	{
		UART_Transfer_Complete_Callback(uart_e4);
 8002f18:	2001      	movs	r0, #1
 8002f1a:	f7fe ff93 	bl	8001e44 <UART_Transfer_Complete_Callback>
	}
	else if(huart == &huart1)
	{
		UART_Transfer_Complete_Callback(uart_e1 );
	}
}
 8002f1e:	e006      	b.n	8002f2e <HAL_UART_TxCpltCallback+0x26>
	else if(huart == &huart1)
 8002f20:	687b      	ldr	r3, [r7, #4]
 8002f22:	4a06      	ldr	r2, [pc, #24]	; (8002f3c <HAL_UART_TxCpltCallback+0x34>)
 8002f24:	4293      	cmp	r3, r2
 8002f26:	d102      	bne.n	8002f2e <HAL_UART_TxCpltCallback+0x26>
		UART_Transfer_Complete_Callback(uart_e1 );
 8002f28:	2000      	movs	r0, #0
 8002f2a:	f7fe ff8b 	bl	8001e44 <UART_Transfer_Complete_Callback>
}
 8002f2e:	bf00      	nop
 8002f30:	3708      	adds	r7, #8
 8002f32:	46bd      	mov	sp, r7
 8002f34:	bd80      	pop	{r7, pc}
 8002f36:	bf00      	nop
 8002f38:	2000113c 	.word	0x2000113c
 8002f3c:	200010f8 	.word	0x200010f8

08002f40 <HAL_I2C_MemRxCpltCallback>:

void HAL_I2C_MemRxCpltCallback(I2C_HandleTypeDef *hi2c)
{
 8002f40:	b580      	push	{r7, lr}
 8002f42:	b082      	sub	sp, #8
 8002f44:	af00      	add	r7, sp, #0
 8002f46:	6078      	str	r0, [r7, #4]
	if(MPU_Rx_Complete_Callback())
 8002f48:	f7ff fc8c 	bl	8002864 <MPU_Rx_Complete_Callback>
 8002f4c:	4603      	mov	r3, r0
 8002f4e:	2b00      	cmp	r3, #0
 8002f50:	d001      	beq.n	8002f56 <HAL_I2C_MemRxCpltCallback+0x16>
	{
	  TASK_MANAGER_Gyro_Data_Ready();
 8002f52:	f000 fb91 	bl	8003678 <TASK_MANAGER_Gyro_Data_Ready>
	}
}
 8002f56:	bf00      	nop
 8002f58:	3708      	adds	r7, #8
 8002f5a:	46bd      	mov	sp, r7
 8002f5c:	bd80      	pop	{r7, pc}
	...

08002f60 <SystemInit>:
 8002f60:	b480      	push	{r7}
 8002f62:	af00      	add	r7, sp, #0
 8002f64:	4b06      	ldr	r3, [pc, #24]	; (8002f80 <SystemInit+0x20>)
 8002f66:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002f6a:	4a05      	ldr	r2, [pc, #20]	; (8002f80 <SystemInit+0x20>)
 8002f6c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8002f70:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8002f74:	bf00      	nop
 8002f76:	46bd      	mov	sp, r7
 8002f78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f7c:	4770      	bx	lr
 8002f7e:	bf00      	nop
 8002f80:	e000ed00 	.word	0xe000ed00

08002f84 <MX_TIM3_Init>:
 8002f84:	b580      	push	{r7, lr}
 8002f86:	b08e      	sub	sp, #56	; 0x38
 8002f88:	af00      	add	r7, sp, #0
 8002f8a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8002f8e:	2200      	movs	r2, #0
 8002f90:	601a      	str	r2, [r3, #0]
 8002f92:	605a      	str	r2, [r3, #4]
 8002f94:	609a      	str	r2, [r3, #8]
 8002f96:	60da      	str	r2, [r3, #12]
 8002f98:	f107 0320 	add.w	r3, r7, #32
 8002f9c:	2200      	movs	r2, #0
 8002f9e:	601a      	str	r2, [r3, #0]
 8002fa0:	605a      	str	r2, [r3, #4]
 8002fa2:	1d3b      	adds	r3, r7, #4
 8002fa4:	2200      	movs	r2, #0
 8002fa6:	601a      	str	r2, [r3, #0]
 8002fa8:	605a      	str	r2, [r3, #4]
 8002faa:	609a      	str	r2, [r3, #8]
 8002fac:	60da      	str	r2, [r3, #12]
 8002fae:	611a      	str	r2, [r3, #16]
 8002fb0:	615a      	str	r2, [r3, #20]
 8002fb2:	619a      	str	r2, [r3, #24]
 8002fb4:	4b3d      	ldr	r3, [pc, #244]	; (80030ac <MX_TIM3_Init+0x128>)
 8002fb6:	4a3e      	ldr	r2, [pc, #248]	; (80030b0 <MX_TIM3_Init+0x12c>)
 8002fb8:	601a      	str	r2, [r3, #0]
 8002fba:	4b3c      	ldr	r3, [pc, #240]	; (80030ac <MX_TIM3_Init+0x128>)
 8002fbc:	2253      	movs	r2, #83	; 0x53
 8002fbe:	605a      	str	r2, [r3, #4]
 8002fc0:	4b3a      	ldr	r3, [pc, #232]	; (80030ac <MX_TIM3_Init+0x128>)
 8002fc2:	2200      	movs	r2, #0
 8002fc4:	609a      	str	r2, [r3, #8]
 8002fc6:	4b39      	ldr	r3, [pc, #228]	; (80030ac <MX_TIM3_Init+0x128>)
 8002fc8:	f640 729f 	movw	r2, #3999	; 0xf9f
 8002fcc:	60da      	str	r2, [r3, #12]
 8002fce:	4b37      	ldr	r3, [pc, #220]	; (80030ac <MX_TIM3_Init+0x128>)
 8002fd0:	2200      	movs	r2, #0
 8002fd2:	611a      	str	r2, [r3, #16]
 8002fd4:	4b35      	ldr	r3, [pc, #212]	; (80030ac <MX_TIM3_Init+0x128>)
 8002fd6:	2280      	movs	r2, #128	; 0x80
 8002fd8:	619a      	str	r2, [r3, #24]
 8002fda:	4834      	ldr	r0, [pc, #208]	; (80030ac <MX_TIM3_Init+0x128>)
 8002fdc:	f003 fa1c 	bl	8006418 <HAL_TIM_Base_Init>
 8002fe0:	4603      	mov	r3, r0
 8002fe2:	2b00      	cmp	r3, #0
 8002fe4:	d001      	beq.n	8002fea <MX_TIM3_Init+0x66>
 8002fe6:	f7ff fee1 	bl	8002dac <Error_Handler>
 8002fea:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002fee:	62bb      	str	r3, [r7, #40]	; 0x28
 8002ff0:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8002ff4:	4619      	mov	r1, r3
 8002ff6:	482d      	ldr	r0, [pc, #180]	; (80030ac <MX_TIM3_Init+0x128>)
 8002ff8:	f003 fcb0 	bl	800695c <HAL_TIM_ConfigClockSource>
 8002ffc:	4603      	mov	r3, r0
 8002ffe:	2b00      	cmp	r3, #0
 8003000:	d001      	beq.n	8003006 <MX_TIM3_Init+0x82>
 8003002:	f7ff fed3 	bl	8002dac <Error_Handler>
 8003006:	4829      	ldr	r0, [pc, #164]	; (80030ac <MX_TIM3_Init+0x128>)
 8003008:	f003 fa55 	bl	80064b6 <HAL_TIM_PWM_Init>
 800300c:	4603      	mov	r3, r0
 800300e:	2b00      	cmp	r3, #0
 8003010:	d001      	beq.n	8003016 <MX_TIM3_Init+0x92>
 8003012:	f7ff fecb 	bl	8002dac <Error_Handler>
 8003016:	2300      	movs	r3, #0
 8003018:	623b      	str	r3, [r7, #32]
 800301a:	2300      	movs	r3, #0
 800301c:	627b      	str	r3, [r7, #36]	; 0x24
 800301e:	f107 0320 	add.w	r3, r7, #32
 8003022:	4619      	mov	r1, r3
 8003024:	4821      	ldr	r0, [pc, #132]	; (80030ac <MX_TIM3_Init+0x128>)
 8003026:	f004 f871 	bl	800710c <HAL_TIMEx_MasterConfigSynchronization>
 800302a:	4603      	mov	r3, r0
 800302c:	2b00      	cmp	r3, #0
 800302e:	d001      	beq.n	8003034 <MX_TIM3_Init+0xb0>
 8003030:	f7ff febc 	bl	8002dac <Error_Handler>
 8003034:	2360      	movs	r3, #96	; 0x60
 8003036:	607b      	str	r3, [r7, #4]
 8003038:	f240 33e7 	movw	r3, #999	; 0x3e7
 800303c:	60bb      	str	r3, [r7, #8]
 800303e:	2300      	movs	r3, #0
 8003040:	60fb      	str	r3, [r7, #12]
 8003042:	2300      	movs	r3, #0
 8003044:	617b      	str	r3, [r7, #20]
 8003046:	1d3b      	adds	r3, r7, #4
 8003048:	2200      	movs	r2, #0
 800304a:	4619      	mov	r1, r3
 800304c:	4817      	ldr	r0, [pc, #92]	; (80030ac <MX_TIM3_Init+0x128>)
 800304e:	f003 fbc3 	bl	80067d8 <HAL_TIM_PWM_ConfigChannel>
 8003052:	4603      	mov	r3, r0
 8003054:	2b00      	cmp	r3, #0
 8003056:	d001      	beq.n	800305c <MX_TIM3_Init+0xd8>
 8003058:	f7ff fea8 	bl	8002dac <Error_Handler>
 800305c:	1d3b      	adds	r3, r7, #4
 800305e:	2204      	movs	r2, #4
 8003060:	4619      	mov	r1, r3
 8003062:	4812      	ldr	r0, [pc, #72]	; (80030ac <MX_TIM3_Init+0x128>)
 8003064:	f003 fbb8 	bl	80067d8 <HAL_TIM_PWM_ConfigChannel>
 8003068:	4603      	mov	r3, r0
 800306a:	2b00      	cmp	r3, #0
 800306c:	d001      	beq.n	8003072 <MX_TIM3_Init+0xee>
 800306e:	f7ff fe9d 	bl	8002dac <Error_Handler>
 8003072:	1d3b      	adds	r3, r7, #4
 8003074:	2208      	movs	r2, #8
 8003076:	4619      	mov	r1, r3
 8003078:	480c      	ldr	r0, [pc, #48]	; (80030ac <MX_TIM3_Init+0x128>)
 800307a:	f003 fbad 	bl	80067d8 <HAL_TIM_PWM_ConfigChannel>
 800307e:	4603      	mov	r3, r0
 8003080:	2b00      	cmp	r3, #0
 8003082:	d001      	beq.n	8003088 <MX_TIM3_Init+0x104>
 8003084:	f7ff fe92 	bl	8002dac <Error_Handler>
 8003088:	1d3b      	adds	r3, r7, #4
 800308a:	220c      	movs	r2, #12
 800308c:	4619      	mov	r1, r3
 800308e:	4807      	ldr	r0, [pc, #28]	; (80030ac <MX_TIM3_Init+0x128>)
 8003090:	f003 fba2 	bl	80067d8 <HAL_TIM_PWM_ConfigChannel>
 8003094:	4603      	mov	r3, r0
 8003096:	2b00      	cmp	r3, #0
 8003098:	d001      	beq.n	800309e <MX_TIM3_Init+0x11a>
 800309a:	f7ff fe87 	bl	8002dac <Error_Handler>
 800309e:	4803      	ldr	r0, [pc, #12]	; (80030ac <MX_TIM3_Init+0x128>)
 80030a0:	f000 f82a 	bl	80030f8 <HAL_TIM_MspPostInit>
 80030a4:	bf00      	nop
 80030a6:	3738      	adds	r7, #56	; 0x38
 80030a8:	46bd      	mov	sp, r7
 80030aa:	bd80      	pop	{r7, pc}
 80030ac:	20000f90 	.word	0x20000f90
 80030b0:	40000400 	.word	0x40000400

080030b4 <HAL_TIM_Base_MspInit>:
 80030b4:	b480      	push	{r7}
 80030b6:	b085      	sub	sp, #20
 80030b8:	af00      	add	r7, sp, #0
 80030ba:	6078      	str	r0, [r7, #4]
 80030bc:	687b      	ldr	r3, [r7, #4]
 80030be:	681b      	ldr	r3, [r3, #0]
 80030c0:	4a0b      	ldr	r2, [pc, #44]	; (80030f0 <HAL_TIM_Base_MspInit+0x3c>)
 80030c2:	4293      	cmp	r3, r2
 80030c4:	d10d      	bne.n	80030e2 <HAL_TIM_Base_MspInit+0x2e>
 80030c6:	2300      	movs	r3, #0
 80030c8:	60fb      	str	r3, [r7, #12]
 80030ca:	4b0a      	ldr	r3, [pc, #40]	; (80030f4 <HAL_TIM_Base_MspInit+0x40>)
 80030cc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80030ce:	4a09      	ldr	r2, [pc, #36]	; (80030f4 <HAL_TIM_Base_MspInit+0x40>)
 80030d0:	f043 0302 	orr.w	r3, r3, #2
 80030d4:	6413      	str	r3, [r2, #64]	; 0x40
 80030d6:	4b07      	ldr	r3, [pc, #28]	; (80030f4 <HAL_TIM_Base_MspInit+0x40>)
 80030d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80030da:	f003 0302 	and.w	r3, r3, #2
 80030de:	60fb      	str	r3, [r7, #12]
 80030e0:	68fb      	ldr	r3, [r7, #12]
 80030e2:	bf00      	nop
 80030e4:	3714      	adds	r7, #20
 80030e6:	46bd      	mov	sp, r7
 80030e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030ec:	4770      	bx	lr
 80030ee:	bf00      	nop
 80030f0:	40000400 	.word	0x40000400
 80030f4:	40023800 	.word	0x40023800

080030f8 <HAL_TIM_MspPostInit>:
 80030f8:	b580      	push	{r7, lr}
 80030fa:	b08a      	sub	sp, #40	; 0x28
 80030fc:	af00      	add	r7, sp, #0
 80030fe:	6078      	str	r0, [r7, #4]
 8003100:	f107 0314 	add.w	r3, r7, #20
 8003104:	2200      	movs	r2, #0
 8003106:	601a      	str	r2, [r3, #0]
 8003108:	605a      	str	r2, [r3, #4]
 800310a:	609a      	str	r2, [r3, #8]
 800310c:	60da      	str	r2, [r3, #12]
 800310e:	611a      	str	r2, [r3, #16]
 8003110:	687b      	ldr	r3, [r7, #4]
 8003112:	681b      	ldr	r3, [r3, #0]
 8003114:	4a21      	ldr	r2, [pc, #132]	; (800319c <HAL_TIM_MspPostInit+0xa4>)
 8003116:	4293      	cmp	r3, r2
 8003118:	d13b      	bne.n	8003192 <HAL_TIM_MspPostInit+0x9a>
 800311a:	2300      	movs	r3, #0
 800311c:	613b      	str	r3, [r7, #16]
 800311e:	4b20      	ldr	r3, [pc, #128]	; (80031a0 <HAL_TIM_MspPostInit+0xa8>)
 8003120:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003122:	4a1f      	ldr	r2, [pc, #124]	; (80031a0 <HAL_TIM_MspPostInit+0xa8>)
 8003124:	f043 0301 	orr.w	r3, r3, #1
 8003128:	6313      	str	r3, [r2, #48]	; 0x30
 800312a:	4b1d      	ldr	r3, [pc, #116]	; (80031a0 <HAL_TIM_MspPostInit+0xa8>)
 800312c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800312e:	f003 0301 	and.w	r3, r3, #1
 8003132:	613b      	str	r3, [r7, #16]
 8003134:	693b      	ldr	r3, [r7, #16]
 8003136:	2300      	movs	r3, #0
 8003138:	60fb      	str	r3, [r7, #12]
 800313a:	4b19      	ldr	r3, [pc, #100]	; (80031a0 <HAL_TIM_MspPostInit+0xa8>)
 800313c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800313e:	4a18      	ldr	r2, [pc, #96]	; (80031a0 <HAL_TIM_MspPostInit+0xa8>)
 8003140:	f043 0302 	orr.w	r3, r3, #2
 8003144:	6313      	str	r3, [r2, #48]	; 0x30
 8003146:	4b16      	ldr	r3, [pc, #88]	; (80031a0 <HAL_TIM_MspPostInit+0xa8>)
 8003148:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800314a:	f003 0302 	and.w	r3, r3, #2
 800314e:	60fb      	str	r3, [r7, #12]
 8003150:	68fb      	ldr	r3, [r7, #12]
 8003152:	23c0      	movs	r3, #192	; 0xc0
 8003154:	617b      	str	r3, [r7, #20]
 8003156:	2302      	movs	r3, #2
 8003158:	61bb      	str	r3, [r7, #24]
 800315a:	2300      	movs	r3, #0
 800315c:	61fb      	str	r3, [r7, #28]
 800315e:	2300      	movs	r3, #0
 8003160:	623b      	str	r3, [r7, #32]
 8003162:	2302      	movs	r3, #2
 8003164:	627b      	str	r3, [r7, #36]	; 0x24
 8003166:	f107 0314 	add.w	r3, r7, #20
 800316a:	4619      	mov	r1, r3
 800316c:	480d      	ldr	r0, [pc, #52]	; (80031a4 <HAL_TIM_MspPostInit+0xac>)
 800316e:	f001 f8c7 	bl	8004300 <HAL_GPIO_Init>
 8003172:	2303      	movs	r3, #3
 8003174:	617b      	str	r3, [r7, #20]
 8003176:	2302      	movs	r3, #2
 8003178:	61bb      	str	r3, [r7, #24]
 800317a:	2300      	movs	r3, #0
 800317c:	61fb      	str	r3, [r7, #28]
 800317e:	2300      	movs	r3, #0
 8003180:	623b      	str	r3, [r7, #32]
 8003182:	2302      	movs	r3, #2
 8003184:	627b      	str	r3, [r7, #36]	; 0x24
 8003186:	f107 0314 	add.w	r3, r7, #20
 800318a:	4619      	mov	r1, r3
 800318c:	4806      	ldr	r0, [pc, #24]	; (80031a8 <HAL_TIM_MspPostInit+0xb0>)
 800318e:	f001 f8b7 	bl	8004300 <HAL_GPIO_Init>
 8003192:	bf00      	nop
 8003194:	3728      	adds	r7, #40	; 0x28
 8003196:	46bd      	mov	sp, r7
 8003198:	bd80      	pop	{r7, pc}
 800319a:	bf00      	nop
 800319c:	40000400 	.word	0x40000400
 80031a0:	40023800 	.word	0x40023800
 80031a4:	40020000 	.word	0x40020000
 80031a8:	40020400 	.word	0x40020400

080031ac <MX_UART4_Init>:
 80031ac:	b580      	push	{r7, lr}
 80031ae:	af00      	add	r7, sp, #0
 80031b0:	4b11      	ldr	r3, [pc, #68]	; (80031f8 <MX_UART4_Init+0x4c>)
 80031b2:	4a12      	ldr	r2, [pc, #72]	; (80031fc <MX_UART4_Init+0x50>)
 80031b4:	601a      	str	r2, [r3, #0]
 80031b6:	4b10      	ldr	r3, [pc, #64]	; (80031f8 <MX_UART4_Init+0x4c>)
 80031b8:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80031bc:	605a      	str	r2, [r3, #4]
 80031be:	4b0e      	ldr	r3, [pc, #56]	; (80031f8 <MX_UART4_Init+0x4c>)
 80031c0:	2200      	movs	r2, #0
 80031c2:	609a      	str	r2, [r3, #8]
 80031c4:	4b0c      	ldr	r3, [pc, #48]	; (80031f8 <MX_UART4_Init+0x4c>)
 80031c6:	2200      	movs	r2, #0
 80031c8:	60da      	str	r2, [r3, #12]
 80031ca:	4b0b      	ldr	r3, [pc, #44]	; (80031f8 <MX_UART4_Init+0x4c>)
 80031cc:	2200      	movs	r2, #0
 80031ce:	611a      	str	r2, [r3, #16]
 80031d0:	4b09      	ldr	r3, [pc, #36]	; (80031f8 <MX_UART4_Init+0x4c>)
 80031d2:	220c      	movs	r2, #12
 80031d4:	615a      	str	r2, [r3, #20]
 80031d6:	4b08      	ldr	r3, [pc, #32]	; (80031f8 <MX_UART4_Init+0x4c>)
 80031d8:	2200      	movs	r2, #0
 80031da:	619a      	str	r2, [r3, #24]
 80031dc:	4b06      	ldr	r3, [pc, #24]	; (80031f8 <MX_UART4_Init+0x4c>)
 80031de:	2200      	movs	r2, #0
 80031e0:	61da      	str	r2, [r3, #28]
 80031e2:	4805      	ldr	r0, [pc, #20]	; (80031f8 <MX_UART4_Init+0x4c>)
 80031e4:	f004 f80e 	bl	8007204 <HAL_UART_Init>
 80031e8:	4603      	mov	r3, r0
 80031ea:	2b00      	cmp	r3, #0
 80031ec:	d001      	beq.n	80031f2 <MX_UART4_Init+0x46>
 80031ee:	f7ff fddd 	bl	8002dac <Error_Handler>
 80031f2:	bf00      	nop
 80031f4:	bd80      	pop	{r7, pc}
 80031f6:	bf00      	nop
 80031f8:	2000113c 	.word	0x2000113c
 80031fc:	40004c00 	.word	0x40004c00

08003200 <MX_USART1_UART_Init>:
 8003200:	b580      	push	{r7, lr}
 8003202:	af00      	add	r7, sp, #0
 8003204:	4b11      	ldr	r3, [pc, #68]	; (800324c <MX_USART1_UART_Init+0x4c>)
 8003206:	4a12      	ldr	r2, [pc, #72]	; (8003250 <MX_USART1_UART_Init+0x50>)
 8003208:	601a      	str	r2, [r3, #0]
 800320a:	4b10      	ldr	r3, [pc, #64]	; (800324c <MX_USART1_UART_Init+0x4c>)
 800320c:	f44f 3261 	mov.w	r2, #230400	; 0x38400
 8003210:	605a      	str	r2, [r3, #4]
 8003212:	4b0e      	ldr	r3, [pc, #56]	; (800324c <MX_USART1_UART_Init+0x4c>)
 8003214:	2200      	movs	r2, #0
 8003216:	609a      	str	r2, [r3, #8]
 8003218:	4b0c      	ldr	r3, [pc, #48]	; (800324c <MX_USART1_UART_Init+0x4c>)
 800321a:	2200      	movs	r2, #0
 800321c:	60da      	str	r2, [r3, #12]
 800321e:	4b0b      	ldr	r3, [pc, #44]	; (800324c <MX_USART1_UART_Init+0x4c>)
 8003220:	2200      	movs	r2, #0
 8003222:	611a      	str	r2, [r3, #16]
 8003224:	4b09      	ldr	r3, [pc, #36]	; (800324c <MX_USART1_UART_Init+0x4c>)
 8003226:	220c      	movs	r2, #12
 8003228:	615a      	str	r2, [r3, #20]
 800322a:	4b08      	ldr	r3, [pc, #32]	; (800324c <MX_USART1_UART_Init+0x4c>)
 800322c:	2200      	movs	r2, #0
 800322e:	619a      	str	r2, [r3, #24]
 8003230:	4b06      	ldr	r3, [pc, #24]	; (800324c <MX_USART1_UART_Init+0x4c>)
 8003232:	2200      	movs	r2, #0
 8003234:	61da      	str	r2, [r3, #28]
 8003236:	4805      	ldr	r0, [pc, #20]	; (800324c <MX_USART1_UART_Init+0x4c>)
 8003238:	f003 ffe4 	bl	8007204 <HAL_UART_Init>
 800323c:	4603      	mov	r3, r0
 800323e:	2b00      	cmp	r3, #0
 8003240:	d001      	beq.n	8003246 <MX_USART1_UART_Init+0x46>
 8003242:	f7ff fdb3 	bl	8002dac <Error_Handler>
 8003246:	bf00      	nop
 8003248:	bd80      	pop	{r7, pc}
 800324a:	bf00      	nop
 800324c:	200010f8 	.word	0x200010f8
 8003250:	40011000 	.word	0x40011000

08003254 <HAL_UART_MspInit>:
 8003254:	b580      	push	{r7, lr}
 8003256:	b08c      	sub	sp, #48	; 0x30
 8003258:	af00      	add	r7, sp, #0
 800325a:	6078      	str	r0, [r7, #4]
 800325c:	f107 031c 	add.w	r3, r7, #28
 8003260:	2200      	movs	r2, #0
 8003262:	601a      	str	r2, [r3, #0]
 8003264:	605a      	str	r2, [r3, #4]
 8003266:	609a      	str	r2, [r3, #8]
 8003268:	60da      	str	r2, [r3, #12]
 800326a:	611a      	str	r2, [r3, #16]
 800326c:	687b      	ldr	r3, [r7, #4]
 800326e:	681b      	ldr	r3, [r3, #0]
 8003270:	4a98      	ldr	r2, [pc, #608]	; (80034d4 <HAL_UART_MspInit+0x280>)
 8003272:	4293      	cmp	r3, r2
 8003274:	f040 8092 	bne.w	800339c <HAL_UART_MspInit+0x148>
 8003278:	2300      	movs	r3, #0
 800327a:	61bb      	str	r3, [r7, #24]
 800327c:	4b96      	ldr	r3, [pc, #600]	; (80034d8 <HAL_UART_MspInit+0x284>)
 800327e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003280:	4a95      	ldr	r2, [pc, #596]	; (80034d8 <HAL_UART_MspInit+0x284>)
 8003282:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8003286:	6413      	str	r3, [r2, #64]	; 0x40
 8003288:	4b93      	ldr	r3, [pc, #588]	; (80034d8 <HAL_UART_MspInit+0x284>)
 800328a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800328c:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8003290:	61bb      	str	r3, [r7, #24]
 8003292:	69bb      	ldr	r3, [r7, #24]
 8003294:	2300      	movs	r3, #0
 8003296:	617b      	str	r3, [r7, #20]
 8003298:	4b8f      	ldr	r3, [pc, #572]	; (80034d8 <HAL_UART_MspInit+0x284>)
 800329a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800329c:	4a8e      	ldr	r2, [pc, #568]	; (80034d8 <HAL_UART_MspInit+0x284>)
 800329e:	f043 0301 	orr.w	r3, r3, #1
 80032a2:	6313      	str	r3, [r2, #48]	; 0x30
 80032a4:	4b8c      	ldr	r3, [pc, #560]	; (80034d8 <HAL_UART_MspInit+0x284>)
 80032a6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80032a8:	f003 0301 	and.w	r3, r3, #1
 80032ac:	617b      	str	r3, [r7, #20]
 80032ae:	697b      	ldr	r3, [r7, #20]
 80032b0:	2303      	movs	r3, #3
 80032b2:	61fb      	str	r3, [r7, #28]
 80032b4:	2302      	movs	r3, #2
 80032b6:	623b      	str	r3, [r7, #32]
 80032b8:	2300      	movs	r3, #0
 80032ba:	627b      	str	r3, [r7, #36]	; 0x24
 80032bc:	2303      	movs	r3, #3
 80032be:	62bb      	str	r3, [r7, #40]	; 0x28
 80032c0:	2308      	movs	r3, #8
 80032c2:	62fb      	str	r3, [r7, #44]	; 0x2c
 80032c4:	f107 031c 	add.w	r3, r7, #28
 80032c8:	4619      	mov	r1, r3
 80032ca:	4884      	ldr	r0, [pc, #528]	; (80034dc <HAL_UART_MspInit+0x288>)
 80032cc:	f001 f818 	bl	8004300 <HAL_GPIO_Init>
 80032d0:	4b83      	ldr	r3, [pc, #524]	; (80034e0 <HAL_UART_MspInit+0x28c>)
 80032d2:	4a84      	ldr	r2, [pc, #528]	; (80034e4 <HAL_UART_MspInit+0x290>)
 80032d4:	601a      	str	r2, [r3, #0]
 80032d6:	4b82      	ldr	r3, [pc, #520]	; (80034e0 <HAL_UART_MspInit+0x28c>)
 80032d8:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80032dc:	605a      	str	r2, [r3, #4]
 80032de:	4b80      	ldr	r3, [pc, #512]	; (80034e0 <HAL_UART_MspInit+0x28c>)
 80032e0:	2200      	movs	r2, #0
 80032e2:	609a      	str	r2, [r3, #8]
 80032e4:	4b7e      	ldr	r3, [pc, #504]	; (80034e0 <HAL_UART_MspInit+0x28c>)
 80032e6:	2200      	movs	r2, #0
 80032e8:	60da      	str	r2, [r3, #12]
 80032ea:	4b7d      	ldr	r3, [pc, #500]	; (80034e0 <HAL_UART_MspInit+0x28c>)
 80032ec:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80032f0:	611a      	str	r2, [r3, #16]
 80032f2:	4b7b      	ldr	r3, [pc, #492]	; (80034e0 <HAL_UART_MspInit+0x28c>)
 80032f4:	2200      	movs	r2, #0
 80032f6:	615a      	str	r2, [r3, #20]
 80032f8:	4b79      	ldr	r3, [pc, #484]	; (80034e0 <HAL_UART_MspInit+0x28c>)
 80032fa:	2200      	movs	r2, #0
 80032fc:	619a      	str	r2, [r3, #24]
 80032fe:	4b78      	ldr	r3, [pc, #480]	; (80034e0 <HAL_UART_MspInit+0x28c>)
 8003300:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003304:	61da      	str	r2, [r3, #28]
 8003306:	4b76      	ldr	r3, [pc, #472]	; (80034e0 <HAL_UART_MspInit+0x28c>)
 8003308:	2200      	movs	r2, #0
 800330a:	621a      	str	r2, [r3, #32]
 800330c:	4b74      	ldr	r3, [pc, #464]	; (80034e0 <HAL_UART_MspInit+0x28c>)
 800330e:	2200      	movs	r2, #0
 8003310:	625a      	str	r2, [r3, #36]	; 0x24
 8003312:	4873      	ldr	r0, [pc, #460]	; (80034e0 <HAL_UART_MspInit+0x28c>)
 8003314:	f000 fbe6 	bl	8003ae4 <HAL_DMA_Init>
 8003318:	4603      	mov	r3, r0
 800331a:	2b00      	cmp	r3, #0
 800331c:	d001      	beq.n	8003322 <HAL_UART_MspInit+0xce>
 800331e:	f7ff fd45 	bl	8002dac <Error_Handler>
 8003322:	687b      	ldr	r3, [r7, #4]
 8003324:	4a6e      	ldr	r2, [pc, #440]	; (80034e0 <HAL_UART_MspInit+0x28c>)
 8003326:	639a      	str	r2, [r3, #56]	; 0x38
 8003328:	4a6d      	ldr	r2, [pc, #436]	; (80034e0 <HAL_UART_MspInit+0x28c>)
 800332a:	687b      	ldr	r3, [r7, #4]
 800332c:	6393      	str	r3, [r2, #56]	; 0x38
 800332e:	4b6e      	ldr	r3, [pc, #440]	; (80034e8 <HAL_UART_MspInit+0x294>)
 8003330:	4a6e      	ldr	r2, [pc, #440]	; (80034ec <HAL_UART_MspInit+0x298>)
 8003332:	601a      	str	r2, [r3, #0]
 8003334:	4b6c      	ldr	r3, [pc, #432]	; (80034e8 <HAL_UART_MspInit+0x294>)
 8003336:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800333a:	605a      	str	r2, [r3, #4]
 800333c:	4b6a      	ldr	r3, [pc, #424]	; (80034e8 <HAL_UART_MspInit+0x294>)
 800333e:	2240      	movs	r2, #64	; 0x40
 8003340:	609a      	str	r2, [r3, #8]
 8003342:	4b69      	ldr	r3, [pc, #420]	; (80034e8 <HAL_UART_MspInit+0x294>)
 8003344:	2200      	movs	r2, #0
 8003346:	60da      	str	r2, [r3, #12]
 8003348:	4b67      	ldr	r3, [pc, #412]	; (80034e8 <HAL_UART_MspInit+0x294>)
 800334a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800334e:	611a      	str	r2, [r3, #16]
 8003350:	4b65      	ldr	r3, [pc, #404]	; (80034e8 <HAL_UART_MspInit+0x294>)
 8003352:	2200      	movs	r2, #0
 8003354:	615a      	str	r2, [r3, #20]
 8003356:	4b64      	ldr	r3, [pc, #400]	; (80034e8 <HAL_UART_MspInit+0x294>)
 8003358:	2200      	movs	r2, #0
 800335a:	619a      	str	r2, [r3, #24]
 800335c:	4b62      	ldr	r3, [pc, #392]	; (80034e8 <HAL_UART_MspInit+0x294>)
 800335e:	2200      	movs	r2, #0
 8003360:	61da      	str	r2, [r3, #28]
 8003362:	4b61      	ldr	r3, [pc, #388]	; (80034e8 <HAL_UART_MspInit+0x294>)
 8003364:	2200      	movs	r2, #0
 8003366:	621a      	str	r2, [r3, #32]
 8003368:	4b5f      	ldr	r3, [pc, #380]	; (80034e8 <HAL_UART_MspInit+0x294>)
 800336a:	2200      	movs	r2, #0
 800336c:	625a      	str	r2, [r3, #36]	; 0x24
 800336e:	485e      	ldr	r0, [pc, #376]	; (80034e8 <HAL_UART_MspInit+0x294>)
 8003370:	f000 fbb8 	bl	8003ae4 <HAL_DMA_Init>
 8003374:	4603      	mov	r3, r0
 8003376:	2b00      	cmp	r3, #0
 8003378:	d001      	beq.n	800337e <HAL_UART_MspInit+0x12a>
 800337a:	f7ff fd17 	bl	8002dac <Error_Handler>
 800337e:	687b      	ldr	r3, [r7, #4]
 8003380:	4a59      	ldr	r2, [pc, #356]	; (80034e8 <HAL_UART_MspInit+0x294>)
 8003382:	635a      	str	r2, [r3, #52]	; 0x34
 8003384:	4a58      	ldr	r2, [pc, #352]	; (80034e8 <HAL_UART_MspInit+0x294>)
 8003386:	687b      	ldr	r3, [r7, #4]
 8003388:	6393      	str	r3, [r2, #56]	; 0x38
 800338a:	2200      	movs	r2, #0
 800338c:	2100      	movs	r1, #0
 800338e:	2034      	movs	r0, #52	; 0x34
 8003390:	f000 fb71 	bl	8003a76 <HAL_NVIC_SetPriority>
 8003394:	2034      	movs	r0, #52	; 0x34
 8003396:	f000 fb8a 	bl	8003aae <HAL_NVIC_EnableIRQ>
 800339a:	e096      	b.n	80034ca <HAL_UART_MspInit+0x276>
 800339c:	687b      	ldr	r3, [r7, #4]
 800339e:	681b      	ldr	r3, [r3, #0]
 80033a0:	4a53      	ldr	r2, [pc, #332]	; (80034f0 <HAL_UART_MspInit+0x29c>)
 80033a2:	4293      	cmp	r3, r2
 80033a4:	f040 8091 	bne.w	80034ca <HAL_UART_MspInit+0x276>
 80033a8:	2300      	movs	r3, #0
 80033aa:	613b      	str	r3, [r7, #16]
 80033ac:	4b4a      	ldr	r3, [pc, #296]	; (80034d8 <HAL_UART_MspInit+0x284>)
 80033ae:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80033b0:	4a49      	ldr	r2, [pc, #292]	; (80034d8 <HAL_UART_MspInit+0x284>)
 80033b2:	f043 0310 	orr.w	r3, r3, #16
 80033b6:	6453      	str	r3, [r2, #68]	; 0x44
 80033b8:	4b47      	ldr	r3, [pc, #284]	; (80034d8 <HAL_UART_MspInit+0x284>)
 80033ba:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80033bc:	f003 0310 	and.w	r3, r3, #16
 80033c0:	613b      	str	r3, [r7, #16]
 80033c2:	693b      	ldr	r3, [r7, #16]
 80033c4:	2300      	movs	r3, #0
 80033c6:	60fb      	str	r3, [r7, #12]
 80033c8:	4b43      	ldr	r3, [pc, #268]	; (80034d8 <HAL_UART_MspInit+0x284>)
 80033ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80033cc:	4a42      	ldr	r2, [pc, #264]	; (80034d8 <HAL_UART_MspInit+0x284>)
 80033ce:	f043 0302 	orr.w	r3, r3, #2
 80033d2:	6313      	str	r3, [r2, #48]	; 0x30
 80033d4:	4b40      	ldr	r3, [pc, #256]	; (80034d8 <HAL_UART_MspInit+0x284>)
 80033d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80033d8:	f003 0302 	and.w	r3, r3, #2
 80033dc:	60fb      	str	r3, [r7, #12]
 80033de:	68fb      	ldr	r3, [r7, #12]
 80033e0:	23c0      	movs	r3, #192	; 0xc0
 80033e2:	61fb      	str	r3, [r7, #28]
 80033e4:	2302      	movs	r3, #2
 80033e6:	623b      	str	r3, [r7, #32]
 80033e8:	2300      	movs	r3, #0
 80033ea:	627b      	str	r3, [r7, #36]	; 0x24
 80033ec:	2303      	movs	r3, #3
 80033ee:	62bb      	str	r3, [r7, #40]	; 0x28
 80033f0:	2307      	movs	r3, #7
 80033f2:	62fb      	str	r3, [r7, #44]	; 0x2c
 80033f4:	f107 031c 	add.w	r3, r7, #28
 80033f8:	4619      	mov	r1, r3
 80033fa:	483e      	ldr	r0, [pc, #248]	; (80034f4 <HAL_UART_MspInit+0x2a0>)
 80033fc:	f000 ff80 	bl	8004300 <HAL_GPIO_Init>
 8003400:	4b3d      	ldr	r3, [pc, #244]	; (80034f8 <HAL_UART_MspInit+0x2a4>)
 8003402:	4a3e      	ldr	r2, [pc, #248]	; (80034fc <HAL_UART_MspInit+0x2a8>)
 8003404:	601a      	str	r2, [r3, #0]
 8003406:	4b3c      	ldr	r3, [pc, #240]	; (80034f8 <HAL_UART_MspInit+0x2a4>)
 8003408:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800340c:	605a      	str	r2, [r3, #4]
 800340e:	4b3a      	ldr	r3, [pc, #232]	; (80034f8 <HAL_UART_MspInit+0x2a4>)
 8003410:	2200      	movs	r2, #0
 8003412:	609a      	str	r2, [r3, #8]
 8003414:	4b38      	ldr	r3, [pc, #224]	; (80034f8 <HAL_UART_MspInit+0x2a4>)
 8003416:	2200      	movs	r2, #0
 8003418:	60da      	str	r2, [r3, #12]
 800341a:	4b37      	ldr	r3, [pc, #220]	; (80034f8 <HAL_UART_MspInit+0x2a4>)
 800341c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8003420:	611a      	str	r2, [r3, #16]
 8003422:	4b35      	ldr	r3, [pc, #212]	; (80034f8 <HAL_UART_MspInit+0x2a4>)
 8003424:	2200      	movs	r2, #0
 8003426:	615a      	str	r2, [r3, #20]
 8003428:	4b33      	ldr	r3, [pc, #204]	; (80034f8 <HAL_UART_MspInit+0x2a4>)
 800342a:	2200      	movs	r2, #0
 800342c:	619a      	str	r2, [r3, #24]
 800342e:	4b32      	ldr	r3, [pc, #200]	; (80034f8 <HAL_UART_MspInit+0x2a4>)
 8003430:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003434:	61da      	str	r2, [r3, #28]
 8003436:	4b30      	ldr	r3, [pc, #192]	; (80034f8 <HAL_UART_MspInit+0x2a4>)
 8003438:	2200      	movs	r2, #0
 800343a:	621a      	str	r2, [r3, #32]
 800343c:	4b2e      	ldr	r3, [pc, #184]	; (80034f8 <HAL_UART_MspInit+0x2a4>)
 800343e:	2200      	movs	r2, #0
 8003440:	625a      	str	r2, [r3, #36]	; 0x24
 8003442:	482d      	ldr	r0, [pc, #180]	; (80034f8 <HAL_UART_MspInit+0x2a4>)
 8003444:	f000 fb4e 	bl	8003ae4 <HAL_DMA_Init>
 8003448:	4603      	mov	r3, r0
 800344a:	2b00      	cmp	r3, #0
 800344c:	d001      	beq.n	8003452 <HAL_UART_MspInit+0x1fe>
 800344e:	f7ff fcad 	bl	8002dac <Error_Handler>
 8003452:	687b      	ldr	r3, [r7, #4]
 8003454:	4a28      	ldr	r2, [pc, #160]	; (80034f8 <HAL_UART_MspInit+0x2a4>)
 8003456:	639a      	str	r2, [r3, #56]	; 0x38
 8003458:	4a27      	ldr	r2, [pc, #156]	; (80034f8 <HAL_UART_MspInit+0x2a4>)
 800345a:	687b      	ldr	r3, [r7, #4]
 800345c:	6393      	str	r3, [r2, #56]	; 0x38
 800345e:	4b28      	ldr	r3, [pc, #160]	; (8003500 <HAL_UART_MspInit+0x2ac>)
 8003460:	4a28      	ldr	r2, [pc, #160]	; (8003504 <HAL_UART_MspInit+0x2b0>)
 8003462:	601a      	str	r2, [r3, #0]
 8003464:	4b26      	ldr	r3, [pc, #152]	; (8003500 <HAL_UART_MspInit+0x2ac>)
 8003466:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800346a:	605a      	str	r2, [r3, #4]
 800346c:	4b24      	ldr	r3, [pc, #144]	; (8003500 <HAL_UART_MspInit+0x2ac>)
 800346e:	2240      	movs	r2, #64	; 0x40
 8003470:	609a      	str	r2, [r3, #8]
 8003472:	4b23      	ldr	r3, [pc, #140]	; (8003500 <HAL_UART_MspInit+0x2ac>)
 8003474:	2200      	movs	r2, #0
 8003476:	60da      	str	r2, [r3, #12]
 8003478:	4b21      	ldr	r3, [pc, #132]	; (8003500 <HAL_UART_MspInit+0x2ac>)
 800347a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800347e:	611a      	str	r2, [r3, #16]
 8003480:	4b1f      	ldr	r3, [pc, #124]	; (8003500 <HAL_UART_MspInit+0x2ac>)
 8003482:	2200      	movs	r2, #0
 8003484:	615a      	str	r2, [r3, #20]
 8003486:	4b1e      	ldr	r3, [pc, #120]	; (8003500 <HAL_UART_MspInit+0x2ac>)
 8003488:	2200      	movs	r2, #0
 800348a:	619a      	str	r2, [r3, #24]
 800348c:	4b1c      	ldr	r3, [pc, #112]	; (8003500 <HAL_UART_MspInit+0x2ac>)
 800348e:	2200      	movs	r2, #0
 8003490:	61da      	str	r2, [r3, #28]
 8003492:	4b1b      	ldr	r3, [pc, #108]	; (8003500 <HAL_UART_MspInit+0x2ac>)
 8003494:	2200      	movs	r2, #0
 8003496:	621a      	str	r2, [r3, #32]
 8003498:	4b19      	ldr	r3, [pc, #100]	; (8003500 <HAL_UART_MspInit+0x2ac>)
 800349a:	2200      	movs	r2, #0
 800349c:	625a      	str	r2, [r3, #36]	; 0x24
 800349e:	4818      	ldr	r0, [pc, #96]	; (8003500 <HAL_UART_MspInit+0x2ac>)
 80034a0:	f000 fb20 	bl	8003ae4 <HAL_DMA_Init>
 80034a4:	4603      	mov	r3, r0
 80034a6:	2b00      	cmp	r3, #0
 80034a8:	d001      	beq.n	80034ae <HAL_UART_MspInit+0x25a>
 80034aa:	f7ff fc7f 	bl	8002dac <Error_Handler>
 80034ae:	687b      	ldr	r3, [r7, #4]
 80034b0:	4a13      	ldr	r2, [pc, #76]	; (8003500 <HAL_UART_MspInit+0x2ac>)
 80034b2:	635a      	str	r2, [r3, #52]	; 0x34
 80034b4:	4a12      	ldr	r2, [pc, #72]	; (8003500 <HAL_UART_MspInit+0x2ac>)
 80034b6:	687b      	ldr	r3, [r7, #4]
 80034b8:	6393      	str	r3, [r2, #56]	; 0x38
 80034ba:	2200      	movs	r2, #0
 80034bc:	2100      	movs	r1, #0
 80034be:	2025      	movs	r0, #37	; 0x25
 80034c0:	f000 fad9 	bl	8003a76 <HAL_NVIC_SetPriority>
 80034c4:	2025      	movs	r0, #37	; 0x25
 80034c6:	f000 faf2 	bl	8003aae <HAL_NVIC_EnableIRQ>
 80034ca:	bf00      	nop
 80034cc:	3730      	adds	r7, #48	; 0x30
 80034ce:	46bd      	mov	sp, r7
 80034d0:	bd80      	pop	{r7, pc}
 80034d2:	bf00      	nop
 80034d4:	40004c00 	.word	0x40004c00
 80034d8:	40023800 	.word	0x40023800
 80034dc:	40020000 	.word	0x40020000
 80034e0:	20000fd8 	.word	0x20000fd8
 80034e4:	40026040 	.word	0x40026040
 80034e8:	20001180 	.word	0x20001180
 80034ec:	40026070 	.word	0x40026070
 80034f0:	40011000 	.word	0x40011000
 80034f4:	40020400 	.word	0x40020400
 80034f8:	20001098 	.word	0x20001098
 80034fc:	40026440 	.word	0x40026440
 8003500:	20001038 	.word	0x20001038
 8003504:	400264b8 	.word	0x400264b8

08003508 <Reset_Handler>:
 8003508:	f8df d034 	ldr.w	sp, [pc, #52]	; 8003540 <LoopFillZerobss+0x12>
 800350c:	480d      	ldr	r0, [pc, #52]	; (8003544 <LoopFillZerobss+0x16>)
 800350e:	490e      	ldr	r1, [pc, #56]	; (8003548 <LoopFillZerobss+0x1a>)
 8003510:	4a0e      	ldr	r2, [pc, #56]	; (800354c <LoopFillZerobss+0x1e>)
 8003512:	2300      	movs	r3, #0
 8003514:	e002      	b.n	800351c <LoopCopyDataInit>

08003516 <CopyDataInit>:
 8003516:	58d4      	ldr	r4, [r2, r3]
 8003518:	50c4      	str	r4, [r0, r3]
 800351a:	3304      	adds	r3, #4

0800351c <LoopCopyDataInit>:
 800351c:	18c4      	adds	r4, r0, r3
 800351e:	428c      	cmp	r4, r1
 8003520:	d3f9      	bcc.n	8003516 <CopyDataInit>
 8003522:	4a0b      	ldr	r2, [pc, #44]	; (8003550 <LoopFillZerobss+0x22>)
 8003524:	4c0b      	ldr	r4, [pc, #44]	; (8003554 <LoopFillZerobss+0x26>)
 8003526:	2300      	movs	r3, #0
 8003528:	e001      	b.n	800352e <LoopFillZerobss>

0800352a <FillZerobss>:
 800352a:	6013      	str	r3, [r2, #0]
 800352c:	3204      	adds	r2, #4

0800352e <LoopFillZerobss>:
 800352e:	42a2      	cmp	r2, r4
 8003530:	d3fb      	bcc.n	800352a <FillZerobss>
 8003532:	f7ff fd15 	bl	8002f60 <SystemInit>
 8003536:	f004 ffa1 	bl	800847c <__libc_init_array>
 800353a:	f7ff fb41 	bl	8002bc0 <main>
 800353e:	4770      	bx	lr
 8003540:	20020000 	.word	0x20020000
 8003544:	20000000 	.word	0x20000000
 8003548:	20000158 	.word	0x20000158
 800354c:	08009750 	.word	0x08009750
 8003550:	20000158 	.word	0x20000158
 8003554:	200011e4 	.word	0x200011e4

08003558 <ADC_IRQHandler>:
 8003558:	e7fe      	b.n	8003558 <ADC_IRQHandler>
	...

0800355c <TASK_MANAGER_Init>:
static task_t task[MAX_NUMBER_OF_TASK] = { 0 };
static bool_e is_initialized = FALSE;
static uint8_t task_count = 0;

void TASK_MANAGER_Init(void)
{
 800355c:	b580      	push	{r7, lr}
 800355e:	b082      	sub	sp, #8
 8003560:	af00      	add	r7, sp, #0
	for(uint8_t t = 0; t < task_count; t++)
 8003562:	2300      	movs	r3, #0
 8003564:	71fb      	strb	r3, [r7, #7]
 8003566:	e017      	b.n	8003598 <TASK_MANAGER_Init+0x3c>
	{
		if(task[t].init.call)
 8003568:	79fa      	ldrb	r2, [r7, #7]
 800356a:	4911      	ldr	r1, [pc, #68]	; (80035b0 <TASK_MANAGER_Init+0x54>)
 800356c:	4613      	mov	r3, r2
 800356e:	00db      	lsls	r3, r3, #3
 8003570:	4413      	add	r3, r2
 8003572:	00db      	lsls	r3, r3, #3
 8003574:	440b      	add	r3, r1
 8003576:	3308      	adds	r3, #8
 8003578:	681b      	ldr	r3, [r3, #0]
 800357a:	2b00      	cmp	r3, #0
 800357c:	d009      	beq.n	8003592 <TASK_MANAGER_Init+0x36>
		{
			task[t].init.call();
 800357e:	79fa      	ldrb	r2, [r7, #7]
 8003580:	490b      	ldr	r1, [pc, #44]	; (80035b0 <TASK_MANAGER_Init+0x54>)
 8003582:	4613      	mov	r3, r2
 8003584:	00db      	lsls	r3, r3, #3
 8003586:	4413      	add	r3, r2
 8003588:	00db      	lsls	r3, r3, #3
 800358a:	440b      	add	r3, r1
 800358c:	3308      	adds	r3, #8
 800358e:	681b      	ldr	r3, [r3, #0]
 8003590:	4798      	blx	r3
	for(uint8_t t = 0; t < task_count; t++)
 8003592:	79fb      	ldrb	r3, [r7, #7]
 8003594:	3301      	adds	r3, #1
 8003596:	71fb      	strb	r3, [r7, #7]
 8003598:	4b06      	ldr	r3, [pc, #24]	; (80035b4 <TASK_MANAGER_Init+0x58>)
 800359a:	781b      	ldrb	r3, [r3, #0]
 800359c:	79fa      	ldrb	r2, [r7, #7]
 800359e:	429a      	cmp	r2, r3
 80035a0:	d3e2      	bcc.n	8003568 <TASK_MANAGER_Init+0xc>
		}
	}
	is_initialized = TRUE;
 80035a2:	4b05      	ldr	r3, [pc, #20]	; (80035b8 <TASK_MANAGER_Init+0x5c>)
 80035a4:	2201      	movs	r2, #1
 80035a6:	701a      	strb	r2, [r3, #0]
}
 80035a8:	bf00      	nop
 80035aa:	3708      	adds	r7, #8
 80035ac:	46bd      	mov	sp, r7
 80035ae:	bd80      	pop	{r7, pc}
 80035b0:	20000ba8 	.word	0x20000ba8
 80035b4:	20000e79 	.word	0x20000e79
 80035b8:	20000e78 	.word	0x20000e78

080035bc <TASK_MANAGER_Main>:


void TASK_MANAGER_Main(void)
{
 80035bc:	b580      	push	{r7, lr}
 80035be:	b082      	sub	sp, #8
 80035c0:	af00      	add	r7, sp, #0
	for(uint8_t t = 0; t < task_count; t++)
 80035c2:	2300      	movs	r3, #0
 80035c4:	71fb      	strb	r3, [r7, #7]
 80035c6:	e017      	b.n	80035f8 <TASK_MANAGER_Main+0x3c>
	{
		if(task[t].main.call)
 80035c8:	79fa      	ldrb	r2, [r7, #7]
 80035ca:	4910      	ldr	r1, [pc, #64]	; (800360c <TASK_MANAGER_Main+0x50>)
 80035cc:	4613      	mov	r3, r2
 80035ce:	00db      	lsls	r3, r3, #3
 80035d0:	4413      	add	r3, r2
 80035d2:	00db      	lsls	r3, r3, #3
 80035d4:	440b      	add	r3, r1
 80035d6:	3318      	adds	r3, #24
 80035d8:	681b      	ldr	r3, [r3, #0]
 80035da:	2b00      	cmp	r3, #0
 80035dc:	d009      	beq.n	80035f2 <TASK_MANAGER_Main+0x36>
		{
			task[t].main.call();
 80035de:	79fa      	ldrb	r2, [r7, #7]
 80035e0:	490a      	ldr	r1, [pc, #40]	; (800360c <TASK_MANAGER_Main+0x50>)
 80035e2:	4613      	mov	r3, r2
 80035e4:	00db      	lsls	r3, r3, #3
 80035e6:	4413      	add	r3, r2
 80035e8:	00db      	lsls	r3, r3, #3
 80035ea:	440b      	add	r3, r1
 80035ec:	3318      	adds	r3, #24
 80035ee:	681b      	ldr	r3, [r3, #0]
 80035f0:	4798      	blx	r3
	for(uint8_t t = 0; t < task_count; t++)
 80035f2:	79fb      	ldrb	r3, [r7, #7]
 80035f4:	3301      	adds	r3, #1
 80035f6:	71fb      	strb	r3, [r7, #7]
 80035f8:	4b05      	ldr	r3, [pc, #20]	; (8003610 <TASK_MANAGER_Main+0x54>)
 80035fa:	781b      	ldrb	r3, [r3, #0]
 80035fc:	79fa      	ldrb	r2, [r7, #7]
 80035fe:	429a      	cmp	r2, r3
 8003600:	d3e2      	bcc.n	80035c8 <TASK_MANAGER_Main+0xc>
		}
	}
}
 8003602:	bf00      	nop
 8003604:	bf00      	nop
 8003606:	3708      	adds	r7, #8
 8003608:	46bd      	mov	sp, r7
 800360a:	bd80      	pop	{r7, pc}
 800360c:	20000ba8 	.word	0x20000ba8
 8003610:	20000e79 	.word	0x20000e79

08003614 <TASK_MANAGER_It_ms>:

void TASK_MANAGER_It_ms(void)
{
 8003614:	b580      	push	{r7, lr}
 8003616:	b082      	sub	sp, #8
 8003618:	af00      	add	r7, sp, #0
	if(!is_initialized)
 800361a:	4b14      	ldr	r3, [pc, #80]	; (800366c <TASK_MANAGER_It_ms+0x58>)
 800361c:	781b      	ldrb	r3, [r3, #0]
 800361e:	2b00      	cmp	r3, #0
 8003620:	d020      	beq.n	8003664 <TASK_MANAGER_It_ms+0x50>
	{
		return;
	}
	for(uint8_t t = 0; t < task_count; t++)
 8003622:	2300      	movs	r3, #0
 8003624:	71fb      	strb	r3, [r7, #7]
 8003626:	e017      	b.n	8003658 <TASK_MANAGER_It_ms+0x44>
	{
		if(task[t].it.call)
 8003628:	79fa      	ldrb	r2, [r7, #7]
 800362a:	4911      	ldr	r1, [pc, #68]	; (8003670 <TASK_MANAGER_It_ms+0x5c>)
 800362c:	4613      	mov	r3, r2
 800362e:	00db      	lsls	r3, r3, #3
 8003630:	4413      	add	r3, r2
 8003632:	00db      	lsls	r3, r3, #3
 8003634:	440b      	add	r3, r1
 8003636:	3328      	adds	r3, #40	; 0x28
 8003638:	681b      	ldr	r3, [r3, #0]
 800363a:	2b00      	cmp	r3, #0
 800363c:	d009      	beq.n	8003652 <TASK_MANAGER_It_ms+0x3e>
		{
			task[t].it.call();
 800363e:	79fa      	ldrb	r2, [r7, #7]
 8003640:	490b      	ldr	r1, [pc, #44]	; (8003670 <TASK_MANAGER_It_ms+0x5c>)
 8003642:	4613      	mov	r3, r2
 8003644:	00db      	lsls	r3, r3, #3
 8003646:	4413      	add	r3, r2
 8003648:	00db      	lsls	r3, r3, #3
 800364a:	440b      	add	r3, r1
 800364c:	3328      	adds	r3, #40	; 0x28
 800364e:	681b      	ldr	r3, [r3, #0]
 8003650:	4798      	blx	r3
	for(uint8_t t = 0; t < task_count; t++)
 8003652:	79fb      	ldrb	r3, [r7, #7]
 8003654:	3301      	adds	r3, #1
 8003656:	71fb      	strb	r3, [r7, #7]
 8003658:	4b06      	ldr	r3, [pc, #24]	; (8003674 <TASK_MANAGER_It_ms+0x60>)
 800365a:	781b      	ldrb	r3, [r3, #0]
 800365c:	79fa      	ldrb	r2, [r7, #7]
 800365e:	429a      	cmp	r2, r3
 8003660:	d3e2      	bcc.n	8003628 <TASK_MANAGER_It_ms+0x14>
 8003662:	e000      	b.n	8003666 <TASK_MANAGER_It_ms+0x52>
		return;
 8003664:	bf00      	nop
		}
	}
}
 8003666:	3708      	adds	r7, #8
 8003668:	46bd      	mov	sp, r7
 800366a:	bd80      	pop	{r7, pc}
 800366c:	20000e78 	.word	0x20000e78
 8003670:	20000ba8 	.word	0x20000ba8
 8003674:	20000e79 	.word	0x20000e79

08003678 <TASK_MANAGER_Gyro_Data_Ready>:

void TASK_MANAGER_Gyro_Data_Ready(void)
{
 8003678:	b580      	push	{r7, lr}
 800367a:	b082      	sub	sp, #8
 800367c:	af00      	add	r7, sp, #0
	for(uint8_t t = 0; t < task_count; t++)
 800367e:	2300      	movs	r3, #0
 8003680:	71fb      	strb	r3, [r7, #7]
 8003682:	e017      	b.n	80036b4 <TASK_MANAGER_Gyro_Data_Ready+0x3c>
	{
		if(task[t].gyro_data_ready.call)
 8003684:	79fa      	ldrb	r2, [r7, #7]
 8003686:	4910      	ldr	r1, [pc, #64]	; (80036c8 <TASK_MANAGER_Gyro_Data_Ready+0x50>)
 8003688:	4613      	mov	r3, r2
 800368a:	00db      	lsls	r3, r3, #3
 800368c:	4413      	add	r3, r2
 800368e:	00db      	lsls	r3, r3, #3
 8003690:	440b      	add	r3, r1
 8003692:	3338      	adds	r3, #56	; 0x38
 8003694:	681b      	ldr	r3, [r3, #0]
 8003696:	2b00      	cmp	r3, #0
 8003698:	d009      	beq.n	80036ae <TASK_MANAGER_Gyro_Data_Ready+0x36>
		{
			task[t].gyro_data_ready.call();
 800369a:	79fa      	ldrb	r2, [r7, #7]
 800369c:	490a      	ldr	r1, [pc, #40]	; (80036c8 <TASK_MANAGER_Gyro_Data_Ready+0x50>)
 800369e:	4613      	mov	r3, r2
 80036a0:	00db      	lsls	r3, r3, #3
 80036a2:	4413      	add	r3, r2
 80036a4:	00db      	lsls	r3, r3, #3
 80036a6:	440b      	add	r3, r1
 80036a8:	3338      	adds	r3, #56	; 0x38
 80036aa:	681b      	ldr	r3, [r3, #0]
 80036ac:	4798      	blx	r3
	for(uint8_t t = 0; t < task_count; t++)
 80036ae:	79fb      	ldrb	r3, [r7, #7]
 80036b0:	3301      	adds	r3, #1
 80036b2:	71fb      	strb	r3, [r7, #7]
 80036b4:	4b05      	ldr	r3, [pc, #20]	; (80036cc <TASK_MANAGER_Gyro_Data_Ready+0x54>)
 80036b6:	781b      	ldrb	r3, [r3, #0]
 80036b8:	79fa      	ldrb	r2, [r7, #7]
 80036ba:	429a      	cmp	r2, r3
 80036bc:	d3e2      	bcc.n	8003684 <TASK_MANAGER_Gyro_Data_Ready+0xc>
		}
	}
}
 80036be:	bf00      	nop
 80036c0:	bf00      	nop
 80036c2:	3708      	adds	r7, #8
 80036c4:	46bd      	mov	sp, r7
 80036c6:	bd80      	pop	{r7, pc}
 80036c8:	20000ba8 	.word	0x20000ba8
 80036cc:	20000e79 	.word	0x20000e79

080036d0 <TASK_MANAGER_Add_Task>:

void TASK_MANAGER_Add_Task(char * name, void(*init)(void), void(*main)(void), void(*it)(void), void(*gyro)(void))
{
 80036d0:	b480      	push	{r7}
 80036d2:	b085      	sub	sp, #20
 80036d4:	af00      	add	r7, sp, #0
 80036d6:	60f8      	str	r0, [r7, #12]
 80036d8:	60b9      	str	r1, [r7, #8]
 80036da:	607a      	str	r2, [r7, #4]
 80036dc:	603b      	str	r3, [r7, #0]
	if(task_count == MAX_NUMBER_OF_TASK)
 80036de:	4b2b      	ldr	r3, [pc, #172]	; (800378c <TASK_MANAGER_Add_Task+0xbc>)
 80036e0:	781b      	ldrb	r3, [r3, #0]
 80036e2:	2b0a      	cmp	r3, #10
 80036e4:	d04b      	beq.n	800377e <TASK_MANAGER_Add_Task+0xae>
	{
		return;
	}
	task[task_count].name = name;
 80036e6:	4b29      	ldr	r3, [pc, #164]	; (800378c <TASK_MANAGER_Add_Task+0xbc>)
 80036e8:	781b      	ldrb	r3, [r3, #0]
 80036ea:	4619      	mov	r1, r3
 80036ec:	4a28      	ldr	r2, [pc, #160]	; (8003790 <TASK_MANAGER_Add_Task+0xc0>)
 80036ee:	460b      	mov	r3, r1
 80036f0:	00db      	lsls	r3, r3, #3
 80036f2:	440b      	add	r3, r1
 80036f4:	00db      	lsls	r3, r3, #3
 80036f6:	4413      	add	r3, r2
 80036f8:	68fa      	ldr	r2, [r7, #12]
 80036fa:	601a      	str	r2, [r3, #0]
	task[task_count].name_len = sizeof(name) - 1;
 80036fc:	4b23      	ldr	r3, [pc, #140]	; (800378c <TASK_MANAGER_Add_Task+0xbc>)
 80036fe:	781b      	ldrb	r3, [r3, #0]
 8003700:	4619      	mov	r1, r3
 8003702:	4a23      	ldr	r2, [pc, #140]	; (8003790 <TASK_MANAGER_Add_Task+0xc0>)
 8003704:	460b      	mov	r3, r1
 8003706:	00db      	lsls	r3, r3, #3
 8003708:	440b      	add	r3, r1
 800370a:	00db      	lsls	r3, r3, #3
 800370c:	4413      	add	r3, r2
 800370e:	3304      	adds	r3, #4
 8003710:	2203      	movs	r2, #3
 8003712:	701a      	strb	r2, [r3, #0]
	task[task_count].init.call = init;
 8003714:	4b1d      	ldr	r3, [pc, #116]	; (800378c <TASK_MANAGER_Add_Task+0xbc>)
 8003716:	781b      	ldrb	r3, [r3, #0]
 8003718:	4619      	mov	r1, r3
 800371a:	4a1d      	ldr	r2, [pc, #116]	; (8003790 <TASK_MANAGER_Add_Task+0xc0>)
 800371c:	460b      	mov	r3, r1
 800371e:	00db      	lsls	r3, r3, #3
 8003720:	440b      	add	r3, r1
 8003722:	00db      	lsls	r3, r3, #3
 8003724:	4413      	add	r3, r2
 8003726:	3308      	adds	r3, #8
 8003728:	68ba      	ldr	r2, [r7, #8]
 800372a:	601a      	str	r2, [r3, #0]
	task[task_count].main.call = main;
 800372c:	4b17      	ldr	r3, [pc, #92]	; (800378c <TASK_MANAGER_Add_Task+0xbc>)
 800372e:	781b      	ldrb	r3, [r3, #0]
 8003730:	4619      	mov	r1, r3
 8003732:	4a17      	ldr	r2, [pc, #92]	; (8003790 <TASK_MANAGER_Add_Task+0xc0>)
 8003734:	460b      	mov	r3, r1
 8003736:	00db      	lsls	r3, r3, #3
 8003738:	440b      	add	r3, r1
 800373a:	00db      	lsls	r3, r3, #3
 800373c:	4413      	add	r3, r2
 800373e:	3318      	adds	r3, #24
 8003740:	687a      	ldr	r2, [r7, #4]
 8003742:	601a      	str	r2, [r3, #0]
	task[task_count].it.call = it;
 8003744:	4b11      	ldr	r3, [pc, #68]	; (800378c <TASK_MANAGER_Add_Task+0xbc>)
 8003746:	781b      	ldrb	r3, [r3, #0]
 8003748:	4619      	mov	r1, r3
 800374a:	4a11      	ldr	r2, [pc, #68]	; (8003790 <TASK_MANAGER_Add_Task+0xc0>)
 800374c:	460b      	mov	r3, r1
 800374e:	00db      	lsls	r3, r3, #3
 8003750:	440b      	add	r3, r1
 8003752:	00db      	lsls	r3, r3, #3
 8003754:	4413      	add	r3, r2
 8003756:	3328      	adds	r3, #40	; 0x28
 8003758:	683a      	ldr	r2, [r7, #0]
 800375a:	601a      	str	r2, [r3, #0]
	task[task_count++].gyro_data_ready.call = gyro;
 800375c:	4b0b      	ldr	r3, [pc, #44]	; (800378c <TASK_MANAGER_Add_Task+0xbc>)
 800375e:	781b      	ldrb	r3, [r3, #0]
 8003760:	1c5a      	adds	r2, r3, #1
 8003762:	b2d1      	uxtb	r1, r2
 8003764:	4a09      	ldr	r2, [pc, #36]	; (800378c <TASK_MANAGER_Add_Task+0xbc>)
 8003766:	7011      	strb	r1, [r2, #0]
 8003768:	4619      	mov	r1, r3
 800376a:	4a09      	ldr	r2, [pc, #36]	; (8003790 <TASK_MANAGER_Add_Task+0xc0>)
 800376c:	460b      	mov	r3, r1
 800376e:	00db      	lsls	r3, r3, #3
 8003770:	440b      	add	r3, r1
 8003772:	00db      	lsls	r3, r3, #3
 8003774:	4413      	add	r3, r2
 8003776:	3338      	adds	r3, #56	; 0x38
 8003778:	69ba      	ldr	r2, [r7, #24]
 800377a:	601a      	str	r2, [r3, #0]
 800377c:	e000      	b.n	8003780 <TASK_MANAGER_Add_Task+0xb0>
		return;
 800377e:	bf00      	nop
}
 8003780:	3714      	adds	r7, #20
 8003782:	46bd      	mov	sp, r7
 8003784:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003788:	4770      	bx	lr
 800378a:	bf00      	nop
 800378c:	20000e79 	.word	0x20000e79
 8003790:	20000ba8 	.word	0x20000ba8

08003794 <HAL_Init>:
 8003794:	b580      	push	{r7, lr}
 8003796:	af00      	add	r7, sp, #0
 8003798:	4b0e      	ldr	r3, [pc, #56]	; (80037d4 <HAL_Init+0x40>)
 800379a:	681b      	ldr	r3, [r3, #0]
 800379c:	4a0d      	ldr	r2, [pc, #52]	; (80037d4 <HAL_Init+0x40>)
 800379e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80037a2:	6013      	str	r3, [r2, #0]
 80037a4:	4b0b      	ldr	r3, [pc, #44]	; (80037d4 <HAL_Init+0x40>)
 80037a6:	681b      	ldr	r3, [r3, #0]
 80037a8:	4a0a      	ldr	r2, [pc, #40]	; (80037d4 <HAL_Init+0x40>)
 80037aa:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80037ae:	6013      	str	r3, [r2, #0]
 80037b0:	4b08      	ldr	r3, [pc, #32]	; (80037d4 <HAL_Init+0x40>)
 80037b2:	681b      	ldr	r3, [r3, #0]
 80037b4:	4a07      	ldr	r2, [pc, #28]	; (80037d4 <HAL_Init+0x40>)
 80037b6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80037ba:	6013      	str	r3, [r2, #0]
 80037bc:	2003      	movs	r0, #3
 80037be:	f000 f94f 	bl	8003a60 <HAL_NVIC_SetPriorityGrouping>
 80037c2:	200f      	movs	r0, #15
 80037c4:	f000 f808 	bl	80037d8 <HAL_InitTick>
 80037c8:	f7ff faf6 	bl	8002db8 <HAL_MspInit>
 80037cc:	2300      	movs	r3, #0
 80037ce:	4618      	mov	r0, r3
 80037d0:	bd80      	pop	{r7, pc}
 80037d2:	bf00      	nop
 80037d4:	40023c00 	.word	0x40023c00

080037d8 <HAL_InitTick>:
 80037d8:	b580      	push	{r7, lr}
 80037da:	b082      	sub	sp, #8
 80037dc:	af00      	add	r7, sp, #0
 80037de:	6078      	str	r0, [r7, #4]
 80037e0:	4b12      	ldr	r3, [pc, #72]	; (800382c <HAL_InitTick+0x54>)
 80037e2:	681a      	ldr	r2, [r3, #0]
 80037e4:	4b12      	ldr	r3, [pc, #72]	; (8003830 <HAL_InitTick+0x58>)
 80037e6:	781b      	ldrb	r3, [r3, #0]
 80037e8:	4619      	mov	r1, r3
 80037ea:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80037ee:	fbb3 f3f1 	udiv	r3, r3, r1
 80037f2:	fbb2 f3f3 	udiv	r3, r2, r3
 80037f6:	4618      	mov	r0, r3
 80037f8:	f000 f967 	bl	8003aca <HAL_SYSTICK_Config>
 80037fc:	4603      	mov	r3, r0
 80037fe:	2b00      	cmp	r3, #0
 8003800:	d001      	beq.n	8003806 <HAL_InitTick+0x2e>
 8003802:	2301      	movs	r3, #1
 8003804:	e00e      	b.n	8003824 <HAL_InitTick+0x4c>
 8003806:	687b      	ldr	r3, [r7, #4]
 8003808:	2b0f      	cmp	r3, #15
 800380a:	d80a      	bhi.n	8003822 <HAL_InitTick+0x4a>
 800380c:	2200      	movs	r2, #0
 800380e:	6879      	ldr	r1, [r7, #4]
 8003810:	f04f 30ff 	mov.w	r0, #4294967295
 8003814:	f000 f92f 	bl	8003a76 <HAL_NVIC_SetPriority>
 8003818:	4a06      	ldr	r2, [pc, #24]	; (8003834 <HAL_InitTick+0x5c>)
 800381a:	687b      	ldr	r3, [r7, #4]
 800381c:	6013      	str	r3, [r2, #0]
 800381e:	2300      	movs	r3, #0
 8003820:	e000      	b.n	8003824 <HAL_InitTick+0x4c>
 8003822:	2301      	movs	r3, #1
 8003824:	4618      	mov	r0, r3
 8003826:	3708      	adds	r7, #8
 8003828:	46bd      	mov	sp, r7
 800382a:	bd80      	pop	{r7, pc}
 800382c:	200000e4 	.word	0x200000e4
 8003830:	200000ec 	.word	0x200000ec
 8003834:	200000e8 	.word	0x200000e8

08003838 <HAL_IncTick>:
 8003838:	b480      	push	{r7}
 800383a:	af00      	add	r7, sp, #0
 800383c:	4b06      	ldr	r3, [pc, #24]	; (8003858 <HAL_IncTick+0x20>)
 800383e:	781b      	ldrb	r3, [r3, #0]
 8003840:	461a      	mov	r2, r3
 8003842:	4b06      	ldr	r3, [pc, #24]	; (800385c <HAL_IncTick+0x24>)
 8003844:	681b      	ldr	r3, [r3, #0]
 8003846:	4413      	add	r3, r2
 8003848:	4a04      	ldr	r2, [pc, #16]	; (800385c <HAL_IncTick+0x24>)
 800384a:	6013      	str	r3, [r2, #0]
 800384c:	bf00      	nop
 800384e:	46bd      	mov	sp, r7
 8003850:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003854:	4770      	bx	lr
 8003856:	bf00      	nop
 8003858:	200000ec 	.word	0x200000ec
 800385c:	200011e0 	.word	0x200011e0

08003860 <HAL_GetTick>:
 8003860:	b480      	push	{r7}
 8003862:	af00      	add	r7, sp, #0
 8003864:	4b03      	ldr	r3, [pc, #12]	; (8003874 <HAL_GetTick+0x14>)
 8003866:	681b      	ldr	r3, [r3, #0]
 8003868:	4618      	mov	r0, r3
 800386a:	46bd      	mov	sp, r7
 800386c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003870:	4770      	bx	lr
 8003872:	bf00      	nop
 8003874:	200011e0 	.word	0x200011e0

08003878 <HAL_Delay>:
 8003878:	b580      	push	{r7, lr}
 800387a:	b084      	sub	sp, #16
 800387c:	af00      	add	r7, sp, #0
 800387e:	6078      	str	r0, [r7, #4]
 8003880:	f7ff ffee 	bl	8003860 <HAL_GetTick>
 8003884:	60b8      	str	r0, [r7, #8]
 8003886:	687b      	ldr	r3, [r7, #4]
 8003888:	60fb      	str	r3, [r7, #12]
 800388a:	68fb      	ldr	r3, [r7, #12]
 800388c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003890:	d005      	beq.n	800389e <HAL_Delay+0x26>
 8003892:	4b0a      	ldr	r3, [pc, #40]	; (80038bc <HAL_Delay+0x44>)
 8003894:	781b      	ldrb	r3, [r3, #0]
 8003896:	461a      	mov	r2, r3
 8003898:	68fb      	ldr	r3, [r7, #12]
 800389a:	4413      	add	r3, r2
 800389c:	60fb      	str	r3, [r7, #12]
 800389e:	bf00      	nop
 80038a0:	f7ff ffde 	bl	8003860 <HAL_GetTick>
 80038a4:	4602      	mov	r2, r0
 80038a6:	68bb      	ldr	r3, [r7, #8]
 80038a8:	1ad3      	subs	r3, r2, r3
 80038aa:	68fa      	ldr	r2, [r7, #12]
 80038ac:	429a      	cmp	r2, r3
 80038ae:	d8f7      	bhi.n	80038a0 <HAL_Delay+0x28>
 80038b0:	bf00      	nop
 80038b2:	bf00      	nop
 80038b4:	3710      	adds	r7, #16
 80038b6:	46bd      	mov	sp, r7
 80038b8:	bd80      	pop	{r7, pc}
 80038ba:	bf00      	nop
 80038bc:	200000ec 	.word	0x200000ec

080038c0 <__NVIC_SetPriorityGrouping>:
 80038c0:	b480      	push	{r7}
 80038c2:	b085      	sub	sp, #20
 80038c4:	af00      	add	r7, sp, #0
 80038c6:	6078      	str	r0, [r7, #4]
 80038c8:	687b      	ldr	r3, [r7, #4]
 80038ca:	f003 0307 	and.w	r3, r3, #7
 80038ce:	60fb      	str	r3, [r7, #12]
 80038d0:	4b0c      	ldr	r3, [pc, #48]	; (8003904 <__NVIC_SetPriorityGrouping+0x44>)
 80038d2:	68db      	ldr	r3, [r3, #12]
 80038d4:	60bb      	str	r3, [r7, #8]
 80038d6:	68ba      	ldr	r2, [r7, #8]
 80038d8:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80038dc:	4013      	ands	r3, r2
 80038de:	60bb      	str	r3, [r7, #8]
 80038e0:	68fb      	ldr	r3, [r7, #12]
 80038e2:	021a      	lsls	r2, r3, #8
 80038e4:	68bb      	ldr	r3, [r7, #8]
 80038e6:	4313      	orrs	r3, r2
 80038e8:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80038ec:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80038f0:	60bb      	str	r3, [r7, #8]
 80038f2:	4a04      	ldr	r2, [pc, #16]	; (8003904 <__NVIC_SetPriorityGrouping+0x44>)
 80038f4:	68bb      	ldr	r3, [r7, #8]
 80038f6:	60d3      	str	r3, [r2, #12]
 80038f8:	bf00      	nop
 80038fa:	3714      	adds	r7, #20
 80038fc:	46bd      	mov	sp, r7
 80038fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003902:	4770      	bx	lr
 8003904:	e000ed00 	.word	0xe000ed00

08003908 <__NVIC_GetPriorityGrouping>:
 8003908:	b480      	push	{r7}
 800390a:	af00      	add	r7, sp, #0
 800390c:	4b04      	ldr	r3, [pc, #16]	; (8003920 <__NVIC_GetPriorityGrouping+0x18>)
 800390e:	68db      	ldr	r3, [r3, #12]
 8003910:	0a1b      	lsrs	r3, r3, #8
 8003912:	f003 0307 	and.w	r3, r3, #7
 8003916:	4618      	mov	r0, r3
 8003918:	46bd      	mov	sp, r7
 800391a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800391e:	4770      	bx	lr
 8003920:	e000ed00 	.word	0xe000ed00

08003924 <__NVIC_EnableIRQ>:
 8003924:	b480      	push	{r7}
 8003926:	b083      	sub	sp, #12
 8003928:	af00      	add	r7, sp, #0
 800392a:	4603      	mov	r3, r0
 800392c:	71fb      	strb	r3, [r7, #7]
 800392e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003932:	2b00      	cmp	r3, #0
 8003934:	db0b      	blt.n	800394e <__NVIC_EnableIRQ+0x2a>
 8003936:	79fb      	ldrb	r3, [r7, #7]
 8003938:	f003 021f 	and.w	r2, r3, #31
 800393c:	4907      	ldr	r1, [pc, #28]	; (800395c <__NVIC_EnableIRQ+0x38>)
 800393e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003942:	095b      	lsrs	r3, r3, #5
 8003944:	2001      	movs	r0, #1
 8003946:	fa00 f202 	lsl.w	r2, r0, r2
 800394a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800394e:	bf00      	nop
 8003950:	370c      	adds	r7, #12
 8003952:	46bd      	mov	sp, r7
 8003954:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003958:	4770      	bx	lr
 800395a:	bf00      	nop
 800395c:	e000e100 	.word	0xe000e100

08003960 <__NVIC_SetPriority>:
 8003960:	b480      	push	{r7}
 8003962:	b083      	sub	sp, #12
 8003964:	af00      	add	r7, sp, #0
 8003966:	4603      	mov	r3, r0
 8003968:	6039      	str	r1, [r7, #0]
 800396a:	71fb      	strb	r3, [r7, #7]
 800396c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003970:	2b00      	cmp	r3, #0
 8003972:	db0a      	blt.n	800398a <__NVIC_SetPriority+0x2a>
 8003974:	683b      	ldr	r3, [r7, #0]
 8003976:	b2da      	uxtb	r2, r3
 8003978:	490c      	ldr	r1, [pc, #48]	; (80039ac <__NVIC_SetPriority+0x4c>)
 800397a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800397e:	0112      	lsls	r2, r2, #4
 8003980:	b2d2      	uxtb	r2, r2
 8003982:	440b      	add	r3, r1
 8003984:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8003988:	e00a      	b.n	80039a0 <__NVIC_SetPriority+0x40>
 800398a:	683b      	ldr	r3, [r7, #0]
 800398c:	b2da      	uxtb	r2, r3
 800398e:	4908      	ldr	r1, [pc, #32]	; (80039b0 <__NVIC_SetPriority+0x50>)
 8003990:	79fb      	ldrb	r3, [r7, #7]
 8003992:	f003 030f 	and.w	r3, r3, #15
 8003996:	3b04      	subs	r3, #4
 8003998:	0112      	lsls	r2, r2, #4
 800399a:	b2d2      	uxtb	r2, r2
 800399c:	440b      	add	r3, r1
 800399e:	761a      	strb	r2, [r3, #24]
 80039a0:	bf00      	nop
 80039a2:	370c      	adds	r7, #12
 80039a4:	46bd      	mov	sp, r7
 80039a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039aa:	4770      	bx	lr
 80039ac:	e000e100 	.word	0xe000e100
 80039b0:	e000ed00 	.word	0xe000ed00

080039b4 <NVIC_EncodePriority>:
 80039b4:	b480      	push	{r7}
 80039b6:	b089      	sub	sp, #36	; 0x24
 80039b8:	af00      	add	r7, sp, #0
 80039ba:	60f8      	str	r0, [r7, #12]
 80039bc:	60b9      	str	r1, [r7, #8]
 80039be:	607a      	str	r2, [r7, #4]
 80039c0:	68fb      	ldr	r3, [r7, #12]
 80039c2:	f003 0307 	and.w	r3, r3, #7
 80039c6:	61fb      	str	r3, [r7, #28]
 80039c8:	69fb      	ldr	r3, [r7, #28]
 80039ca:	f1c3 0307 	rsb	r3, r3, #7
 80039ce:	2b04      	cmp	r3, #4
 80039d0:	bf28      	it	cs
 80039d2:	2304      	movcs	r3, #4
 80039d4:	61bb      	str	r3, [r7, #24]
 80039d6:	69fb      	ldr	r3, [r7, #28]
 80039d8:	3304      	adds	r3, #4
 80039da:	2b06      	cmp	r3, #6
 80039dc:	d902      	bls.n	80039e4 <NVIC_EncodePriority+0x30>
 80039de:	69fb      	ldr	r3, [r7, #28]
 80039e0:	3b03      	subs	r3, #3
 80039e2:	e000      	b.n	80039e6 <NVIC_EncodePriority+0x32>
 80039e4:	2300      	movs	r3, #0
 80039e6:	617b      	str	r3, [r7, #20]
 80039e8:	f04f 32ff 	mov.w	r2, #4294967295
 80039ec:	69bb      	ldr	r3, [r7, #24]
 80039ee:	fa02 f303 	lsl.w	r3, r2, r3
 80039f2:	43da      	mvns	r2, r3
 80039f4:	68bb      	ldr	r3, [r7, #8]
 80039f6:	401a      	ands	r2, r3
 80039f8:	697b      	ldr	r3, [r7, #20]
 80039fa:	409a      	lsls	r2, r3
 80039fc:	f04f 31ff 	mov.w	r1, #4294967295
 8003a00:	697b      	ldr	r3, [r7, #20]
 8003a02:	fa01 f303 	lsl.w	r3, r1, r3
 8003a06:	43d9      	mvns	r1, r3
 8003a08:	687b      	ldr	r3, [r7, #4]
 8003a0a:	400b      	ands	r3, r1
 8003a0c:	4313      	orrs	r3, r2
 8003a0e:	4618      	mov	r0, r3
 8003a10:	3724      	adds	r7, #36	; 0x24
 8003a12:	46bd      	mov	sp, r7
 8003a14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a18:	4770      	bx	lr
	...

08003a1c <SysTick_Config>:
 8003a1c:	b580      	push	{r7, lr}
 8003a1e:	b082      	sub	sp, #8
 8003a20:	af00      	add	r7, sp, #0
 8003a22:	6078      	str	r0, [r7, #4]
 8003a24:	687b      	ldr	r3, [r7, #4]
 8003a26:	3b01      	subs	r3, #1
 8003a28:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8003a2c:	d301      	bcc.n	8003a32 <SysTick_Config+0x16>
 8003a2e:	2301      	movs	r3, #1
 8003a30:	e00f      	b.n	8003a52 <SysTick_Config+0x36>
 8003a32:	4a0a      	ldr	r2, [pc, #40]	; (8003a5c <SysTick_Config+0x40>)
 8003a34:	687b      	ldr	r3, [r7, #4]
 8003a36:	3b01      	subs	r3, #1
 8003a38:	6053      	str	r3, [r2, #4]
 8003a3a:	210f      	movs	r1, #15
 8003a3c:	f04f 30ff 	mov.w	r0, #4294967295
 8003a40:	f7ff ff8e 	bl	8003960 <__NVIC_SetPriority>
 8003a44:	4b05      	ldr	r3, [pc, #20]	; (8003a5c <SysTick_Config+0x40>)
 8003a46:	2200      	movs	r2, #0
 8003a48:	609a      	str	r2, [r3, #8]
 8003a4a:	4b04      	ldr	r3, [pc, #16]	; (8003a5c <SysTick_Config+0x40>)
 8003a4c:	2207      	movs	r2, #7
 8003a4e:	601a      	str	r2, [r3, #0]
 8003a50:	2300      	movs	r3, #0
 8003a52:	4618      	mov	r0, r3
 8003a54:	3708      	adds	r7, #8
 8003a56:	46bd      	mov	sp, r7
 8003a58:	bd80      	pop	{r7, pc}
 8003a5a:	bf00      	nop
 8003a5c:	e000e010 	.word	0xe000e010

08003a60 <HAL_NVIC_SetPriorityGrouping>:
 8003a60:	b580      	push	{r7, lr}
 8003a62:	b082      	sub	sp, #8
 8003a64:	af00      	add	r7, sp, #0
 8003a66:	6078      	str	r0, [r7, #4]
 8003a68:	6878      	ldr	r0, [r7, #4]
 8003a6a:	f7ff ff29 	bl	80038c0 <__NVIC_SetPriorityGrouping>
 8003a6e:	bf00      	nop
 8003a70:	3708      	adds	r7, #8
 8003a72:	46bd      	mov	sp, r7
 8003a74:	bd80      	pop	{r7, pc}

08003a76 <HAL_NVIC_SetPriority>:
 8003a76:	b580      	push	{r7, lr}
 8003a78:	b086      	sub	sp, #24
 8003a7a:	af00      	add	r7, sp, #0
 8003a7c:	4603      	mov	r3, r0
 8003a7e:	60b9      	str	r1, [r7, #8]
 8003a80:	607a      	str	r2, [r7, #4]
 8003a82:	73fb      	strb	r3, [r7, #15]
 8003a84:	2300      	movs	r3, #0
 8003a86:	617b      	str	r3, [r7, #20]
 8003a88:	f7ff ff3e 	bl	8003908 <__NVIC_GetPriorityGrouping>
 8003a8c:	6178      	str	r0, [r7, #20]
 8003a8e:	687a      	ldr	r2, [r7, #4]
 8003a90:	68b9      	ldr	r1, [r7, #8]
 8003a92:	6978      	ldr	r0, [r7, #20]
 8003a94:	f7ff ff8e 	bl	80039b4 <NVIC_EncodePriority>
 8003a98:	4602      	mov	r2, r0
 8003a9a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8003a9e:	4611      	mov	r1, r2
 8003aa0:	4618      	mov	r0, r3
 8003aa2:	f7ff ff5d 	bl	8003960 <__NVIC_SetPriority>
 8003aa6:	bf00      	nop
 8003aa8:	3718      	adds	r7, #24
 8003aaa:	46bd      	mov	sp, r7
 8003aac:	bd80      	pop	{r7, pc}

08003aae <HAL_NVIC_EnableIRQ>:
 8003aae:	b580      	push	{r7, lr}
 8003ab0:	b082      	sub	sp, #8
 8003ab2:	af00      	add	r7, sp, #0
 8003ab4:	4603      	mov	r3, r0
 8003ab6:	71fb      	strb	r3, [r7, #7]
 8003ab8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003abc:	4618      	mov	r0, r3
 8003abe:	f7ff ff31 	bl	8003924 <__NVIC_EnableIRQ>
 8003ac2:	bf00      	nop
 8003ac4:	3708      	adds	r7, #8
 8003ac6:	46bd      	mov	sp, r7
 8003ac8:	bd80      	pop	{r7, pc}

08003aca <HAL_SYSTICK_Config>:
 8003aca:	b580      	push	{r7, lr}
 8003acc:	b082      	sub	sp, #8
 8003ace:	af00      	add	r7, sp, #0
 8003ad0:	6078      	str	r0, [r7, #4]
 8003ad2:	6878      	ldr	r0, [r7, #4]
 8003ad4:	f7ff ffa2 	bl	8003a1c <SysTick_Config>
 8003ad8:	4603      	mov	r3, r0
 8003ada:	4618      	mov	r0, r3
 8003adc:	3708      	adds	r7, #8
 8003ade:	46bd      	mov	sp, r7
 8003ae0:	bd80      	pop	{r7, pc}
	...

08003ae4 <HAL_DMA_Init>:
 8003ae4:	b580      	push	{r7, lr}
 8003ae6:	b086      	sub	sp, #24
 8003ae8:	af00      	add	r7, sp, #0
 8003aea:	6078      	str	r0, [r7, #4]
 8003aec:	2300      	movs	r3, #0
 8003aee:	617b      	str	r3, [r7, #20]
 8003af0:	f7ff feb6 	bl	8003860 <HAL_GetTick>
 8003af4:	6138      	str	r0, [r7, #16]
 8003af6:	687b      	ldr	r3, [r7, #4]
 8003af8:	2b00      	cmp	r3, #0
 8003afa:	d101      	bne.n	8003b00 <HAL_DMA_Init+0x1c>
 8003afc:	2301      	movs	r3, #1
 8003afe:	e099      	b.n	8003c34 <HAL_DMA_Init+0x150>
 8003b00:	687b      	ldr	r3, [r7, #4]
 8003b02:	2202      	movs	r2, #2
 8003b04:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003b08:	687b      	ldr	r3, [r7, #4]
 8003b0a:	2200      	movs	r2, #0
 8003b0c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8003b10:	687b      	ldr	r3, [r7, #4]
 8003b12:	681b      	ldr	r3, [r3, #0]
 8003b14:	681a      	ldr	r2, [r3, #0]
 8003b16:	687b      	ldr	r3, [r7, #4]
 8003b18:	681b      	ldr	r3, [r3, #0]
 8003b1a:	f022 0201 	bic.w	r2, r2, #1
 8003b1e:	601a      	str	r2, [r3, #0]
 8003b20:	e00f      	b.n	8003b42 <HAL_DMA_Init+0x5e>
 8003b22:	f7ff fe9d 	bl	8003860 <HAL_GetTick>
 8003b26:	4602      	mov	r2, r0
 8003b28:	693b      	ldr	r3, [r7, #16]
 8003b2a:	1ad3      	subs	r3, r2, r3
 8003b2c:	2b05      	cmp	r3, #5
 8003b2e:	d908      	bls.n	8003b42 <HAL_DMA_Init+0x5e>
 8003b30:	687b      	ldr	r3, [r7, #4]
 8003b32:	2220      	movs	r2, #32
 8003b34:	655a      	str	r2, [r3, #84]	; 0x54
 8003b36:	687b      	ldr	r3, [r7, #4]
 8003b38:	2203      	movs	r2, #3
 8003b3a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003b3e:	2303      	movs	r3, #3
 8003b40:	e078      	b.n	8003c34 <HAL_DMA_Init+0x150>
 8003b42:	687b      	ldr	r3, [r7, #4]
 8003b44:	681b      	ldr	r3, [r3, #0]
 8003b46:	681b      	ldr	r3, [r3, #0]
 8003b48:	f003 0301 	and.w	r3, r3, #1
 8003b4c:	2b00      	cmp	r3, #0
 8003b4e:	d1e8      	bne.n	8003b22 <HAL_DMA_Init+0x3e>
 8003b50:	687b      	ldr	r3, [r7, #4]
 8003b52:	681b      	ldr	r3, [r3, #0]
 8003b54:	681b      	ldr	r3, [r3, #0]
 8003b56:	617b      	str	r3, [r7, #20]
 8003b58:	697a      	ldr	r2, [r7, #20]
 8003b5a:	4b38      	ldr	r3, [pc, #224]	; (8003c3c <HAL_DMA_Init+0x158>)
 8003b5c:	4013      	ands	r3, r2
 8003b5e:	617b      	str	r3, [r7, #20]
 8003b60:	687b      	ldr	r3, [r7, #4]
 8003b62:	685a      	ldr	r2, [r3, #4]
 8003b64:	687b      	ldr	r3, [r7, #4]
 8003b66:	689b      	ldr	r3, [r3, #8]
 8003b68:	431a      	orrs	r2, r3
 8003b6a:	687b      	ldr	r3, [r7, #4]
 8003b6c:	68db      	ldr	r3, [r3, #12]
 8003b6e:	431a      	orrs	r2, r3
 8003b70:	687b      	ldr	r3, [r7, #4]
 8003b72:	691b      	ldr	r3, [r3, #16]
 8003b74:	431a      	orrs	r2, r3
 8003b76:	687b      	ldr	r3, [r7, #4]
 8003b78:	695b      	ldr	r3, [r3, #20]
 8003b7a:	431a      	orrs	r2, r3
 8003b7c:	687b      	ldr	r3, [r7, #4]
 8003b7e:	699b      	ldr	r3, [r3, #24]
 8003b80:	431a      	orrs	r2, r3
 8003b82:	687b      	ldr	r3, [r7, #4]
 8003b84:	69db      	ldr	r3, [r3, #28]
 8003b86:	431a      	orrs	r2, r3
 8003b88:	687b      	ldr	r3, [r7, #4]
 8003b8a:	6a1b      	ldr	r3, [r3, #32]
 8003b8c:	4313      	orrs	r3, r2
 8003b8e:	697a      	ldr	r2, [r7, #20]
 8003b90:	4313      	orrs	r3, r2
 8003b92:	617b      	str	r3, [r7, #20]
 8003b94:	687b      	ldr	r3, [r7, #4]
 8003b96:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b98:	2b04      	cmp	r3, #4
 8003b9a:	d107      	bne.n	8003bac <HAL_DMA_Init+0xc8>
 8003b9c:	687b      	ldr	r3, [r7, #4]
 8003b9e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003ba0:	687b      	ldr	r3, [r7, #4]
 8003ba2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003ba4:	4313      	orrs	r3, r2
 8003ba6:	697a      	ldr	r2, [r7, #20]
 8003ba8:	4313      	orrs	r3, r2
 8003baa:	617b      	str	r3, [r7, #20]
 8003bac:	687b      	ldr	r3, [r7, #4]
 8003bae:	681b      	ldr	r3, [r3, #0]
 8003bb0:	697a      	ldr	r2, [r7, #20]
 8003bb2:	601a      	str	r2, [r3, #0]
 8003bb4:	687b      	ldr	r3, [r7, #4]
 8003bb6:	681b      	ldr	r3, [r3, #0]
 8003bb8:	695b      	ldr	r3, [r3, #20]
 8003bba:	617b      	str	r3, [r7, #20]
 8003bbc:	697b      	ldr	r3, [r7, #20]
 8003bbe:	f023 0307 	bic.w	r3, r3, #7
 8003bc2:	617b      	str	r3, [r7, #20]
 8003bc4:	687b      	ldr	r3, [r7, #4]
 8003bc6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003bc8:	697a      	ldr	r2, [r7, #20]
 8003bca:	4313      	orrs	r3, r2
 8003bcc:	617b      	str	r3, [r7, #20]
 8003bce:	687b      	ldr	r3, [r7, #4]
 8003bd0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003bd2:	2b04      	cmp	r3, #4
 8003bd4:	d117      	bne.n	8003c06 <HAL_DMA_Init+0x122>
 8003bd6:	687b      	ldr	r3, [r7, #4]
 8003bd8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003bda:	697a      	ldr	r2, [r7, #20]
 8003bdc:	4313      	orrs	r3, r2
 8003bde:	617b      	str	r3, [r7, #20]
 8003be0:	687b      	ldr	r3, [r7, #4]
 8003be2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003be4:	2b00      	cmp	r3, #0
 8003be6:	d00e      	beq.n	8003c06 <HAL_DMA_Init+0x122>
 8003be8:	6878      	ldr	r0, [r7, #4]
 8003bea:	f000 fb0d 	bl	8004208 <DMA_CheckFifoParam>
 8003bee:	4603      	mov	r3, r0
 8003bf0:	2b00      	cmp	r3, #0
 8003bf2:	d008      	beq.n	8003c06 <HAL_DMA_Init+0x122>
 8003bf4:	687b      	ldr	r3, [r7, #4]
 8003bf6:	2240      	movs	r2, #64	; 0x40
 8003bf8:	655a      	str	r2, [r3, #84]	; 0x54
 8003bfa:	687b      	ldr	r3, [r7, #4]
 8003bfc:	2201      	movs	r2, #1
 8003bfe:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003c02:	2301      	movs	r3, #1
 8003c04:	e016      	b.n	8003c34 <HAL_DMA_Init+0x150>
 8003c06:	687b      	ldr	r3, [r7, #4]
 8003c08:	681b      	ldr	r3, [r3, #0]
 8003c0a:	697a      	ldr	r2, [r7, #20]
 8003c0c:	615a      	str	r2, [r3, #20]
 8003c0e:	6878      	ldr	r0, [r7, #4]
 8003c10:	f000 fac4 	bl	800419c <DMA_CalcBaseAndBitshift>
 8003c14:	4603      	mov	r3, r0
 8003c16:	60fb      	str	r3, [r7, #12]
 8003c18:	687b      	ldr	r3, [r7, #4]
 8003c1a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003c1c:	223f      	movs	r2, #63	; 0x3f
 8003c1e:	409a      	lsls	r2, r3
 8003c20:	68fb      	ldr	r3, [r7, #12]
 8003c22:	609a      	str	r2, [r3, #8]
 8003c24:	687b      	ldr	r3, [r7, #4]
 8003c26:	2200      	movs	r2, #0
 8003c28:	655a      	str	r2, [r3, #84]	; 0x54
 8003c2a:	687b      	ldr	r3, [r7, #4]
 8003c2c:	2201      	movs	r2, #1
 8003c2e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003c32:	2300      	movs	r3, #0
 8003c34:	4618      	mov	r0, r3
 8003c36:	3718      	adds	r7, #24
 8003c38:	46bd      	mov	sp, r7
 8003c3a:	bd80      	pop	{r7, pc}
 8003c3c:	f010803f 	.word	0xf010803f

08003c40 <HAL_DMA_Start_IT>:
 8003c40:	b580      	push	{r7, lr}
 8003c42:	b086      	sub	sp, #24
 8003c44:	af00      	add	r7, sp, #0
 8003c46:	60f8      	str	r0, [r7, #12]
 8003c48:	60b9      	str	r1, [r7, #8]
 8003c4a:	607a      	str	r2, [r7, #4]
 8003c4c:	603b      	str	r3, [r7, #0]
 8003c4e:	2300      	movs	r3, #0
 8003c50:	75fb      	strb	r3, [r7, #23]
 8003c52:	68fb      	ldr	r3, [r7, #12]
 8003c54:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8003c56:	613b      	str	r3, [r7, #16]
 8003c58:	68fb      	ldr	r3, [r7, #12]
 8003c5a:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 8003c5e:	2b01      	cmp	r3, #1
 8003c60:	d101      	bne.n	8003c66 <HAL_DMA_Start_IT+0x26>
 8003c62:	2302      	movs	r3, #2
 8003c64:	e040      	b.n	8003ce8 <HAL_DMA_Start_IT+0xa8>
 8003c66:	68fb      	ldr	r3, [r7, #12]
 8003c68:	2201      	movs	r2, #1
 8003c6a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8003c6e:	68fb      	ldr	r3, [r7, #12]
 8003c70:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8003c74:	b2db      	uxtb	r3, r3
 8003c76:	2b01      	cmp	r3, #1
 8003c78:	d12f      	bne.n	8003cda <HAL_DMA_Start_IT+0x9a>
 8003c7a:	68fb      	ldr	r3, [r7, #12]
 8003c7c:	2202      	movs	r2, #2
 8003c7e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003c82:	68fb      	ldr	r3, [r7, #12]
 8003c84:	2200      	movs	r2, #0
 8003c86:	655a      	str	r2, [r3, #84]	; 0x54
 8003c88:	683b      	ldr	r3, [r7, #0]
 8003c8a:	687a      	ldr	r2, [r7, #4]
 8003c8c:	68b9      	ldr	r1, [r7, #8]
 8003c8e:	68f8      	ldr	r0, [r7, #12]
 8003c90:	f000 fa56 	bl	8004140 <DMA_SetConfig>
 8003c94:	68fb      	ldr	r3, [r7, #12]
 8003c96:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003c98:	223f      	movs	r2, #63	; 0x3f
 8003c9a:	409a      	lsls	r2, r3
 8003c9c:	693b      	ldr	r3, [r7, #16]
 8003c9e:	609a      	str	r2, [r3, #8]
 8003ca0:	68fb      	ldr	r3, [r7, #12]
 8003ca2:	681b      	ldr	r3, [r3, #0]
 8003ca4:	681a      	ldr	r2, [r3, #0]
 8003ca6:	68fb      	ldr	r3, [r7, #12]
 8003ca8:	681b      	ldr	r3, [r3, #0]
 8003caa:	f042 0216 	orr.w	r2, r2, #22
 8003cae:	601a      	str	r2, [r3, #0]
 8003cb0:	68fb      	ldr	r3, [r7, #12]
 8003cb2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003cb4:	2b00      	cmp	r3, #0
 8003cb6:	d007      	beq.n	8003cc8 <HAL_DMA_Start_IT+0x88>
 8003cb8:	68fb      	ldr	r3, [r7, #12]
 8003cba:	681b      	ldr	r3, [r3, #0]
 8003cbc:	681a      	ldr	r2, [r3, #0]
 8003cbe:	68fb      	ldr	r3, [r7, #12]
 8003cc0:	681b      	ldr	r3, [r3, #0]
 8003cc2:	f042 0208 	orr.w	r2, r2, #8
 8003cc6:	601a      	str	r2, [r3, #0]
 8003cc8:	68fb      	ldr	r3, [r7, #12]
 8003cca:	681b      	ldr	r3, [r3, #0]
 8003ccc:	681a      	ldr	r2, [r3, #0]
 8003cce:	68fb      	ldr	r3, [r7, #12]
 8003cd0:	681b      	ldr	r3, [r3, #0]
 8003cd2:	f042 0201 	orr.w	r2, r2, #1
 8003cd6:	601a      	str	r2, [r3, #0]
 8003cd8:	e005      	b.n	8003ce6 <HAL_DMA_Start_IT+0xa6>
 8003cda:	68fb      	ldr	r3, [r7, #12]
 8003cdc:	2200      	movs	r2, #0
 8003cde:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8003ce2:	2302      	movs	r3, #2
 8003ce4:	75fb      	strb	r3, [r7, #23]
 8003ce6:	7dfb      	ldrb	r3, [r7, #23]
 8003ce8:	4618      	mov	r0, r3
 8003cea:	3718      	adds	r7, #24
 8003cec:	46bd      	mov	sp, r7
 8003cee:	bd80      	pop	{r7, pc}

08003cf0 <HAL_DMA_Abort>:
 8003cf0:	b580      	push	{r7, lr}
 8003cf2:	b084      	sub	sp, #16
 8003cf4:	af00      	add	r7, sp, #0
 8003cf6:	6078      	str	r0, [r7, #4]
 8003cf8:	687b      	ldr	r3, [r7, #4]
 8003cfa:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8003cfc:	60fb      	str	r3, [r7, #12]
 8003cfe:	f7ff fdaf 	bl	8003860 <HAL_GetTick>
 8003d02:	60b8      	str	r0, [r7, #8]
 8003d04:	687b      	ldr	r3, [r7, #4]
 8003d06:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8003d0a:	b2db      	uxtb	r3, r3
 8003d0c:	2b02      	cmp	r3, #2
 8003d0e:	d008      	beq.n	8003d22 <HAL_DMA_Abort+0x32>
 8003d10:	687b      	ldr	r3, [r7, #4]
 8003d12:	2280      	movs	r2, #128	; 0x80
 8003d14:	655a      	str	r2, [r3, #84]	; 0x54
 8003d16:	687b      	ldr	r3, [r7, #4]
 8003d18:	2200      	movs	r2, #0
 8003d1a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8003d1e:	2301      	movs	r3, #1
 8003d20:	e052      	b.n	8003dc8 <HAL_DMA_Abort+0xd8>
 8003d22:	687b      	ldr	r3, [r7, #4]
 8003d24:	681b      	ldr	r3, [r3, #0]
 8003d26:	681a      	ldr	r2, [r3, #0]
 8003d28:	687b      	ldr	r3, [r7, #4]
 8003d2a:	681b      	ldr	r3, [r3, #0]
 8003d2c:	f022 0216 	bic.w	r2, r2, #22
 8003d30:	601a      	str	r2, [r3, #0]
 8003d32:	687b      	ldr	r3, [r7, #4]
 8003d34:	681b      	ldr	r3, [r3, #0]
 8003d36:	695a      	ldr	r2, [r3, #20]
 8003d38:	687b      	ldr	r3, [r7, #4]
 8003d3a:	681b      	ldr	r3, [r3, #0]
 8003d3c:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8003d40:	615a      	str	r2, [r3, #20]
 8003d42:	687b      	ldr	r3, [r7, #4]
 8003d44:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003d46:	2b00      	cmp	r3, #0
 8003d48:	d103      	bne.n	8003d52 <HAL_DMA_Abort+0x62>
 8003d4a:	687b      	ldr	r3, [r7, #4]
 8003d4c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003d4e:	2b00      	cmp	r3, #0
 8003d50:	d007      	beq.n	8003d62 <HAL_DMA_Abort+0x72>
 8003d52:	687b      	ldr	r3, [r7, #4]
 8003d54:	681b      	ldr	r3, [r3, #0]
 8003d56:	681a      	ldr	r2, [r3, #0]
 8003d58:	687b      	ldr	r3, [r7, #4]
 8003d5a:	681b      	ldr	r3, [r3, #0]
 8003d5c:	f022 0208 	bic.w	r2, r2, #8
 8003d60:	601a      	str	r2, [r3, #0]
 8003d62:	687b      	ldr	r3, [r7, #4]
 8003d64:	681b      	ldr	r3, [r3, #0]
 8003d66:	681a      	ldr	r2, [r3, #0]
 8003d68:	687b      	ldr	r3, [r7, #4]
 8003d6a:	681b      	ldr	r3, [r3, #0]
 8003d6c:	f022 0201 	bic.w	r2, r2, #1
 8003d70:	601a      	str	r2, [r3, #0]
 8003d72:	e013      	b.n	8003d9c <HAL_DMA_Abort+0xac>
 8003d74:	f7ff fd74 	bl	8003860 <HAL_GetTick>
 8003d78:	4602      	mov	r2, r0
 8003d7a:	68bb      	ldr	r3, [r7, #8]
 8003d7c:	1ad3      	subs	r3, r2, r3
 8003d7e:	2b05      	cmp	r3, #5
 8003d80:	d90c      	bls.n	8003d9c <HAL_DMA_Abort+0xac>
 8003d82:	687b      	ldr	r3, [r7, #4]
 8003d84:	2220      	movs	r2, #32
 8003d86:	655a      	str	r2, [r3, #84]	; 0x54
 8003d88:	687b      	ldr	r3, [r7, #4]
 8003d8a:	2203      	movs	r2, #3
 8003d8c:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003d90:	687b      	ldr	r3, [r7, #4]
 8003d92:	2200      	movs	r2, #0
 8003d94:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8003d98:	2303      	movs	r3, #3
 8003d9a:	e015      	b.n	8003dc8 <HAL_DMA_Abort+0xd8>
 8003d9c:	687b      	ldr	r3, [r7, #4]
 8003d9e:	681b      	ldr	r3, [r3, #0]
 8003da0:	681b      	ldr	r3, [r3, #0]
 8003da2:	f003 0301 	and.w	r3, r3, #1
 8003da6:	2b00      	cmp	r3, #0
 8003da8:	d1e4      	bne.n	8003d74 <HAL_DMA_Abort+0x84>
 8003daa:	687b      	ldr	r3, [r7, #4]
 8003dac:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003dae:	223f      	movs	r2, #63	; 0x3f
 8003db0:	409a      	lsls	r2, r3
 8003db2:	68fb      	ldr	r3, [r7, #12]
 8003db4:	609a      	str	r2, [r3, #8]
 8003db6:	687b      	ldr	r3, [r7, #4]
 8003db8:	2201      	movs	r2, #1
 8003dba:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003dbe:	687b      	ldr	r3, [r7, #4]
 8003dc0:	2200      	movs	r2, #0
 8003dc2:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8003dc6:	2300      	movs	r3, #0
 8003dc8:	4618      	mov	r0, r3
 8003dca:	3710      	adds	r7, #16
 8003dcc:	46bd      	mov	sp, r7
 8003dce:	bd80      	pop	{r7, pc}

08003dd0 <HAL_DMA_Abort_IT>:
 8003dd0:	b480      	push	{r7}
 8003dd2:	b083      	sub	sp, #12
 8003dd4:	af00      	add	r7, sp, #0
 8003dd6:	6078      	str	r0, [r7, #4]
 8003dd8:	687b      	ldr	r3, [r7, #4]
 8003dda:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8003dde:	b2db      	uxtb	r3, r3
 8003de0:	2b02      	cmp	r3, #2
 8003de2:	d004      	beq.n	8003dee <HAL_DMA_Abort_IT+0x1e>
 8003de4:	687b      	ldr	r3, [r7, #4]
 8003de6:	2280      	movs	r2, #128	; 0x80
 8003de8:	655a      	str	r2, [r3, #84]	; 0x54
 8003dea:	2301      	movs	r3, #1
 8003dec:	e00c      	b.n	8003e08 <HAL_DMA_Abort_IT+0x38>
 8003dee:	687b      	ldr	r3, [r7, #4]
 8003df0:	2205      	movs	r2, #5
 8003df2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003df6:	687b      	ldr	r3, [r7, #4]
 8003df8:	681b      	ldr	r3, [r3, #0]
 8003dfa:	681a      	ldr	r2, [r3, #0]
 8003dfc:	687b      	ldr	r3, [r7, #4]
 8003dfe:	681b      	ldr	r3, [r3, #0]
 8003e00:	f022 0201 	bic.w	r2, r2, #1
 8003e04:	601a      	str	r2, [r3, #0]
 8003e06:	2300      	movs	r3, #0
 8003e08:	4618      	mov	r0, r3
 8003e0a:	370c      	adds	r7, #12
 8003e0c:	46bd      	mov	sp, r7
 8003e0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e12:	4770      	bx	lr

08003e14 <HAL_DMA_IRQHandler>:
 8003e14:	b580      	push	{r7, lr}
 8003e16:	b086      	sub	sp, #24
 8003e18:	af00      	add	r7, sp, #0
 8003e1a:	6078      	str	r0, [r7, #4]
 8003e1c:	2300      	movs	r3, #0
 8003e1e:	60bb      	str	r3, [r7, #8]
 8003e20:	4b92      	ldr	r3, [pc, #584]	; (800406c <HAL_DMA_IRQHandler+0x258>)
 8003e22:	681b      	ldr	r3, [r3, #0]
 8003e24:	4a92      	ldr	r2, [pc, #584]	; (8004070 <HAL_DMA_IRQHandler+0x25c>)
 8003e26:	fba2 2303 	umull	r2, r3, r2, r3
 8003e2a:	0a9b      	lsrs	r3, r3, #10
 8003e2c:	617b      	str	r3, [r7, #20]
 8003e2e:	687b      	ldr	r3, [r7, #4]
 8003e30:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8003e32:	613b      	str	r3, [r7, #16]
 8003e34:	693b      	ldr	r3, [r7, #16]
 8003e36:	681b      	ldr	r3, [r3, #0]
 8003e38:	60fb      	str	r3, [r7, #12]
 8003e3a:	687b      	ldr	r3, [r7, #4]
 8003e3c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003e3e:	2208      	movs	r2, #8
 8003e40:	409a      	lsls	r2, r3
 8003e42:	68fb      	ldr	r3, [r7, #12]
 8003e44:	4013      	ands	r3, r2
 8003e46:	2b00      	cmp	r3, #0
 8003e48:	d01a      	beq.n	8003e80 <HAL_DMA_IRQHandler+0x6c>
 8003e4a:	687b      	ldr	r3, [r7, #4]
 8003e4c:	681b      	ldr	r3, [r3, #0]
 8003e4e:	681b      	ldr	r3, [r3, #0]
 8003e50:	f003 0304 	and.w	r3, r3, #4
 8003e54:	2b00      	cmp	r3, #0
 8003e56:	d013      	beq.n	8003e80 <HAL_DMA_IRQHandler+0x6c>
 8003e58:	687b      	ldr	r3, [r7, #4]
 8003e5a:	681b      	ldr	r3, [r3, #0]
 8003e5c:	681a      	ldr	r2, [r3, #0]
 8003e5e:	687b      	ldr	r3, [r7, #4]
 8003e60:	681b      	ldr	r3, [r3, #0]
 8003e62:	f022 0204 	bic.w	r2, r2, #4
 8003e66:	601a      	str	r2, [r3, #0]
 8003e68:	687b      	ldr	r3, [r7, #4]
 8003e6a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003e6c:	2208      	movs	r2, #8
 8003e6e:	409a      	lsls	r2, r3
 8003e70:	693b      	ldr	r3, [r7, #16]
 8003e72:	609a      	str	r2, [r3, #8]
 8003e74:	687b      	ldr	r3, [r7, #4]
 8003e76:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003e78:	f043 0201 	orr.w	r2, r3, #1
 8003e7c:	687b      	ldr	r3, [r7, #4]
 8003e7e:	655a      	str	r2, [r3, #84]	; 0x54
 8003e80:	687b      	ldr	r3, [r7, #4]
 8003e82:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003e84:	2201      	movs	r2, #1
 8003e86:	409a      	lsls	r2, r3
 8003e88:	68fb      	ldr	r3, [r7, #12]
 8003e8a:	4013      	ands	r3, r2
 8003e8c:	2b00      	cmp	r3, #0
 8003e8e:	d012      	beq.n	8003eb6 <HAL_DMA_IRQHandler+0xa2>
 8003e90:	687b      	ldr	r3, [r7, #4]
 8003e92:	681b      	ldr	r3, [r3, #0]
 8003e94:	695b      	ldr	r3, [r3, #20]
 8003e96:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003e9a:	2b00      	cmp	r3, #0
 8003e9c:	d00b      	beq.n	8003eb6 <HAL_DMA_IRQHandler+0xa2>
 8003e9e:	687b      	ldr	r3, [r7, #4]
 8003ea0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003ea2:	2201      	movs	r2, #1
 8003ea4:	409a      	lsls	r2, r3
 8003ea6:	693b      	ldr	r3, [r7, #16]
 8003ea8:	609a      	str	r2, [r3, #8]
 8003eaa:	687b      	ldr	r3, [r7, #4]
 8003eac:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003eae:	f043 0202 	orr.w	r2, r3, #2
 8003eb2:	687b      	ldr	r3, [r7, #4]
 8003eb4:	655a      	str	r2, [r3, #84]	; 0x54
 8003eb6:	687b      	ldr	r3, [r7, #4]
 8003eb8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003eba:	2204      	movs	r2, #4
 8003ebc:	409a      	lsls	r2, r3
 8003ebe:	68fb      	ldr	r3, [r7, #12]
 8003ec0:	4013      	ands	r3, r2
 8003ec2:	2b00      	cmp	r3, #0
 8003ec4:	d012      	beq.n	8003eec <HAL_DMA_IRQHandler+0xd8>
 8003ec6:	687b      	ldr	r3, [r7, #4]
 8003ec8:	681b      	ldr	r3, [r3, #0]
 8003eca:	681b      	ldr	r3, [r3, #0]
 8003ecc:	f003 0302 	and.w	r3, r3, #2
 8003ed0:	2b00      	cmp	r3, #0
 8003ed2:	d00b      	beq.n	8003eec <HAL_DMA_IRQHandler+0xd8>
 8003ed4:	687b      	ldr	r3, [r7, #4]
 8003ed6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003ed8:	2204      	movs	r2, #4
 8003eda:	409a      	lsls	r2, r3
 8003edc:	693b      	ldr	r3, [r7, #16]
 8003ede:	609a      	str	r2, [r3, #8]
 8003ee0:	687b      	ldr	r3, [r7, #4]
 8003ee2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003ee4:	f043 0204 	orr.w	r2, r3, #4
 8003ee8:	687b      	ldr	r3, [r7, #4]
 8003eea:	655a      	str	r2, [r3, #84]	; 0x54
 8003eec:	687b      	ldr	r3, [r7, #4]
 8003eee:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003ef0:	2210      	movs	r2, #16
 8003ef2:	409a      	lsls	r2, r3
 8003ef4:	68fb      	ldr	r3, [r7, #12]
 8003ef6:	4013      	ands	r3, r2
 8003ef8:	2b00      	cmp	r3, #0
 8003efa:	d043      	beq.n	8003f84 <HAL_DMA_IRQHandler+0x170>
 8003efc:	687b      	ldr	r3, [r7, #4]
 8003efe:	681b      	ldr	r3, [r3, #0]
 8003f00:	681b      	ldr	r3, [r3, #0]
 8003f02:	f003 0308 	and.w	r3, r3, #8
 8003f06:	2b00      	cmp	r3, #0
 8003f08:	d03c      	beq.n	8003f84 <HAL_DMA_IRQHandler+0x170>
 8003f0a:	687b      	ldr	r3, [r7, #4]
 8003f0c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003f0e:	2210      	movs	r2, #16
 8003f10:	409a      	lsls	r2, r3
 8003f12:	693b      	ldr	r3, [r7, #16]
 8003f14:	609a      	str	r2, [r3, #8]
 8003f16:	687b      	ldr	r3, [r7, #4]
 8003f18:	681b      	ldr	r3, [r3, #0]
 8003f1a:	681b      	ldr	r3, [r3, #0]
 8003f1c:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8003f20:	2b00      	cmp	r3, #0
 8003f22:	d018      	beq.n	8003f56 <HAL_DMA_IRQHandler+0x142>
 8003f24:	687b      	ldr	r3, [r7, #4]
 8003f26:	681b      	ldr	r3, [r3, #0]
 8003f28:	681b      	ldr	r3, [r3, #0]
 8003f2a:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8003f2e:	2b00      	cmp	r3, #0
 8003f30:	d108      	bne.n	8003f44 <HAL_DMA_IRQHandler+0x130>
 8003f32:	687b      	ldr	r3, [r7, #4]
 8003f34:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003f36:	2b00      	cmp	r3, #0
 8003f38:	d024      	beq.n	8003f84 <HAL_DMA_IRQHandler+0x170>
 8003f3a:	687b      	ldr	r3, [r7, #4]
 8003f3c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003f3e:	6878      	ldr	r0, [r7, #4]
 8003f40:	4798      	blx	r3
 8003f42:	e01f      	b.n	8003f84 <HAL_DMA_IRQHandler+0x170>
 8003f44:	687b      	ldr	r3, [r7, #4]
 8003f46:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003f48:	2b00      	cmp	r3, #0
 8003f4a:	d01b      	beq.n	8003f84 <HAL_DMA_IRQHandler+0x170>
 8003f4c:	687b      	ldr	r3, [r7, #4]
 8003f4e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003f50:	6878      	ldr	r0, [r7, #4]
 8003f52:	4798      	blx	r3
 8003f54:	e016      	b.n	8003f84 <HAL_DMA_IRQHandler+0x170>
 8003f56:	687b      	ldr	r3, [r7, #4]
 8003f58:	681b      	ldr	r3, [r3, #0]
 8003f5a:	681b      	ldr	r3, [r3, #0]
 8003f5c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003f60:	2b00      	cmp	r3, #0
 8003f62:	d107      	bne.n	8003f74 <HAL_DMA_IRQHandler+0x160>
 8003f64:	687b      	ldr	r3, [r7, #4]
 8003f66:	681b      	ldr	r3, [r3, #0]
 8003f68:	681a      	ldr	r2, [r3, #0]
 8003f6a:	687b      	ldr	r3, [r7, #4]
 8003f6c:	681b      	ldr	r3, [r3, #0]
 8003f6e:	f022 0208 	bic.w	r2, r2, #8
 8003f72:	601a      	str	r2, [r3, #0]
 8003f74:	687b      	ldr	r3, [r7, #4]
 8003f76:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003f78:	2b00      	cmp	r3, #0
 8003f7a:	d003      	beq.n	8003f84 <HAL_DMA_IRQHandler+0x170>
 8003f7c:	687b      	ldr	r3, [r7, #4]
 8003f7e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003f80:	6878      	ldr	r0, [r7, #4]
 8003f82:	4798      	blx	r3
 8003f84:	687b      	ldr	r3, [r7, #4]
 8003f86:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003f88:	2220      	movs	r2, #32
 8003f8a:	409a      	lsls	r2, r3
 8003f8c:	68fb      	ldr	r3, [r7, #12]
 8003f8e:	4013      	ands	r3, r2
 8003f90:	2b00      	cmp	r3, #0
 8003f92:	f000 808e 	beq.w	80040b2 <HAL_DMA_IRQHandler+0x29e>
 8003f96:	687b      	ldr	r3, [r7, #4]
 8003f98:	681b      	ldr	r3, [r3, #0]
 8003f9a:	681b      	ldr	r3, [r3, #0]
 8003f9c:	f003 0310 	and.w	r3, r3, #16
 8003fa0:	2b00      	cmp	r3, #0
 8003fa2:	f000 8086 	beq.w	80040b2 <HAL_DMA_IRQHandler+0x29e>
 8003fa6:	687b      	ldr	r3, [r7, #4]
 8003fa8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003faa:	2220      	movs	r2, #32
 8003fac:	409a      	lsls	r2, r3
 8003fae:	693b      	ldr	r3, [r7, #16]
 8003fb0:	609a      	str	r2, [r3, #8]
 8003fb2:	687b      	ldr	r3, [r7, #4]
 8003fb4:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8003fb8:	b2db      	uxtb	r3, r3
 8003fba:	2b05      	cmp	r3, #5
 8003fbc:	d136      	bne.n	800402c <HAL_DMA_IRQHandler+0x218>
 8003fbe:	687b      	ldr	r3, [r7, #4]
 8003fc0:	681b      	ldr	r3, [r3, #0]
 8003fc2:	681a      	ldr	r2, [r3, #0]
 8003fc4:	687b      	ldr	r3, [r7, #4]
 8003fc6:	681b      	ldr	r3, [r3, #0]
 8003fc8:	f022 0216 	bic.w	r2, r2, #22
 8003fcc:	601a      	str	r2, [r3, #0]
 8003fce:	687b      	ldr	r3, [r7, #4]
 8003fd0:	681b      	ldr	r3, [r3, #0]
 8003fd2:	695a      	ldr	r2, [r3, #20]
 8003fd4:	687b      	ldr	r3, [r7, #4]
 8003fd6:	681b      	ldr	r3, [r3, #0]
 8003fd8:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8003fdc:	615a      	str	r2, [r3, #20]
 8003fde:	687b      	ldr	r3, [r7, #4]
 8003fe0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003fe2:	2b00      	cmp	r3, #0
 8003fe4:	d103      	bne.n	8003fee <HAL_DMA_IRQHandler+0x1da>
 8003fe6:	687b      	ldr	r3, [r7, #4]
 8003fe8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003fea:	2b00      	cmp	r3, #0
 8003fec:	d007      	beq.n	8003ffe <HAL_DMA_IRQHandler+0x1ea>
 8003fee:	687b      	ldr	r3, [r7, #4]
 8003ff0:	681b      	ldr	r3, [r3, #0]
 8003ff2:	681a      	ldr	r2, [r3, #0]
 8003ff4:	687b      	ldr	r3, [r7, #4]
 8003ff6:	681b      	ldr	r3, [r3, #0]
 8003ff8:	f022 0208 	bic.w	r2, r2, #8
 8003ffc:	601a      	str	r2, [r3, #0]
 8003ffe:	687b      	ldr	r3, [r7, #4]
 8004000:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004002:	223f      	movs	r2, #63	; 0x3f
 8004004:	409a      	lsls	r2, r3
 8004006:	693b      	ldr	r3, [r7, #16]
 8004008:	609a      	str	r2, [r3, #8]
 800400a:	687b      	ldr	r3, [r7, #4]
 800400c:	2201      	movs	r2, #1
 800400e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004012:	687b      	ldr	r3, [r7, #4]
 8004014:	2200      	movs	r2, #0
 8004016:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800401a:	687b      	ldr	r3, [r7, #4]
 800401c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800401e:	2b00      	cmp	r3, #0
 8004020:	d07d      	beq.n	800411e <HAL_DMA_IRQHandler+0x30a>
 8004022:	687b      	ldr	r3, [r7, #4]
 8004024:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8004026:	6878      	ldr	r0, [r7, #4]
 8004028:	4798      	blx	r3
 800402a:	e078      	b.n	800411e <HAL_DMA_IRQHandler+0x30a>
 800402c:	687b      	ldr	r3, [r7, #4]
 800402e:	681b      	ldr	r3, [r3, #0]
 8004030:	681b      	ldr	r3, [r3, #0]
 8004032:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8004036:	2b00      	cmp	r3, #0
 8004038:	d01c      	beq.n	8004074 <HAL_DMA_IRQHandler+0x260>
 800403a:	687b      	ldr	r3, [r7, #4]
 800403c:	681b      	ldr	r3, [r3, #0]
 800403e:	681b      	ldr	r3, [r3, #0]
 8004040:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8004044:	2b00      	cmp	r3, #0
 8004046:	d108      	bne.n	800405a <HAL_DMA_IRQHandler+0x246>
 8004048:	687b      	ldr	r3, [r7, #4]
 800404a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800404c:	2b00      	cmp	r3, #0
 800404e:	d030      	beq.n	80040b2 <HAL_DMA_IRQHandler+0x29e>
 8004050:	687b      	ldr	r3, [r7, #4]
 8004052:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004054:	6878      	ldr	r0, [r7, #4]
 8004056:	4798      	blx	r3
 8004058:	e02b      	b.n	80040b2 <HAL_DMA_IRQHandler+0x29e>
 800405a:	687b      	ldr	r3, [r7, #4]
 800405c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800405e:	2b00      	cmp	r3, #0
 8004060:	d027      	beq.n	80040b2 <HAL_DMA_IRQHandler+0x29e>
 8004062:	687b      	ldr	r3, [r7, #4]
 8004064:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004066:	6878      	ldr	r0, [r7, #4]
 8004068:	4798      	blx	r3
 800406a:	e022      	b.n	80040b2 <HAL_DMA_IRQHandler+0x29e>
 800406c:	200000e4 	.word	0x200000e4
 8004070:	1b4e81b5 	.word	0x1b4e81b5
 8004074:	687b      	ldr	r3, [r7, #4]
 8004076:	681b      	ldr	r3, [r3, #0]
 8004078:	681b      	ldr	r3, [r3, #0]
 800407a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800407e:	2b00      	cmp	r3, #0
 8004080:	d10f      	bne.n	80040a2 <HAL_DMA_IRQHandler+0x28e>
 8004082:	687b      	ldr	r3, [r7, #4]
 8004084:	681b      	ldr	r3, [r3, #0]
 8004086:	681a      	ldr	r2, [r3, #0]
 8004088:	687b      	ldr	r3, [r7, #4]
 800408a:	681b      	ldr	r3, [r3, #0]
 800408c:	f022 0210 	bic.w	r2, r2, #16
 8004090:	601a      	str	r2, [r3, #0]
 8004092:	687b      	ldr	r3, [r7, #4]
 8004094:	2201      	movs	r2, #1
 8004096:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800409a:	687b      	ldr	r3, [r7, #4]
 800409c:	2200      	movs	r2, #0
 800409e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80040a2:	687b      	ldr	r3, [r7, #4]
 80040a4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80040a6:	2b00      	cmp	r3, #0
 80040a8:	d003      	beq.n	80040b2 <HAL_DMA_IRQHandler+0x29e>
 80040aa:	687b      	ldr	r3, [r7, #4]
 80040ac:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80040ae:	6878      	ldr	r0, [r7, #4]
 80040b0:	4798      	blx	r3
 80040b2:	687b      	ldr	r3, [r7, #4]
 80040b4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80040b6:	2b00      	cmp	r3, #0
 80040b8:	d032      	beq.n	8004120 <HAL_DMA_IRQHandler+0x30c>
 80040ba:	687b      	ldr	r3, [r7, #4]
 80040bc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80040be:	f003 0301 	and.w	r3, r3, #1
 80040c2:	2b00      	cmp	r3, #0
 80040c4:	d022      	beq.n	800410c <HAL_DMA_IRQHandler+0x2f8>
 80040c6:	687b      	ldr	r3, [r7, #4]
 80040c8:	2205      	movs	r2, #5
 80040ca:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80040ce:	687b      	ldr	r3, [r7, #4]
 80040d0:	681b      	ldr	r3, [r3, #0]
 80040d2:	681a      	ldr	r2, [r3, #0]
 80040d4:	687b      	ldr	r3, [r7, #4]
 80040d6:	681b      	ldr	r3, [r3, #0]
 80040d8:	f022 0201 	bic.w	r2, r2, #1
 80040dc:	601a      	str	r2, [r3, #0]
 80040de:	68bb      	ldr	r3, [r7, #8]
 80040e0:	3301      	adds	r3, #1
 80040e2:	60bb      	str	r3, [r7, #8]
 80040e4:	697a      	ldr	r2, [r7, #20]
 80040e6:	429a      	cmp	r2, r3
 80040e8:	d307      	bcc.n	80040fa <HAL_DMA_IRQHandler+0x2e6>
 80040ea:	687b      	ldr	r3, [r7, #4]
 80040ec:	681b      	ldr	r3, [r3, #0]
 80040ee:	681b      	ldr	r3, [r3, #0]
 80040f0:	f003 0301 	and.w	r3, r3, #1
 80040f4:	2b00      	cmp	r3, #0
 80040f6:	d1f2      	bne.n	80040de <HAL_DMA_IRQHandler+0x2ca>
 80040f8:	e000      	b.n	80040fc <HAL_DMA_IRQHandler+0x2e8>
 80040fa:	bf00      	nop
 80040fc:	687b      	ldr	r3, [r7, #4]
 80040fe:	2201      	movs	r2, #1
 8004100:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004104:	687b      	ldr	r3, [r7, #4]
 8004106:	2200      	movs	r2, #0
 8004108:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800410c:	687b      	ldr	r3, [r7, #4]
 800410e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004110:	2b00      	cmp	r3, #0
 8004112:	d005      	beq.n	8004120 <HAL_DMA_IRQHandler+0x30c>
 8004114:	687b      	ldr	r3, [r7, #4]
 8004116:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004118:	6878      	ldr	r0, [r7, #4]
 800411a:	4798      	blx	r3
 800411c:	e000      	b.n	8004120 <HAL_DMA_IRQHandler+0x30c>
 800411e:	bf00      	nop
 8004120:	3718      	adds	r7, #24
 8004122:	46bd      	mov	sp, r7
 8004124:	bd80      	pop	{r7, pc}
 8004126:	bf00      	nop

08004128 <HAL_DMA_GetError>:
 8004128:	b480      	push	{r7}
 800412a:	b083      	sub	sp, #12
 800412c:	af00      	add	r7, sp, #0
 800412e:	6078      	str	r0, [r7, #4]
 8004130:	687b      	ldr	r3, [r7, #4]
 8004132:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004134:	4618      	mov	r0, r3
 8004136:	370c      	adds	r7, #12
 8004138:	46bd      	mov	sp, r7
 800413a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800413e:	4770      	bx	lr

08004140 <DMA_SetConfig>:
 8004140:	b480      	push	{r7}
 8004142:	b085      	sub	sp, #20
 8004144:	af00      	add	r7, sp, #0
 8004146:	60f8      	str	r0, [r7, #12]
 8004148:	60b9      	str	r1, [r7, #8]
 800414a:	607a      	str	r2, [r7, #4]
 800414c:	603b      	str	r3, [r7, #0]
 800414e:	68fb      	ldr	r3, [r7, #12]
 8004150:	681b      	ldr	r3, [r3, #0]
 8004152:	681a      	ldr	r2, [r3, #0]
 8004154:	68fb      	ldr	r3, [r7, #12]
 8004156:	681b      	ldr	r3, [r3, #0]
 8004158:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800415c:	601a      	str	r2, [r3, #0]
 800415e:	68fb      	ldr	r3, [r7, #12]
 8004160:	681b      	ldr	r3, [r3, #0]
 8004162:	683a      	ldr	r2, [r7, #0]
 8004164:	605a      	str	r2, [r3, #4]
 8004166:	68fb      	ldr	r3, [r7, #12]
 8004168:	689b      	ldr	r3, [r3, #8]
 800416a:	2b40      	cmp	r3, #64	; 0x40
 800416c:	d108      	bne.n	8004180 <DMA_SetConfig+0x40>
 800416e:	68fb      	ldr	r3, [r7, #12]
 8004170:	681b      	ldr	r3, [r3, #0]
 8004172:	687a      	ldr	r2, [r7, #4]
 8004174:	609a      	str	r2, [r3, #8]
 8004176:	68fb      	ldr	r3, [r7, #12]
 8004178:	681b      	ldr	r3, [r3, #0]
 800417a:	68ba      	ldr	r2, [r7, #8]
 800417c:	60da      	str	r2, [r3, #12]
 800417e:	e007      	b.n	8004190 <DMA_SetConfig+0x50>
 8004180:	68fb      	ldr	r3, [r7, #12]
 8004182:	681b      	ldr	r3, [r3, #0]
 8004184:	68ba      	ldr	r2, [r7, #8]
 8004186:	609a      	str	r2, [r3, #8]
 8004188:	68fb      	ldr	r3, [r7, #12]
 800418a:	681b      	ldr	r3, [r3, #0]
 800418c:	687a      	ldr	r2, [r7, #4]
 800418e:	60da      	str	r2, [r3, #12]
 8004190:	bf00      	nop
 8004192:	3714      	adds	r7, #20
 8004194:	46bd      	mov	sp, r7
 8004196:	f85d 7b04 	ldr.w	r7, [sp], #4
 800419a:	4770      	bx	lr

0800419c <DMA_CalcBaseAndBitshift>:
 800419c:	b480      	push	{r7}
 800419e:	b085      	sub	sp, #20
 80041a0:	af00      	add	r7, sp, #0
 80041a2:	6078      	str	r0, [r7, #4]
 80041a4:	687b      	ldr	r3, [r7, #4]
 80041a6:	681b      	ldr	r3, [r3, #0]
 80041a8:	b2db      	uxtb	r3, r3
 80041aa:	3b10      	subs	r3, #16
 80041ac:	4a14      	ldr	r2, [pc, #80]	; (8004200 <DMA_CalcBaseAndBitshift+0x64>)
 80041ae:	fba2 2303 	umull	r2, r3, r2, r3
 80041b2:	091b      	lsrs	r3, r3, #4
 80041b4:	60fb      	str	r3, [r7, #12]
 80041b6:	4a13      	ldr	r2, [pc, #76]	; (8004204 <DMA_CalcBaseAndBitshift+0x68>)
 80041b8:	68fb      	ldr	r3, [r7, #12]
 80041ba:	4413      	add	r3, r2
 80041bc:	781b      	ldrb	r3, [r3, #0]
 80041be:	461a      	mov	r2, r3
 80041c0:	687b      	ldr	r3, [r7, #4]
 80041c2:	65da      	str	r2, [r3, #92]	; 0x5c
 80041c4:	68fb      	ldr	r3, [r7, #12]
 80041c6:	2b03      	cmp	r3, #3
 80041c8:	d909      	bls.n	80041de <DMA_CalcBaseAndBitshift+0x42>
 80041ca:	687b      	ldr	r3, [r7, #4]
 80041cc:	681b      	ldr	r3, [r3, #0]
 80041ce:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 80041d2:	f023 0303 	bic.w	r3, r3, #3
 80041d6:	1d1a      	adds	r2, r3, #4
 80041d8:	687b      	ldr	r3, [r7, #4]
 80041da:	659a      	str	r2, [r3, #88]	; 0x58
 80041dc:	e007      	b.n	80041ee <DMA_CalcBaseAndBitshift+0x52>
 80041de:	687b      	ldr	r3, [r7, #4]
 80041e0:	681b      	ldr	r3, [r3, #0]
 80041e2:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 80041e6:	f023 0303 	bic.w	r3, r3, #3
 80041ea:	687a      	ldr	r2, [r7, #4]
 80041ec:	6593      	str	r3, [r2, #88]	; 0x58
 80041ee:	687b      	ldr	r3, [r7, #4]
 80041f0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80041f2:	4618      	mov	r0, r3
 80041f4:	3714      	adds	r7, #20
 80041f6:	46bd      	mov	sp, r7
 80041f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041fc:	4770      	bx	lr
 80041fe:	bf00      	nop
 8004200:	aaaaaaab 	.word	0xaaaaaaab
 8004204:	08009364 	.word	0x08009364

08004208 <DMA_CheckFifoParam>:
 8004208:	b480      	push	{r7}
 800420a:	b085      	sub	sp, #20
 800420c:	af00      	add	r7, sp, #0
 800420e:	6078      	str	r0, [r7, #4]
 8004210:	2300      	movs	r3, #0
 8004212:	73fb      	strb	r3, [r7, #15]
 8004214:	687b      	ldr	r3, [r7, #4]
 8004216:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004218:	60bb      	str	r3, [r7, #8]
 800421a:	687b      	ldr	r3, [r7, #4]
 800421c:	699b      	ldr	r3, [r3, #24]
 800421e:	2b00      	cmp	r3, #0
 8004220:	d11f      	bne.n	8004262 <DMA_CheckFifoParam+0x5a>
 8004222:	68bb      	ldr	r3, [r7, #8]
 8004224:	2b03      	cmp	r3, #3
 8004226:	d856      	bhi.n	80042d6 <DMA_CheckFifoParam+0xce>
 8004228:	a201      	add	r2, pc, #4	; (adr r2, 8004230 <DMA_CheckFifoParam+0x28>)
 800422a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800422e:	bf00      	nop
 8004230:	08004241 	.word	0x08004241
 8004234:	08004253 	.word	0x08004253
 8004238:	08004241 	.word	0x08004241
 800423c:	080042d7 	.word	0x080042d7
 8004240:	687b      	ldr	r3, [r7, #4]
 8004242:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004244:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8004248:	2b00      	cmp	r3, #0
 800424a:	d046      	beq.n	80042da <DMA_CheckFifoParam+0xd2>
 800424c:	2301      	movs	r3, #1
 800424e:	73fb      	strb	r3, [r7, #15]
 8004250:	e043      	b.n	80042da <DMA_CheckFifoParam+0xd2>
 8004252:	687b      	ldr	r3, [r7, #4]
 8004254:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004256:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 800425a:	d140      	bne.n	80042de <DMA_CheckFifoParam+0xd6>
 800425c:	2301      	movs	r3, #1
 800425e:	73fb      	strb	r3, [r7, #15]
 8004260:	e03d      	b.n	80042de <DMA_CheckFifoParam+0xd6>
 8004262:	687b      	ldr	r3, [r7, #4]
 8004264:	699b      	ldr	r3, [r3, #24]
 8004266:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800426a:	d121      	bne.n	80042b0 <DMA_CheckFifoParam+0xa8>
 800426c:	68bb      	ldr	r3, [r7, #8]
 800426e:	2b03      	cmp	r3, #3
 8004270:	d837      	bhi.n	80042e2 <DMA_CheckFifoParam+0xda>
 8004272:	a201      	add	r2, pc, #4	; (adr r2, 8004278 <DMA_CheckFifoParam+0x70>)
 8004274:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004278:	08004289 	.word	0x08004289
 800427c:	0800428f 	.word	0x0800428f
 8004280:	08004289 	.word	0x08004289
 8004284:	080042a1 	.word	0x080042a1
 8004288:	2301      	movs	r3, #1
 800428a:	73fb      	strb	r3, [r7, #15]
 800428c:	e030      	b.n	80042f0 <DMA_CheckFifoParam+0xe8>
 800428e:	687b      	ldr	r3, [r7, #4]
 8004290:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004292:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8004296:	2b00      	cmp	r3, #0
 8004298:	d025      	beq.n	80042e6 <DMA_CheckFifoParam+0xde>
 800429a:	2301      	movs	r3, #1
 800429c:	73fb      	strb	r3, [r7, #15]
 800429e:	e022      	b.n	80042e6 <DMA_CheckFifoParam+0xde>
 80042a0:	687b      	ldr	r3, [r7, #4]
 80042a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80042a4:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 80042a8:	d11f      	bne.n	80042ea <DMA_CheckFifoParam+0xe2>
 80042aa:	2301      	movs	r3, #1
 80042ac:	73fb      	strb	r3, [r7, #15]
 80042ae:	e01c      	b.n	80042ea <DMA_CheckFifoParam+0xe2>
 80042b0:	68bb      	ldr	r3, [r7, #8]
 80042b2:	2b02      	cmp	r3, #2
 80042b4:	d903      	bls.n	80042be <DMA_CheckFifoParam+0xb6>
 80042b6:	68bb      	ldr	r3, [r7, #8]
 80042b8:	2b03      	cmp	r3, #3
 80042ba:	d003      	beq.n	80042c4 <DMA_CheckFifoParam+0xbc>
 80042bc:	e018      	b.n	80042f0 <DMA_CheckFifoParam+0xe8>
 80042be:	2301      	movs	r3, #1
 80042c0:	73fb      	strb	r3, [r7, #15]
 80042c2:	e015      	b.n	80042f0 <DMA_CheckFifoParam+0xe8>
 80042c4:	687b      	ldr	r3, [r7, #4]
 80042c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80042c8:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80042cc:	2b00      	cmp	r3, #0
 80042ce:	d00e      	beq.n	80042ee <DMA_CheckFifoParam+0xe6>
 80042d0:	2301      	movs	r3, #1
 80042d2:	73fb      	strb	r3, [r7, #15]
 80042d4:	e00b      	b.n	80042ee <DMA_CheckFifoParam+0xe6>
 80042d6:	bf00      	nop
 80042d8:	e00a      	b.n	80042f0 <DMA_CheckFifoParam+0xe8>
 80042da:	bf00      	nop
 80042dc:	e008      	b.n	80042f0 <DMA_CheckFifoParam+0xe8>
 80042de:	bf00      	nop
 80042e0:	e006      	b.n	80042f0 <DMA_CheckFifoParam+0xe8>
 80042e2:	bf00      	nop
 80042e4:	e004      	b.n	80042f0 <DMA_CheckFifoParam+0xe8>
 80042e6:	bf00      	nop
 80042e8:	e002      	b.n	80042f0 <DMA_CheckFifoParam+0xe8>
 80042ea:	bf00      	nop
 80042ec:	e000      	b.n	80042f0 <DMA_CheckFifoParam+0xe8>
 80042ee:	bf00      	nop
 80042f0:	7bfb      	ldrb	r3, [r7, #15]
 80042f2:	4618      	mov	r0, r3
 80042f4:	3714      	adds	r7, #20
 80042f6:	46bd      	mov	sp, r7
 80042f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042fc:	4770      	bx	lr
 80042fe:	bf00      	nop

08004300 <HAL_GPIO_Init>:
 8004300:	b480      	push	{r7}
 8004302:	b089      	sub	sp, #36	; 0x24
 8004304:	af00      	add	r7, sp, #0
 8004306:	6078      	str	r0, [r7, #4]
 8004308:	6039      	str	r1, [r7, #0]
 800430a:	2300      	movs	r3, #0
 800430c:	617b      	str	r3, [r7, #20]
 800430e:	2300      	movs	r3, #0
 8004310:	613b      	str	r3, [r7, #16]
 8004312:	2300      	movs	r3, #0
 8004314:	61bb      	str	r3, [r7, #24]
 8004316:	2300      	movs	r3, #0
 8004318:	61fb      	str	r3, [r7, #28]
 800431a:	e16b      	b.n	80045f4 <HAL_GPIO_Init+0x2f4>
 800431c:	2201      	movs	r2, #1
 800431e:	69fb      	ldr	r3, [r7, #28]
 8004320:	fa02 f303 	lsl.w	r3, r2, r3
 8004324:	617b      	str	r3, [r7, #20]
 8004326:	683b      	ldr	r3, [r7, #0]
 8004328:	681b      	ldr	r3, [r3, #0]
 800432a:	697a      	ldr	r2, [r7, #20]
 800432c:	4013      	ands	r3, r2
 800432e:	613b      	str	r3, [r7, #16]
 8004330:	693a      	ldr	r2, [r7, #16]
 8004332:	697b      	ldr	r3, [r7, #20]
 8004334:	429a      	cmp	r2, r3
 8004336:	f040 815a 	bne.w	80045ee <HAL_GPIO_Init+0x2ee>
 800433a:	683b      	ldr	r3, [r7, #0]
 800433c:	685b      	ldr	r3, [r3, #4]
 800433e:	f003 0303 	and.w	r3, r3, #3
 8004342:	2b01      	cmp	r3, #1
 8004344:	d005      	beq.n	8004352 <HAL_GPIO_Init+0x52>
 8004346:	683b      	ldr	r3, [r7, #0]
 8004348:	685b      	ldr	r3, [r3, #4]
 800434a:	f003 0303 	and.w	r3, r3, #3
 800434e:	2b02      	cmp	r3, #2
 8004350:	d130      	bne.n	80043b4 <HAL_GPIO_Init+0xb4>
 8004352:	687b      	ldr	r3, [r7, #4]
 8004354:	689b      	ldr	r3, [r3, #8]
 8004356:	61bb      	str	r3, [r7, #24]
 8004358:	69fb      	ldr	r3, [r7, #28]
 800435a:	005b      	lsls	r3, r3, #1
 800435c:	2203      	movs	r2, #3
 800435e:	fa02 f303 	lsl.w	r3, r2, r3
 8004362:	43db      	mvns	r3, r3
 8004364:	69ba      	ldr	r2, [r7, #24]
 8004366:	4013      	ands	r3, r2
 8004368:	61bb      	str	r3, [r7, #24]
 800436a:	683b      	ldr	r3, [r7, #0]
 800436c:	68da      	ldr	r2, [r3, #12]
 800436e:	69fb      	ldr	r3, [r7, #28]
 8004370:	005b      	lsls	r3, r3, #1
 8004372:	fa02 f303 	lsl.w	r3, r2, r3
 8004376:	69ba      	ldr	r2, [r7, #24]
 8004378:	4313      	orrs	r3, r2
 800437a:	61bb      	str	r3, [r7, #24]
 800437c:	687b      	ldr	r3, [r7, #4]
 800437e:	69ba      	ldr	r2, [r7, #24]
 8004380:	609a      	str	r2, [r3, #8]
 8004382:	687b      	ldr	r3, [r7, #4]
 8004384:	685b      	ldr	r3, [r3, #4]
 8004386:	61bb      	str	r3, [r7, #24]
 8004388:	2201      	movs	r2, #1
 800438a:	69fb      	ldr	r3, [r7, #28]
 800438c:	fa02 f303 	lsl.w	r3, r2, r3
 8004390:	43db      	mvns	r3, r3
 8004392:	69ba      	ldr	r2, [r7, #24]
 8004394:	4013      	ands	r3, r2
 8004396:	61bb      	str	r3, [r7, #24]
 8004398:	683b      	ldr	r3, [r7, #0]
 800439a:	685b      	ldr	r3, [r3, #4]
 800439c:	091b      	lsrs	r3, r3, #4
 800439e:	f003 0201 	and.w	r2, r3, #1
 80043a2:	69fb      	ldr	r3, [r7, #28]
 80043a4:	fa02 f303 	lsl.w	r3, r2, r3
 80043a8:	69ba      	ldr	r2, [r7, #24]
 80043aa:	4313      	orrs	r3, r2
 80043ac:	61bb      	str	r3, [r7, #24]
 80043ae:	687b      	ldr	r3, [r7, #4]
 80043b0:	69ba      	ldr	r2, [r7, #24]
 80043b2:	605a      	str	r2, [r3, #4]
 80043b4:	683b      	ldr	r3, [r7, #0]
 80043b6:	685b      	ldr	r3, [r3, #4]
 80043b8:	f003 0303 	and.w	r3, r3, #3
 80043bc:	2b03      	cmp	r3, #3
 80043be:	d017      	beq.n	80043f0 <HAL_GPIO_Init+0xf0>
 80043c0:	687b      	ldr	r3, [r7, #4]
 80043c2:	68db      	ldr	r3, [r3, #12]
 80043c4:	61bb      	str	r3, [r7, #24]
 80043c6:	69fb      	ldr	r3, [r7, #28]
 80043c8:	005b      	lsls	r3, r3, #1
 80043ca:	2203      	movs	r2, #3
 80043cc:	fa02 f303 	lsl.w	r3, r2, r3
 80043d0:	43db      	mvns	r3, r3
 80043d2:	69ba      	ldr	r2, [r7, #24]
 80043d4:	4013      	ands	r3, r2
 80043d6:	61bb      	str	r3, [r7, #24]
 80043d8:	683b      	ldr	r3, [r7, #0]
 80043da:	689a      	ldr	r2, [r3, #8]
 80043dc:	69fb      	ldr	r3, [r7, #28]
 80043de:	005b      	lsls	r3, r3, #1
 80043e0:	fa02 f303 	lsl.w	r3, r2, r3
 80043e4:	69ba      	ldr	r2, [r7, #24]
 80043e6:	4313      	orrs	r3, r2
 80043e8:	61bb      	str	r3, [r7, #24]
 80043ea:	687b      	ldr	r3, [r7, #4]
 80043ec:	69ba      	ldr	r2, [r7, #24]
 80043ee:	60da      	str	r2, [r3, #12]
 80043f0:	683b      	ldr	r3, [r7, #0]
 80043f2:	685b      	ldr	r3, [r3, #4]
 80043f4:	f003 0303 	and.w	r3, r3, #3
 80043f8:	2b02      	cmp	r3, #2
 80043fa:	d123      	bne.n	8004444 <HAL_GPIO_Init+0x144>
 80043fc:	69fb      	ldr	r3, [r7, #28]
 80043fe:	08da      	lsrs	r2, r3, #3
 8004400:	687b      	ldr	r3, [r7, #4]
 8004402:	3208      	adds	r2, #8
 8004404:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004408:	61bb      	str	r3, [r7, #24]
 800440a:	69fb      	ldr	r3, [r7, #28]
 800440c:	f003 0307 	and.w	r3, r3, #7
 8004410:	009b      	lsls	r3, r3, #2
 8004412:	220f      	movs	r2, #15
 8004414:	fa02 f303 	lsl.w	r3, r2, r3
 8004418:	43db      	mvns	r3, r3
 800441a:	69ba      	ldr	r2, [r7, #24]
 800441c:	4013      	ands	r3, r2
 800441e:	61bb      	str	r3, [r7, #24]
 8004420:	683b      	ldr	r3, [r7, #0]
 8004422:	691a      	ldr	r2, [r3, #16]
 8004424:	69fb      	ldr	r3, [r7, #28]
 8004426:	f003 0307 	and.w	r3, r3, #7
 800442a:	009b      	lsls	r3, r3, #2
 800442c:	fa02 f303 	lsl.w	r3, r2, r3
 8004430:	69ba      	ldr	r2, [r7, #24]
 8004432:	4313      	orrs	r3, r2
 8004434:	61bb      	str	r3, [r7, #24]
 8004436:	69fb      	ldr	r3, [r7, #28]
 8004438:	08da      	lsrs	r2, r3, #3
 800443a:	687b      	ldr	r3, [r7, #4]
 800443c:	3208      	adds	r2, #8
 800443e:	69b9      	ldr	r1, [r7, #24]
 8004440:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8004444:	687b      	ldr	r3, [r7, #4]
 8004446:	681b      	ldr	r3, [r3, #0]
 8004448:	61bb      	str	r3, [r7, #24]
 800444a:	69fb      	ldr	r3, [r7, #28]
 800444c:	005b      	lsls	r3, r3, #1
 800444e:	2203      	movs	r2, #3
 8004450:	fa02 f303 	lsl.w	r3, r2, r3
 8004454:	43db      	mvns	r3, r3
 8004456:	69ba      	ldr	r2, [r7, #24]
 8004458:	4013      	ands	r3, r2
 800445a:	61bb      	str	r3, [r7, #24]
 800445c:	683b      	ldr	r3, [r7, #0]
 800445e:	685b      	ldr	r3, [r3, #4]
 8004460:	f003 0203 	and.w	r2, r3, #3
 8004464:	69fb      	ldr	r3, [r7, #28]
 8004466:	005b      	lsls	r3, r3, #1
 8004468:	fa02 f303 	lsl.w	r3, r2, r3
 800446c:	69ba      	ldr	r2, [r7, #24]
 800446e:	4313      	orrs	r3, r2
 8004470:	61bb      	str	r3, [r7, #24]
 8004472:	687b      	ldr	r3, [r7, #4]
 8004474:	69ba      	ldr	r2, [r7, #24]
 8004476:	601a      	str	r2, [r3, #0]
 8004478:	683b      	ldr	r3, [r7, #0]
 800447a:	685b      	ldr	r3, [r3, #4]
 800447c:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8004480:	2b00      	cmp	r3, #0
 8004482:	f000 80b4 	beq.w	80045ee <HAL_GPIO_Init+0x2ee>
 8004486:	2300      	movs	r3, #0
 8004488:	60fb      	str	r3, [r7, #12]
 800448a:	4b60      	ldr	r3, [pc, #384]	; (800460c <HAL_GPIO_Init+0x30c>)
 800448c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800448e:	4a5f      	ldr	r2, [pc, #380]	; (800460c <HAL_GPIO_Init+0x30c>)
 8004490:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8004494:	6453      	str	r3, [r2, #68]	; 0x44
 8004496:	4b5d      	ldr	r3, [pc, #372]	; (800460c <HAL_GPIO_Init+0x30c>)
 8004498:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800449a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800449e:	60fb      	str	r3, [r7, #12]
 80044a0:	68fb      	ldr	r3, [r7, #12]
 80044a2:	4a5b      	ldr	r2, [pc, #364]	; (8004610 <HAL_GPIO_Init+0x310>)
 80044a4:	69fb      	ldr	r3, [r7, #28]
 80044a6:	089b      	lsrs	r3, r3, #2
 80044a8:	3302      	adds	r3, #2
 80044aa:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80044ae:	61bb      	str	r3, [r7, #24]
 80044b0:	69fb      	ldr	r3, [r7, #28]
 80044b2:	f003 0303 	and.w	r3, r3, #3
 80044b6:	009b      	lsls	r3, r3, #2
 80044b8:	220f      	movs	r2, #15
 80044ba:	fa02 f303 	lsl.w	r3, r2, r3
 80044be:	43db      	mvns	r3, r3
 80044c0:	69ba      	ldr	r2, [r7, #24]
 80044c2:	4013      	ands	r3, r2
 80044c4:	61bb      	str	r3, [r7, #24]
 80044c6:	687b      	ldr	r3, [r7, #4]
 80044c8:	4a52      	ldr	r2, [pc, #328]	; (8004614 <HAL_GPIO_Init+0x314>)
 80044ca:	4293      	cmp	r3, r2
 80044cc:	d02b      	beq.n	8004526 <HAL_GPIO_Init+0x226>
 80044ce:	687b      	ldr	r3, [r7, #4]
 80044d0:	4a51      	ldr	r2, [pc, #324]	; (8004618 <HAL_GPIO_Init+0x318>)
 80044d2:	4293      	cmp	r3, r2
 80044d4:	d025      	beq.n	8004522 <HAL_GPIO_Init+0x222>
 80044d6:	687b      	ldr	r3, [r7, #4]
 80044d8:	4a50      	ldr	r2, [pc, #320]	; (800461c <HAL_GPIO_Init+0x31c>)
 80044da:	4293      	cmp	r3, r2
 80044dc:	d01f      	beq.n	800451e <HAL_GPIO_Init+0x21e>
 80044de:	687b      	ldr	r3, [r7, #4]
 80044e0:	4a4f      	ldr	r2, [pc, #316]	; (8004620 <HAL_GPIO_Init+0x320>)
 80044e2:	4293      	cmp	r3, r2
 80044e4:	d019      	beq.n	800451a <HAL_GPIO_Init+0x21a>
 80044e6:	687b      	ldr	r3, [r7, #4]
 80044e8:	4a4e      	ldr	r2, [pc, #312]	; (8004624 <HAL_GPIO_Init+0x324>)
 80044ea:	4293      	cmp	r3, r2
 80044ec:	d013      	beq.n	8004516 <HAL_GPIO_Init+0x216>
 80044ee:	687b      	ldr	r3, [r7, #4]
 80044f0:	4a4d      	ldr	r2, [pc, #308]	; (8004628 <HAL_GPIO_Init+0x328>)
 80044f2:	4293      	cmp	r3, r2
 80044f4:	d00d      	beq.n	8004512 <HAL_GPIO_Init+0x212>
 80044f6:	687b      	ldr	r3, [r7, #4]
 80044f8:	4a4c      	ldr	r2, [pc, #304]	; (800462c <HAL_GPIO_Init+0x32c>)
 80044fa:	4293      	cmp	r3, r2
 80044fc:	d007      	beq.n	800450e <HAL_GPIO_Init+0x20e>
 80044fe:	687b      	ldr	r3, [r7, #4]
 8004500:	4a4b      	ldr	r2, [pc, #300]	; (8004630 <HAL_GPIO_Init+0x330>)
 8004502:	4293      	cmp	r3, r2
 8004504:	d101      	bne.n	800450a <HAL_GPIO_Init+0x20a>
 8004506:	2307      	movs	r3, #7
 8004508:	e00e      	b.n	8004528 <HAL_GPIO_Init+0x228>
 800450a:	2308      	movs	r3, #8
 800450c:	e00c      	b.n	8004528 <HAL_GPIO_Init+0x228>
 800450e:	2306      	movs	r3, #6
 8004510:	e00a      	b.n	8004528 <HAL_GPIO_Init+0x228>
 8004512:	2305      	movs	r3, #5
 8004514:	e008      	b.n	8004528 <HAL_GPIO_Init+0x228>
 8004516:	2304      	movs	r3, #4
 8004518:	e006      	b.n	8004528 <HAL_GPIO_Init+0x228>
 800451a:	2303      	movs	r3, #3
 800451c:	e004      	b.n	8004528 <HAL_GPIO_Init+0x228>
 800451e:	2302      	movs	r3, #2
 8004520:	e002      	b.n	8004528 <HAL_GPIO_Init+0x228>
 8004522:	2301      	movs	r3, #1
 8004524:	e000      	b.n	8004528 <HAL_GPIO_Init+0x228>
 8004526:	2300      	movs	r3, #0
 8004528:	69fa      	ldr	r2, [r7, #28]
 800452a:	f002 0203 	and.w	r2, r2, #3
 800452e:	0092      	lsls	r2, r2, #2
 8004530:	4093      	lsls	r3, r2
 8004532:	69ba      	ldr	r2, [r7, #24]
 8004534:	4313      	orrs	r3, r2
 8004536:	61bb      	str	r3, [r7, #24]
 8004538:	4935      	ldr	r1, [pc, #212]	; (8004610 <HAL_GPIO_Init+0x310>)
 800453a:	69fb      	ldr	r3, [r7, #28]
 800453c:	089b      	lsrs	r3, r3, #2
 800453e:	3302      	adds	r3, #2
 8004540:	69ba      	ldr	r2, [r7, #24]
 8004542:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8004546:	4b3b      	ldr	r3, [pc, #236]	; (8004634 <HAL_GPIO_Init+0x334>)
 8004548:	681b      	ldr	r3, [r3, #0]
 800454a:	61bb      	str	r3, [r7, #24]
 800454c:	693b      	ldr	r3, [r7, #16]
 800454e:	43db      	mvns	r3, r3
 8004550:	69ba      	ldr	r2, [r7, #24]
 8004552:	4013      	ands	r3, r2
 8004554:	61bb      	str	r3, [r7, #24]
 8004556:	683b      	ldr	r3, [r7, #0]
 8004558:	685b      	ldr	r3, [r3, #4]
 800455a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800455e:	2b00      	cmp	r3, #0
 8004560:	d003      	beq.n	800456a <HAL_GPIO_Init+0x26a>
 8004562:	69ba      	ldr	r2, [r7, #24]
 8004564:	693b      	ldr	r3, [r7, #16]
 8004566:	4313      	orrs	r3, r2
 8004568:	61bb      	str	r3, [r7, #24]
 800456a:	4a32      	ldr	r2, [pc, #200]	; (8004634 <HAL_GPIO_Init+0x334>)
 800456c:	69bb      	ldr	r3, [r7, #24]
 800456e:	6013      	str	r3, [r2, #0]
 8004570:	4b30      	ldr	r3, [pc, #192]	; (8004634 <HAL_GPIO_Init+0x334>)
 8004572:	685b      	ldr	r3, [r3, #4]
 8004574:	61bb      	str	r3, [r7, #24]
 8004576:	693b      	ldr	r3, [r7, #16]
 8004578:	43db      	mvns	r3, r3
 800457a:	69ba      	ldr	r2, [r7, #24]
 800457c:	4013      	ands	r3, r2
 800457e:	61bb      	str	r3, [r7, #24]
 8004580:	683b      	ldr	r3, [r7, #0]
 8004582:	685b      	ldr	r3, [r3, #4]
 8004584:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004588:	2b00      	cmp	r3, #0
 800458a:	d003      	beq.n	8004594 <HAL_GPIO_Init+0x294>
 800458c:	69ba      	ldr	r2, [r7, #24]
 800458e:	693b      	ldr	r3, [r7, #16]
 8004590:	4313      	orrs	r3, r2
 8004592:	61bb      	str	r3, [r7, #24]
 8004594:	4a27      	ldr	r2, [pc, #156]	; (8004634 <HAL_GPIO_Init+0x334>)
 8004596:	69bb      	ldr	r3, [r7, #24]
 8004598:	6053      	str	r3, [r2, #4]
 800459a:	4b26      	ldr	r3, [pc, #152]	; (8004634 <HAL_GPIO_Init+0x334>)
 800459c:	689b      	ldr	r3, [r3, #8]
 800459e:	61bb      	str	r3, [r7, #24]
 80045a0:	693b      	ldr	r3, [r7, #16]
 80045a2:	43db      	mvns	r3, r3
 80045a4:	69ba      	ldr	r2, [r7, #24]
 80045a6:	4013      	ands	r3, r2
 80045a8:	61bb      	str	r3, [r7, #24]
 80045aa:	683b      	ldr	r3, [r7, #0]
 80045ac:	685b      	ldr	r3, [r3, #4]
 80045ae:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80045b2:	2b00      	cmp	r3, #0
 80045b4:	d003      	beq.n	80045be <HAL_GPIO_Init+0x2be>
 80045b6:	69ba      	ldr	r2, [r7, #24]
 80045b8:	693b      	ldr	r3, [r7, #16]
 80045ba:	4313      	orrs	r3, r2
 80045bc:	61bb      	str	r3, [r7, #24]
 80045be:	4a1d      	ldr	r2, [pc, #116]	; (8004634 <HAL_GPIO_Init+0x334>)
 80045c0:	69bb      	ldr	r3, [r7, #24]
 80045c2:	6093      	str	r3, [r2, #8]
 80045c4:	4b1b      	ldr	r3, [pc, #108]	; (8004634 <HAL_GPIO_Init+0x334>)
 80045c6:	68db      	ldr	r3, [r3, #12]
 80045c8:	61bb      	str	r3, [r7, #24]
 80045ca:	693b      	ldr	r3, [r7, #16]
 80045cc:	43db      	mvns	r3, r3
 80045ce:	69ba      	ldr	r2, [r7, #24]
 80045d0:	4013      	ands	r3, r2
 80045d2:	61bb      	str	r3, [r7, #24]
 80045d4:	683b      	ldr	r3, [r7, #0]
 80045d6:	685b      	ldr	r3, [r3, #4]
 80045d8:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80045dc:	2b00      	cmp	r3, #0
 80045de:	d003      	beq.n	80045e8 <HAL_GPIO_Init+0x2e8>
 80045e0:	69ba      	ldr	r2, [r7, #24]
 80045e2:	693b      	ldr	r3, [r7, #16]
 80045e4:	4313      	orrs	r3, r2
 80045e6:	61bb      	str	r3, [r7, #24]
 80045e8:	4a12      	ldr	r2, [pc, #72]	; (8004634 <HAL_GPIO_Init+0x334>)
 80045ea:	69bb      	ldr	r3, [r7, #24]
 80045ec:	60d3      	str	r3, [r2, #12]
 80045ee:	69fb      	ldr	r3, [r7, #28]
 80045f0:	3301      	adds	r3, #1
 80045f2:	61fb      	str	r3, [r7, #28]
 80045f4:	69fb      	ldr	r3, [r7, #28]
 80045f6:	2b0f      	cmp	r3, #15
 80045f8:	f67f ae90 	bls.w	800431c <HAL_GPIO_Init+0x1c>
 80045fc:	bf00      	nop
 80045fe:	bf00      	nop
 8004600:	3724      	adds	r7, #36	; 0x24
 8004602:	46bd      	mov	sp, r7
 8004604:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004608:	4770      	bx	lr
 800460a:	bf00      	nop
 800460c:	40023800 	.word	0x40023800
 8004610:	40013800 	.word	0x40013800
 8004614:	40020000 	.word	0x40020000
 8004618:	40020400 	.word	0x40020400
 800461c:	40020800 	.word	0x40020800
 8004620:	40020c00 	.word	0x40020c00
 8004624:	40021000 	.word	0x40021000
 8004628:	40021400 	.word	0x40021400
 800462c:	40021800 	.word	0x40021800
 8004630:	40021c00 	.word	0x40021c00
 8004634:	40013c00 	.word	0x40013c00

08004638 <HAL_GPIO_WritePin>:
 8004638:	b480      	push	{r7}
 800463a:	b083      	sub	sp, #12
 800463c:	af00      	add	r7, sp, #0
 800463e:	6078      	str	r0, [r7, #4]
 8004640:	460b      	mov	r3, r1
 8004642:	807b      	strh	r3, [r7, #2]
 8004644:	4613      	mov	r3, r2
 8004646:	707b      	strb	r3, [r7, #1]
 8004648:	787b      	ldrb	r3, [r7, #1]
 800464a:	2b00      	cmp	r3, #0
 800464c:	d003      	beq.n	8004656 <HAL_GPIO_WritePin+0x1e>
 800464e:	887a      	ldrh	r2, [r7, #2]
 8004650:	687b      	ldr	r3, [r7, #4]
 8004652:	619a      	str	r2, [r3, #24]
 8004654:	e003      	b.n	800465e <HAL_GPIO_WritePin+0x26>
 8004656:	887b      	ldrh	r3, [r7, #2]
 8004658:	041a      	lsls	r2, r3, #16
 800465a:	687b      	ldr	r3, [r7, #4]
 800465c:	619a      	str	r2, [r3, #24]
 800465e:	bf00      	nop
 8004660:	370c      	adds	r7, #12
 8004662:	46bd      	mov	sp, r7
 8004664:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004668:	4770      	bx	lr
	...

0800466c <HAL_I2C_Init>:
 800466c:	b580      	push	{r7, lr}
 800466e:	b084      	sub	sp, #16
 8004670:	af00      	add	r7, sp, #0
 8004672:	6078      	str	r0, [r7, #4]
 8004674:	687b      	ldr	r3, [r7, #4]
 8004676:	2b00      	cmp	r3, #0
 8004678:	d101      	bne.n	800467e <HAL_I2C_Init+0x12>
 800467a:	2301      	movs	r3, #1
 800467c:	e12b      	b.n	80048d6 <HAL_I2C_Init+0x26a>
 800467e:	687b      	ldr	r3, [r7, #4]
 8004680:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004684:	b2db      	uxtb	r3, r3
 8004686:	2b00      	cmp	r3, #0
 8004688:	d106      	bne.n	8004698 <HAL_I2C_Init+0x2c>
 800468a:	687b      	ldr	r3, [r7, #4]
 800468c:	2200      	movs	r2, #0
 800468e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004692:	6878      	ldr	r0, [r7, #4]
 8004694:	f7fe f9e6 	bl	8002a64 <HAL_I2C_MspInit>
 8004698:	687b      	ldr	r3, [r7, #4]
 800469a:	2224      	movs	r2, #36	; 0x24
 800469c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80046a0:	687b      	ldr	r3, [r7, #4]
 80046a2:	681b      	ldr	r3, [r3, #0]
 80046a4:	681a      	ldr	r2, [r3, #0]
 80046a6:	687b      	ldr	r3, [r7, #4]
 80046a8:	681b      	ldr	r3, [r3, #0]
 80046aa:	f022 0201 	bic.w	r2, r2, #1
 80046ae:	601a      	str	r2, [r3, #0]
 80046b0:	687b      	ldr	r3, [r7, #4]
 80046b2:	681b      	ldr	r3, [r3, #0]
 80046b4:	681a      	ldr	r2, [r3, #0]
 80046b6:	687b      	ldr	r3, [r7, #4]
 80046b8:	681b      	ldr	r3, [r3, #0]
 80046ba:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80046be:	601a      	str	r2, [r3, #0]
 80046c0:	687b      	ldr	r3, [r7, #4]
 80046c2:	681b      	ldr	r3, [r3, #0]
 80046c4:	681a      	ldr	r2, [r3, #0]
 80046c6:	687b      	ldr	r3, [r7, #4]
 80046c8:	681b      	ldr	r3, [r3, #0]
 80046ca:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80046ce:	601a      	str	r2, [r3, #0]
 80046d0:	f001 fe7a 	bl	80063c8 <HAL_RCC_GetPCLK1Freq>
 80046d4:	60f8      	str	r0, [r7, #12]
 80046d6:	687b      	ldr	r3, [r7, #4]
 80046d8:	685b      	ldr	r3, [r3, #4]
 80046da:	4a81      	ldr	r2, [pc, #516]	; (80048e0 <HAL_I2C_Init+0x274>)
 80046dc:	4293      	cmp	r3, r2
 80046de:	d807      	bhi.n	80046f0 <HAL_I2C_Init+0x84>
 80046e0:	68fb      	ldr	r3, [r7, #12]
 80046e2:	4a80      	ldr	r2, [pc, #512]	; (80048e4 <HAL_I2C_Init+0x278>)
 80046e4:	4293      	cmp	r3, r2
 80046e6:	bf94      	ite	ls
 80046e8:	2301      	movls	r3, #1
 80046ea:	2300      	movhi	r3, #0
 80046ec:	b2db      	uxtb	r3, r3
 80046ee:	e006      	b.n	80046fe <HAL_I2C_Init+0x92>
 80046f0:	68fb      	ldr	r3, [r7, #12]
 80046f2:	4a7d      	ldr	r2, [pc, #500]	; (80048e8 <HAL_I2C_Init+0x27c>)
 80046f4:	4293      	cmp	r3, r2
 80046f6:	bf94      	ite	ls
 80046f8:	2301      	movls	r3, #1
 80046fa:	2300      	movhi	r3, #0
 80046fc:	b2db      	uxtb	r3, r3
 80046fe:	2b00      	cmp	r3, #0
 8004700:	d001      	beq.n	8004706 <HAL_I2C_Init+0x9a>
 8004702:	2301      	movs	r3, #1
 8004704:	e0e7      	b.n	80048d6 <HAL_I2C_Init+0x26a>
 8004706:	68fb      	ldr	r3, [r7, #12]
 8004708:	4a78      	ldr	r2, [pc, #480]	; (80048ec <HAL_I2C_Init+0x280>)
 800470a:	fba2 2303 	umull	r2, r3, r2, r3
 800470e:	0c9b      	lsrs	r3, r3, #18
 8004710:	60bb      	str	r3, [r7, #8]
 8004712:	687b      	ldr	r3, [r7, #4]
 8004714:	681b      	ldr	r3, [r3, #0]
 8004716:	685b      	ldr	r3, [r3, #4]
 8004718:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 800471c:	687b      	ldr	r3, [r7, #4]
 800471e:	681b      	ldr	r3, [r3, #0]
 8004720:	68ba      	ldr	r2, [r7, #8]
 8004722:	430a      	orrs	r2, r1
 8004724:	605a      	str	r2, [r3, #4]
 8004726:	687b      	ldr	r3, [r7, #4]
 8004728:	681b      	ldr	r3, [r3, #0]
 800472a:	6a1b      	ldr	r3, [r3, #32]
 800472c:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8004730:	687b      	ldr	r3, [r7, #4]
 8004732:	685b      	ldr	r3, [r3, #4]
 8004734:	4a6a      	ldr	r2, [pc, #424]	; (80048e0 <HAL_I2C_Init+0x274>)
 8004736:	4293      	cmp	r3, r2
 8004738:	d802      	bhi.n	8004740 <HAL_I2C_Init+0xd4>
 800473a:	68bb      	ldr	r3, [r7, #8]
 800473c:	3301      	adds	r3, #1
 800473e:	e009      	b.n	8004754 <HAL_I2C_Init+0xe8>
 8004740:	68bb      	ldr	r3, [r7, #8]
 8004742:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8004746:	fb02 f303 	mul.w	r3, r2, r3
 800474a:	4a69      	ldr	r2, [pc, #420]	; (80048f0 <HAL_I2C_Init+0x284>)
 800474c:	fba2 2303 	umull	r2, r3, r2, r3
 8004750:	099b      	lsrs	r3, r3, #6
 8004752:	3301      	adds	r3, #1
 8004754:	687a      	ldr	r2, [r7, #4]
 8004756:	6812      	ldr	r2, [r2, #0]
 8004758:	430b      	orrs	r3, r1
 800475a:	6213      	str	r3, [r2, #32]
 800475c:	687b      	ldr	r3, [r7, #4]
 800475e:	681b      	ldr	r3, [r3, #0]
 8004760:	69db      	ldr	r3, [r3, #28]
 8004762:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 8004766:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 800476a:	687b      	ldr	r3, [r7, #4]
 800476c:	685b      	ldr	r3, [r3, #4]
 800476e:	495c      	ldr	r1, [pc, #368]	; (80048e0 <HAL_I2C_Init+0x274>)
 8004770:	428b      	cmp	r3, r1
 8004772:	d819      	bhi.n	80047a8 <HAL_I2C_Init+0x13c>
 8004774:	68fb      	ldr	r3, [r7, #12]
 8004776:	1e59      	subs	r1, r3, #1
 8004778:	687b      	ldr	r3, [r7, #4]
 800477a:	685b      	ldr	r3, [r3, #4]
 800477c:	005b      	lsls	r3, r3, #1
 800477e:	fbb1 f3f3 	udiv	r3, r1, r3
 8004782:	1c59      	adds	r1, r3, #1
 8004784:	f640 73fc 	movw	r3, #4092	; 0xffc
 8004788:	400b      	ands	r3, r1
 800478a:	2b00      	cmp	r3, #0
 800478c:	d00a      	beq.n	80047a4 <HAL_I2C_Init+0x138>
 800478e:	68fb      	ldr	r3, [r7, #12]
 8004790:	1e59      	subs	r1, r3, #1
 8004792:	687b      	ldr	r3, [r7, #4]
 8004794:	685b      	ldr	r3, [r3, #4]
 8004796:	005b      	lsls	r3, r3, #1
 8004798:	fbb1 f3f3 	udiv	r3, r1, r3
 800479c:	3301      	adds	r3, #1
 800479e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80047a2:	e051      	b.n	8004848 <HAL_I2C_Init+0x1dc>
 80047a4:	2304      	movs	r3, #4
 80047a6:	e04f      	b.n	8004848 <HAL_I2C_Init+0x1dc>
 80047a8:	687b      	ldr	r3, [r7, #4]
 80047aa:	689b      	ldr	r3, [r3, #8]
 80047ac:	2b00      	cmp	r3, #0
 80047ae:	d111      	bne.n	80047d4 <HAL_I2C_Init+0x168>
 80047b0:	68fb      	ldr	r3, [r7, #12]
 80047b2:	1e58      	subs	r0, r3, #1
 80047b4:	687b      	ldr	r3, [r7, #4]
 80047b6:	6859      	ldr	r1, [r3, #4]
 80047b8:	460b      	mov	r3, r1
 80047ba:	005b      	lsls	r3, r3, #1
 80047bc:	440b      	add	r3, r1
 80047be:	fbb0 f3f3 	udiv	r3, r0, r3
 80047c2:	3301      	adds	r3, #1
 80047c4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80047c8:	2b00      	cmp	r3, #0
 80047ca:	bf0c      	ite	eq
 80047cc:	2301      	moveq	r3, #1
 80047ce:	2300      	movne	r3, #0
 80047d0:	b2db      	uxtb	r3, r3
 80047d2:	e012      	b.n	80047fa <HAL_I2C_Init+0x18e>
 80047d4:	68fb      	ldr	r3, [r7, #12]
 80047d6:	1e58      	subs	r0, r3, #1
 80047d8:	687b      	ldr	r3, [r7, #4]
 80047da:	6859      	ldr	r1, [r3, #4]
 80047dc:	460b      	mov	r3, r1
 80047de:	009b      	lsls	r3, r3, #2
 80047e0:	440b      	add	r3, r1
 80047e2:	0099      	lsls	r1, r3, #2
 80047e4:	440b      	add	r3, r1
 80047e6:	fbb0 f3f3 	udiv	r3, r0, r3
 80047ea:	3301      	adds	r3, #1
 80047ec:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80047f0:	2b00      	cmp	r3, #0
 80047f2:	bf0c      	ite	eq
 80047f4:	2301      	moveq	r3, #1
 80047f6:	2300      	movne	r3, #0
 80047f8:	b2db      	uxtb	r3, r3
 80047fa:	2b00      	cmp	r3, #0
 80047fc:	d001      	beq.n	8004802 <HAL_I2C_Init+0x196>
 80047fe:	2301      	movs	r3, #1
 8004800:	e022      	b.n	8004848 <HAL_I2C_Init+0x1dc>
 8004802:	687b      	ldr	r3, [r7, #4]
 8004804:	689b      	ldr	r3, [r3, #8]
 8004806:	2b00      	cmp	r3, #0
 8004808:	d10e      	bne.n	8004828 <HAL_I2C_Init+0x1bc>
 800480a:	68fb      	ldr	r3, [r7, #12]
 800480c:	1e58      	subs	r0, r3, #1
 800480e:	687b      	ldr	r3, [r7, #4]
 8004810:	6859      	ldr	r1, [r3, #4]
 8004812:	460b      	mov	r3, r1
 8004814:	005b      	lsls	r3, r3, #1
 8004816:	440b      	add	r3, r1
 8004818:	fbb0 f3f3 	udiv	r3, r0, r3
 800481c:	3301      	adds	r3, #1
 800481e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004822:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8004826:	e00f      	b.n	8004848 <HAL_I2C_Init+0x1dc>
 8004828:	68fb      	ldr	r3, [r7, #12]
 800482a:	1e58      	subs	r0, r3, #1
 800482c:	687b      	ldr	r3, [r7, #4]
 800482e:	6859      	ldr	r1, [r3, #4]
 8004830:	460b      	mov	r3, r1
 8004832:	009b      	lsls	r3, r3, #2
 8004834:	440b      	add	r3, r1
 8004836:	0099      	lsls	r1, r3, #2
 8004838:	440b      	add	r3, r1
 800483a:	fbb0 f3f3 	udiv	r3, r0, r3
 800483e:	3301      	adds	r3, #1
 8004840:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004844:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8004848:	6879      	ldr	r1, [r7, #4]
 800484a:	6809      	ldr	r1, [r1, #0]
 800484c:	4313      	orrs	r3, r2
 800484e:	61cb      	str	r3, [r1, #28]
 8004850:	687b      	ldr	r3, [r7, #4]
 8004852:	681b      	ldr	r3, [r3, #0]
 8004854:	681b      	ldr	r3, [r3, #0]
 8004856:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 800485a:	687b      	ldr	r3, [r7, #4]
 800485c:	69da      	ldr	r2, [r3, #28]
 800485e:	687b      	ldr	r3, [r7, #4]
 8004860:	6a1b      	ldr	r3, [r3, #32]
 8004862:	431a      	orrs	r2, r3
 8004864:	687b      	ldr	r3, [r7, #4]
 8004866:	681b      	ldr	r3, [r3, #0]
 8004868:	430a      	orrs	r2, r1
 800486a:	601a      	str	r2, [r3, #0]
 800486c:	687b      	ldr	r3, [r7, #4]
 800486e:	681b      	ldr	r3, [r3, #0]
 8004870:	689b      	ldr	r3, [r3, #8]
 8004872:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 8004876:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800487a:	687a      	ldr	r2, [r7, #4]
 800487c:	6911      	ldr	r1, [r2, #16]
 800487e:	687a      	ldr	r2, [r7, #4]
 8004880:	68d2      	ldr	r2, [r2, #12]
 8004882:	4311      	orrs	r1, r2
 8004884:	687a      	ldr	r2, [r7, #4]
 8004886:	6812      	ldr	r2, [r2, #0]
 8004888:	430b      	orrs	r3, r1
 800488a:	6093      	str	r3, [r2, #8]
 800488c:	687b      	ldr	r3, [r7, #4]
 800488e:	681b      	ldr	r3, [r3, #0]
 8004890:	68db      	ldr	r3, [r3, #12]
 8004892:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 8004896:	687b      	ldr	r3, [r7, #4]
 8004898:	695a      	ldr	r2, [r3, #20]
 800489a:	687b      	ldr	r3, [r7, #4]
 800489c:	699b      	ldr	r3, [r3, #24]
 800489e:	431a      	orrs	r2, r3
 80048a0:	687b      	ldr	r3, [r7, #4]
 80048a2:	681b      	ldr	r3, [r3, #0]
 80048a4:	430a      	orrs	r2, r1
 80048a6:	60da      	str	r2, [r3, #12]
 80048a8:	687b      	ldr	r3, [r7, #4]
 80048aa:	681b      	ldr	r3, [r3, #0]
 80048ac:	681a      	ldr	r2, [r3, #0]
 80048ae:	687b      	ldr	r3, [r7, #4]
 80048b0:	681b      	ldr	r3, [r3, #0]
 80048b2:	f042 0201 	orr.w	r2, r2, #1
 80048b6:	601a      	str	r2, [r3, #0]
 80048b8:	687b      	ldr	r3, [r7, #4]
 80048ba:	2200      	movs	r2, #0
 80048bc:	641a      	str	r2, [r3, #64]	; 0x40
 80048be:	687b      	ldr	r3, [r7, #4]
 80048c0:	2220      	movs	r2, #32
 80048c2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80048c6:	687b      	ldr	r3, [r7, #4]
 80048c8:	2200      	movs	r2, #0
 80048ca:	631a      	str	r2, [r3, #48]	; 0x30
 80048cc:	687b      	ldr	r3, [r7, #4]
 80048ce:	2200      	movs	r2, #0
 80048d0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80048d4:	2300      	movs	r3, #0
 80048d6:	4618      	mov	r0, r3
 80048d8:	3710      	adds	r7, #16
 80048da:	46bd      	mov	sp, r7
 80048dc:	bd80      	pop	{r7, pc}
 80048de:	bf00      	nop
 80048e0:	000186a0 	.word	0x000186a0
 80048e4:	001e847f 	.word	0x001e847f
 80048e8:	003d08ff 	.word	0x003d08ff
 80048ec:	431bde83 	.word	0x431bde83
 80048f0:	10624dd3 	.word	0x10624dd3

080048f4 <HAL_I2C_Mem_Write>:
 80048f4:	b580      	push	{r7, lr}
 80048f6:	b088      	sub	sp, #32
 80048f8:	af02      	add	r7, sp, #8
 80048fa:	60f8      	str	r0, [r7, #12]
 80048fc:	4608      	mov	r0, r1
 80048fe:	4611      	mov	r1, r2
 8004900:	461a      	mov	r2, r3
 8004902:	4603      	mov	r3, r0
 8004904:	817b      	strh	r3, [r7, #10]
 8004906:	460b      	mov	r3, r1
 8004908:	813b      	strh	r3, [r7, #8]
 800490a:	4613      	mov	r3, r2
 800490c:	80fb      	strh	r3, [r7, #6]
 800490e:	f7fe ffa7 	bl	8003860 <HAL_GetTick>
 8004912:	6178      	str	r0, [r7, #20]
 8004914:	68fb      	ldr	r3, [r7, #12]
 8004916:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800491a:	b2db      	uxtb	r3, r3
 800491c:	2b20      	cmp	r3, #32
 800491e:	f040 80d9 	bne.w	8004ad4 <HAL_I2C_Mem_Write+0x1e0>
 8004922:	697b      	ldr	r3, [r7, #20]
 8004924:	9300      	str	r3, [sp, #0]
 8004926:	2319      	movs	r3, #25
 8004928:	2201      	movs	r2, #1
 800492a:	496d      	ldr	r1, [pc, #436]	; (8004ae0 <HAL_I2C_Mem_Write+0x1ec>)
 800492c:	68f8      	ldr	r0, [r7, #12]
 800492e:	f000 ff4d 	bl	80057cc <I2C_WaitOnFlagUntilTimeout>
 8004932:	4603      	mov	r3, r0
 8004934:	2b00      	cmp	r3, #0
 8004936:	d001      	beq.n	800493c <HAL_I2C_Mem_Write+0x48>
 8004938:	2302      	movs	r3, #2
 800493a:	e0cc      	b.n	8004ad6 <HAL_I2C_Mem_Write+0x1e2>
 800493c:	68fb      	ldr	r3, [r7, #12]
 800493e:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8004942:	2b01      	cmp	r3, #1
 8004944:	d101      	bne.n	800494a <HAL_I2C_Mem_Write+0x56>
 8004946:	2302      	movs	r3, #2
 8004948:	e0c5      	b.n	8004ad6 <HAL_I2C_Mem_Write+0x1e2>
 800494a:	68fb      	ldr	r3, [r7, #12]
 800494c:	2201      	movs	r2, #1
 800494e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004952:	68fb      	ldr	r3, [r7, #12]
 8004954:	681b      	ldr	r3, [r3, #0]
 8004956:	681b      	ldr	r3, [r3, #0]
 8004958:	f003 0301 	and.w	r3, r3, #1
 800495c:	2b01      	cmp	r3, #1
 800495e:	d007      	beq.n	8004970 <HAL_I2C_Mem_Write+0x7c>
 8004960:	68fb      	ldr	r3, [r7, #12]
 8004962:	681b      	ldr	r3, [r3, #0]
 8004964:	681a      	ldr	r2, [r3, #0]
 8004966:	68fb      	ldr	r3, [r7, #12]
 8004968:	681b      	ldr	r3, [r3, #0]
 800496a:	f042 0201 	orr.w	r2, r2, #1
 800496e:	601a      	str	r2, [r3, #0]
 8004970:	68fb      	ldr	r3, [r7, #12]
 8004972:	681b      	ldr	r3, [r3, #0]
 8004974:	681a      	ldr	r2, [r3, #0]
 8004976:	68fb      	ldr	r3, [r7, #12]
 8004978:	681b      	ldr	r3, [r3, #0]
 800497a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800497e:	601a      	str	r2, [r3, #0]
 8004980:	68fb      	ldr	r3, [r7, #12]
 8004982:	2221      	movs	r2, #33	; 0x21
 8004984:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004988:	68fb      	ldr	r3, [r7, #12]
 800498a:	2240      	movs	r2, #64	; 0x40
 800498c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004990:	68fb      	ldr	r3, [r7, #12]
 8004992:	2200      	movs	r2, #0
 8004994:	641a      	str	r2, [r3, #64]	; 0x40
 8004996:	68fb      	ldr	r3, [r7, #12]
 8004998:	6a3a      	ldr	r2, [r7, #32]
 800499a:	625a      	str	r2, [r3, #36]	; 0x24
 800499c:	68fb      	ldr	r3, [r7, #12]
 800499e:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 80049a0:	855a      	strh	r2, [r3, #42]	; 0x2a
 80049a2:	68fb      	ldr	r3, [r7, #12]
 80049a4:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80049a6:	b29a      	uxth	r2, r3
 80049a8:	68fb      	ldr	r3, [r7, #12]
 80049aa:	851a      	strh	r2, [r3, #40]	; 0x28
 80049ac:	68fb      	ldr	r3, [r7, #12]
 80049ae:	4a4d      	ldr	r2, [pc, #308]	; (8004ae4 <HAL_I2C_Mem_Write+0x1f0>)
 80049b0:	62da      	str	r2, [r3, #44]	; 0x2c
 80049b2:	88f8      	ldrh	r0, [r7, #6]
 80049b4:	893a      	ldrh	r2, [r7, #8]
 80049b6:	8979      	ldrh	r1, [r7, #10]
 80049b8:	697b      	ldr	r3, [r7, #20]
 80049ba:	9301      	str	r3, [sp, #4]
 80049bc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80049be:	9300      	str	r3, [sp, #0]
 80049c0:	4603      	mov	r3, r0
 80049c2:	68f8      	ldr	r0, [r7, #12]
 80049c4:	f000 fc72 	bl	80052ac <I2C_RequestMemoryWrite>
 80049c8:	4603      	mov	r3, r0
 80049ca:	2b00      	cmp	r3, #0
 80049cc:	d052      	beq.n	8004a74 <HAL_I2C_Mem_Write+0x180>
 80049ce:	2301      	movs	r3, #1
 80049d0:	e081      	b.n	8004ad6 <HAL_I2C_Mem_Write+0x1e2>
 80049d2:	697a      	ldr	r2, [r7, #20]
 80049d4:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80049d6:	68f8      	ldr	r0, [r7, #12]
 80049d8:	f000 ffce 	bl	8005978 <I2C_WaitOnTXEFlagUntilTimeout>
 80049dc:	4603      	mov	r3, r0
 80049de:	2b00      	cmp	r3, #0
 80049e0:	d00d      	beq.n	80049fe <HAL_I2C_Mem_Write+0x10a>
 80049e2:	68fb      	ldr	r3, [r7, #12]
 80049e4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80049e6:	2b04      	cmp	r3, #4
 80049e8:	d107      	bne.n	80049fa <HAL_I2C_Mem_Write+0x106>
 80049ea:	68fb      	ldr	r3, [r7, #12]
 80049ec:	681b      	ldr	r3, [r3, #0]
 80049ee:	681a      	ldr	r2, [r3, #0]
 80049f0:	68fb      	ldr	r3, [r7, #12]
 80049f2:	681b      	ldr	r3, [r3, #0]
 80049f4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80049f8:	601a      	str	r2, [r3, #0]
 80049fa:	2301      	movs	r3, #1
 80049fc:	e06b      	b.n	8004ad6 <HAL_I2C_Mem_Write+0x1e2>
 80049fe:	68fb      	ldr	r3, [r7, #12]
 8004a00:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a02:	781a      	ldrb	r2, [r3, #0]
 8004a04:	68fb      	ldr	r3, [r7, #12]
 8004a06:	681b      	ldr	r3, [r3, #0]
 8004a08:	611a      	str	r2, [r3, #16]
 8004a0a:	68fb      	ldr	r3, [r7, #12]
 8004a0c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a0e:	1c5a      	adds	r2, r3, #1
 8004a10:	68fb      	ldr	r3, [r7, #12]
 8004a12:	625a      	str	r2, [r3, #36]	; 0x24
 8004a14:	68fb      	ldr	r3, [r7, #12]
 8004a16:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004a18:	3b01      	subs	r3, #1
 8004a1a:	b29a      	uxth	r2, r3
 8004a1c:	68fb      	ldr	r3, [r7, #12]
 8004a1e:	851a      	strh	r2, [r3, #40]	; 0x28
 8004a20:	68fb      	ldr	r3, [r7, #12]
 8004a22:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004a24:	b29b      	uxth	r3, r3
 8004a26:	3b01      	subs	r3, #1
 8004a28:	b29a      	uxth	r2, r3
 8004a2a:	68fb      	ldr	r3, [r7, #12]
 8004a2c:	855a      	strh	r2, [r3, #42]	; 0x2a
 8004a2e:	68fb      	ldr	r3, [r7, #12]
 8004a30:	681b      	ldr	r3, [r3, #0]
 8004a32:	695b      	ldr	r3, [r3, #20]
 8004a34:	f003 0304 	and.w	r3, r3, #4
 8004a38:	2b04      	cmp	r3, #4
 8004a3a:	d11b      	bne.n	8004a74 <HAL_I2C_Mem_Write+0x180>
 8004a3c:	68fb      	ldr	r3, [r7, #12]
 8004a3e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004a40:	2b00      	cmp	r3, #0
 8004a42:	d017      	beq.n	8004a74 <HAL_I2C_Mem_Write+0x180>
 8004a44:	68fb      	ldr	r3, [r7, #12]
 8004a46:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a48:	781a      	ldrb	r2, [r3, #0]
 8004a4a:	68fb      	ldr	r3, [r7, #12]
 8004a4c:	681b      	ldr	r3, [r3, #0]
 8004a4e:	611a      	str	r2, [r3, #16]
 8004a50:	68fb      	ldr	r3, [r7, #12]
 8004a52:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a54:	1c5a      	adds	r2, r3, #1
 8004a56:	68fb      	ldr	r3, [r7, #12]
 8004a58:	625a      	str	r2, [r3, #36]	; 0x24
 8004a5a:	68fb      	ldr	r3, [r7, #12]
 8004a5c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004a5e:	3b01      	subs	r3, #1
 8004a60:	b29a      	uxth	r2, r3
 8004a62:	68fb      	ldr	r3, [r7, #12]
 8004a64:	851a      	strh	r2, [r3, #40]	; 0x28
 8004a66:	68fb      	ldr	r3, [r7, #12]
 8004a68:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004a6a:	b29b      	uxth	r3, r3
 8004a6c:	3b01      	subs	r3, #1
 8004a6e:	b29a      	uxth	r2, r3
 8004a70:	68fb      	ldr	r3, [r7, #12]
 8004a72:	855a      	strh	r2, [r3, #42]	; 0x2a
 8004a74:	68fb      	ldr	r3, [r7, #12]
 8004a76:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004a78:	2b00      	cmp	r3, #0
 8004a7a:	d1aa      	bne.n	80049d2 <HAL_I2C_Mem_Write+0xde>
 8004a7c:	697a      	ldr	r2, [r7, #20]
 8004a7e:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8004a80:	68f8      	ldr	r0, [r7, #12]
 8004a82:	f000 ffba 	bl	80059fa <I2C_WaitOnBTFFlagUntilTimeout>
 8004a86:	4603      	mov	r3, r0
 8004a88:	2b00      	cmp	r3, #0
 8004a8a:	d00d      	beq.n	8004aa8 <HAL_I2C_Mem_Write+0x1b4>
 8004a8c:	68fb      	ldr	r3, [r7, #12]
 8004a8e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004a90:	2b04      	cmp	r3, #4
 8004a92:	d107      	bne.n	8004aa4 <HAL_I2C_Mem_Write+0x1b0>
 8004a94:	68fb      	ldr	r3, [r7, #12]
 8004a96:	681b      	ldr	r3, [r3, #0]
 8004a98:	681a      	ldr	r2, [r3, #0]
 8004a9a:	68fb      	ldr	r3, [r7, #12]
 8004a9c:	681b      	ldr	r3, [r3, #0]
 8004a9e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004aa2:	601a      	str	r2, [r3, #0]
 8004aa4:	2301      	movs	r3, #1
 8004aa6:	e016      	b.n	8004ad6 <HAL_I2C_Mem_Write+0x1e2>
 8004aa8:	68fb      	ldr	r3, [r7, #12]
 8004aaa:	681b      	ldr	r3, [r3, #0]
 8004aac:	681a      	ldr	r2, [r3, #0]
 8004aae:	68fb      	ldr	r3, [r7, #12]
 8004ab0:	681b      	ldr	r3, [r3, #0]
 8004ab2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004ab6:	601a      	str	r2, [r3, #0]
 8004ab8:	68fb      	ldr	r3, [r7, #12]
 8004aba:	2220      	movs	r2, #32
 8004abc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004ac0:	68fb      	ldr	r3, [r7, #12]
 8004ac2:	2200      	movs	r2, #0
 8004ac4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004ac8:	68fb      	ldr	r3, [r7, #12]
 8004aca:	2200      	movs	r2, #0
 8004acc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004ad0:	2300      	movs	r3, #0
 8004ad2:	e000      	b.n	8004ad6 <HAL_I2C_Mem_Write+0x1e2>
 8004ad4:	2302      	movs	r3, #2
 8004ad6:	4618      	mov	r0, r3
 8004ad8:	3718      	adds	r7, #24
 8004ada:	46bd      	mov	sp, r7
 8004adc:	bd80      	pop	{r7, pc}
 8004ade:	bf00      	nop
 8004ae0:	00100002 	.word	0x00100002
 8004ae4:	ffff0000 	.word	0xffff0000

08004ae8 <HAL_I2C_Mem_Read>:
 8004ae8:	b580      	push	{r7, lr}
 8004aea:	b08c      	sub	sp, #48	; 0x30
 8004aec:	af02      	add	r7, sp, #8
 8004aee:	60f8      	str	r0, [r7, #12]
 8004af0:	4608      	mov	r0, r1
 8004af2:	4611      	mov	r1, r2
 8004af4:	461a      	mov	r2, r3
 8004af6:	4603      	mov	r3, r0
 8004af8:	817b      	strh	r3, [r7, #10]
 8004afa:	460b      	mov	r3, r1
 8004afc:	813b      	strh	r3, [r7, #8]
 8004afe:	4613      	mov	r3, r2
 8004b00:	80fb      	strh	r3, [r7, #6]
 8004b02:	f7fe fead 	bl	8003860 <HAL_GetTick>
 8004b06:	6278      	str	r0, [r7, #36]	; 0x24
 8004b08:	68fb      	ldr	r3, [r7, #12]
 8004b0a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004b0e:	b2db      	uxtb	r3, r3
 8004b10:	2b20      	cmp	r3, #32
 8004b12:	f040 8208 	bne.w	8004f26 <HAL_I2C_Mem_Read+0x43e>
 8004b16:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004b18:	9300      	str	r3, [sp, #0]
 8004b1a:	2319      	movs	r3, #25
 8004b1c:	2201      	movs	r2, #1
 8004b1e:	497b      	ldr	r1, [pc, #492]	; (8004d0c <HAL_I2C_Mem_Read+0x224>)
 8004b20:	68f8      	ldr	r0, [r7, #12]
 8004b22:	f000 fe53 	bl	80057cc <I2C_WaitOnFlagUntilTimeout>
 8004b26:	4603      	mov	r3, r0
 8004b28:	2b00      	cmp	r3, #0
 8004b2a:	d001      	beq.n	8004b30 <HAL_I2C_Mem_Read+0x48>
 8004b2c:	2302      	movs	r3, #2
 8004b2e:	e1fb      	b.n	8004f28 <HAL_I2C_Mem_Read+0x440>
 8004b30:	68fb      	ldr	r3, [r7, #12]
 8004b32:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8004b36:	2b01      	cmp	r3, #1
 8004b38:	d101      	bne.n	8004b3e <HAL_I2C_Mem_Read+0x56>
 8004b3a:	2302      	movs	r3, #2
 8004b3c:	e1f4      	b.n	8004f28 <HAL_I2C_Mem_Read+0x440>
 8004b3e:	68fb      	ldr	r3, [r7, #12]
 8004b40:	2201      	movs	r2, #1
 8004b42:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004b46:	68fb      	ldr	r3, [r7, #12]
 8004b48:	681b      	ldr	r3, [r3, #0]
 8004b4a:	681b      	ldr	r3, [r3, #0]
 8004b4c:	f003 0301 	and.w	r3, r3, #1
 8004b50:	2b01      	cmp	r3, #1
 8004b52:	d007      	beq.n	8004b64 <HAL_I2C_Mem_Read+0x7c>
 8004b54:	68fb      	ldr	r3, [r7, #12]
 8004b56:	681b      	ldr	r3, [r3, #0]
 8004b58:	681a      	ldr	r2, [r3, #0]
 8004b5a:	68fb      	ldr	r3, [r7, #12]
 8004b5c:	681b      	ldr	r3, [r3, #0]
 8004b5e:	f042 0201 	orr.w	r2, r2, #1
 8004b62:	601a      	str	r2, [r3, #0]
 8004b64:	68fb      	ldr	r3, [r7, #12]
 8004b66:	681b      	ldr	r3, [r3, #0]
 8004b68:	681a      	ldr	r2, [r3, #0]
 8004b6a:	68fb      	ldr	r3, [r7, #12]
 8004b6c:	681b      	ldr	r3, [r3, #0]
 8004b6e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8004b72:	601a      	str	r2, [r3, #0]
 8004b74:	68fb      	ldr	r3, [r7, #12]
 8004b76:	2222      	movs	r2, #34	; 0x22
 8004b78:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004b7c:	68fb      	ldr	r3, [r7, #12]
 8004b7e:	2240      	movs	r2, #64	; 0x40
 8004b80:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004b84:	68fb      	ldr	r3, [r7, #12]
 8004b86:	2200      	movs	r2, #0
 8004b88:	641a      	str	r2, [r3, #64]	; 0x40
 8004b8a:	68fb      	ldr	r3, [r7, #12]
 8004b8c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8004b8e:	625a      	str	r2, [r3, #36]	; 0x24
 8004b90:	68fb      	ldr	r3, [r7, #12]
 8004b92:	8eba      	ldrh	r2, [r7, #52]	; 0x34
 8004b94:	855a      	strh	r2, [r3, #42]	; 0x2a
 8004b96:	68fb      	ldr	r3, [r7, #12]
 8004b98:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004b9a:	b29a      	uxth	r2, r3
 8004b9c:	68fb      	ldr	r3, [r7, #12]
 8004b9e:	851a      	strh	r2, [r3, #40]	; 0x28
 8004ba0:	68fb      	ldr	r3, [r7, #12]
 8004ba2:	4a5b      	ldr	r2, [pc, #364]	; (8004d10 <HAL_I2C_Mem_Read+0x228>)
 8004ba4:	62da      	str	r2, [r3, #44]	; 0x2c
 8004ba6:	88f8      	ldrh	r0, [r7, #6]
 8004ba8:	893a      	ldrh	r2, [r7, #8]
 8004baa:	8979      	ldrh	r1, [r7, #10]
 8004bac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004bae:	9301      	str	r3, [sp, #4]
 8004bb0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004bb2:	9300      	str	r3, [sp, #0]
 8004bb4:	4603      	mov	r3, r0
 8004bb6:	68f8      	ldr	r0, [r7, #12]
 8004bb8:	f000 fc0e 	bl	80053d8 <I2C_RequestMemoryRead>
 8004bbc:	4603      	mov	r3, r0
 8004bbe:	2b00      	cmp	r3, #0
 8004bc0:	d001      	beq.n	8004bc6 <HAL_I2C_Mem_Read+0xde>
 8004bc2:	2301      	movs	r3, #1
 8004bc4:	e1b0      	b.n	8004f28 <HAL_I2C_Mem_Read+0x440>
 8004bc6:	68fb      	ldr	r3, [r7, #12]
 8004bc8:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004bca:	2b00      	cmp	r3, #0
 8004bcc:	d113      	bne.n	8004bf6 <HAL_I2C_Mem_Read+0x10e>
 8004bce:	2300      	movs	r3, #0
 8004bd0:	623b      	str	r3, [r7, #32]
 8004bd2:	68fb      	ldr	r3, [r7, #12]
 8004bd4:	681b      	ldr	r3, [r3, #0]
 8004bd6:	695b      	ldr	r3, [r3, #20]
 8004bd8:	623b      	str	r3, [r7, #32]
 8004bda:	68fb      	ldr	r3, [r7, #12]
 8004bdc:	681b      	ldr	r3, [r3, #0]
 8004bde:	699b      	ldr	r3, [r3, #24]
 8004be0:	623b      	str	r3, [r7, #32]
 8004be2:	6a3b      	ldr	r3, [r7, #32]
 8004be4:	68fb      	ldr	r3, [r7, #12]
 8004be6:	681b      	ldr	r3, [r3, #0]
 8004be8:	681a      	ldr	r2, [r3, #0]
 8004bea:	68fb      	ldr	r3, [r7, #12]
 8004bec:	681b      	ldr	r3, [r3, #0]
 8004bee:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004bf2:	601a      	str	r2, [r3, #0]
 8004bf4:	e184      	b.n	8004f00 <HAL_I2C_Mem_Read+0x418>
 8004bf6:	68fb      	ldr	r3, [r7, #12]
 8004bf8:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004bfa:	2b01      	cmp	r3, #1
 8004bfc:	d11b      	bne.n	8004c36 <HAL_I2C_Mem_Read+0x14e>
 8004bfe:	68fb      	ldr	r3, [r7, #12]
 8004c00:	681b      	ldr	r3, [r3, #0]
 8004c02:	681a      	ldr	r2, [r3, #0]
 8004c04:	68fb      	ldr	r3, [r7, #12]
 8004c06:	681b      	ldr	r3, [r3, #0]
 8004c08:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004c0c:	601a      	str	r2, [r3, #0]
 8004c0e:	2300      	movs	r3, #0
 8004c10:	61fb      	str	r3, [r7, #28]
 8004c12:	68fb      	ldr	r3, [r7, #12]
 8004c14:	681b      	ldr	r3, [r3, #0]
 8004c16:	695b      	ldr	r3, [r3, #20]
 8004c18:	61fb      	str	r3, [r7, #28]
 8004c1a:	68fb      	ldr	r3, [r7, #12]
 8004c1c:	681b      	ldr	r3, [r3, #0]
 8004c1e:	699b      	ldr	r3, [r3, #24]
 8004c20:	61fb      	str	r3, [r7, #28]
 8004c22:	69fb      	ldr	r3, [r7, #28]
 8004c24:	68fb      	ldr	r3, [r7, #12]
 8004c26:	681b      	ldr	r3, [r3, #0]
 8004c28:	681a      	ldr	r2, [r3, #0]
 8004c2a:	68fb      	ldr	r3, [r7, #12]
 8004c2c:	681b      	ldr	r3, [r3, #0]
 8004c2e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004c32:	601a      	str	r2, [r3, #0]
 8004c34:	e164      	b.n	8004f00 <HAL_I2C_Mem_Read+0x418>
 8004c36:	68fb      	ldr	r3, [r7, #12]
 8004c38:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004c3a:	2b02      	cmp	r3, #2
 8004c3c:	d11b      	bne.n	8004c76 <HAL_I2C_Mem_Read+0x18e>
 8004c3e:	68fb      	ldr	r3, [r7, #12]
 8004c40:	681b      	ldr	r3, [r3, #0]
 8004c42:	681a      	ldr	r2, [r3, #0]
 8004c44:	68fb      	ldr	r3, [r7, #12]
 8004c46:	681b      	ldr	r3, [r3, #0]
 8004c48:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004c4c:	601a      	str	r2, [r3, #0]
 8004c4e:	68fb      	ldr	r3, [r7, #12]
 8004c50:	681b      	ldr	r3, [r3, #0]
 8004c52:	681a      	ldr	r2, [r3, #0]
 8004c54:	68fb      	ldr	r3, [r7, #12]
 8004c56:	681b      	ldr	r3, [r3, #0]
 8004c58:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8004c5c:	601a      	str	r2, [r3, #0]
 8004c5e:	2300      	movs	r3, #0
 8004c60:	61bb      	str	r3, [r7, #24]
 8004c62:	68fb      	ldr	r3, [r7, #12]
 8004c64:	681b      	ldr	r3, [r3, #0]
 8004c66:	695b      	ldr	r3, [r3, #20]
 8004c68:	61bb      	str	r3, [r7, #24]
 8004c6a:	68fb      	ldr	r3, [r7, #12]
 8004c6c:	681b      	ldr	r3, [r3, #0]
 8004c6e:	699b      	ldr	r3, [r3, #24]
 8004c70:	61bb      	str	r3, [r7, #24]
 8004c72:	69bb      	ldr	r3, [r7, #24]
 8004c74:	e144      	b.n	8004f00 <HAL_I2C_Mem_Read+0x418>
 8004c76:	2300      	movs	r3, #0
 8004c78:	617b      	str	r3, [r7, #20]
 8004c7a:	68fb      	ldr	r3, [r7, #12]
 8004c7c:	681b      	ldr	r3, [r3, #0]
 8004c7e:	695b      	ldr	r3, [r3, #20]
 8004c80:	617b      	str	r3, [r7, #20]
 8004c82:	68fb      	ldr	r3, [r7, #12]
 8004c84:	681b      	ldr	r3, [r3, #0]
 8004c86:	699b      	ldr	r3, [r3, #24]
 8004c88:	617b      	str	r3, [r7, #20]
 8004c8a:	697b      	ldr	r3, [r7, #20]
 8004c8c:	e138      	b.n	8004f00 <HAL_I2C_Mem_Read+0x418>
 8004c8e:	68fb      	ldr	r3, [r7, #12]
 8004c90:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004c92:	2b03      	cmp	r3, #3
 8004c94:	f200 80f1 	bhi.w	8004e7a <HAL_I2C_Mem_Read+0x392>
 8004c98:	68fb      	ldr	r3, [r7, #12]
 8004c9a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004c9c:	2b01      	cmp	r3, #1
 8004c9e:	d123      	bne.n	8004ce8 <HAL_I2C_Mem_Read+0x200>
 8004ca0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004ca2:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8004ca4:	68f8      	ldr	r0, [r7, #12]
 8004ca6:	f000 fee9 	bl	8005a7c <I2C_WaitOnRXNEFlagUntilTimeout>
 8004caa:	4603      	mov	r3, r0
 8004cac:	2b00      	cmp	r3, #0
 8004cae:	d001      	beq.n	8004cb4 <HAL_I2C_Mem_Read+0x1cc>
 8004cb0:	2301      	movs	r3, #1
 8004cb2:	e139      	b.n	8004f28 <HAL_I2C_Mem_Read+0x440>
 8004cb4:	68fb      	ldr	r3, [r7, #12]
 8004cb6:	681b      	ldr	r3, [r3, #0]
 8004cb8:	691a      	ldr	r2, [r3, #16]
 8004cba:	68fb      	ldr	r3, [r7, #12]
 8004cbc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004cbe:	b2d2      	uxtb	r2, r2
 8004cc0:	701a      	strb	r2, [r3, #0]
 8004cc2:	68fb      	ldr	r3, [r7, #12]
 8004cc4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004cc6:	1c5a      	adds	r2, r3, #1
 8004cc8:	68fb      	ldr	r3, [r7, #12]
 8004cca:	625a      	str	r2, [r3, #36]	; 0x24
 8004ccc:	68fb      	ldr	r3, [r7, #12]
 8004cce:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004cd0:	3b01      	subs	r3, #1
 8004cd2:	b29a      	uxth	r2, r3
 8004cd4:	68fb      	ldr	r3, [r7, #12]
 8004cd6:	851a      	strh	r2, [r3, #40]	; 0x28
 8004cd8:	68fb      	ldr	r3, [r7, #12]
 8004cda:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004cdc:	b29b      	uxth	r3, r3
 8004cde:	3b01      	subs	r3, #1
 8004ce0:	b29a      	uxth	r2, r3
 8004ce2:	68fb      	ldr	r3, [r7, #12]
 8004ce4:	855a      	strh	r2, [r3, #42]	; 0x2a
 8004ce6:	e10b      	b.n	8004f00 <HAL_I2C_Mem_Read+0x418>
 8004ce8:	68fb      	ldr	r3, [r7, #12]
 8004cea:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004cec:	2b02      	cmp	r3, #2
 8004cee:	d14e      	bne.n	8004d8e <HAL_I2C_Mem_Read+0x2a6>
 8004cf0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004cf2:	9300      	str	r3, [sp, #0]
 8004cf4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004cf6:	2200      	movs	r2, #0
 8004cf8:	4906      	ldr	r1, [pc, #24]	; (8004d14 <HAL_I2C_Mem_Read+0x22c>)
 8004cfa:	68f8      	ldr	r0, [r7, #12]
 8004cfc:	f000 fd66 	bl	80057cc <I2C_WaitOnFlagUntilTimeout>
 8004d00:	4603      	mov	r3, r0
 8004d02:	2b00      	cmp	r3, #0
 8004d04:	d008      	beq.n	8004d18 <HAL_I2C_Mem_Read+0x230>
 8004d06:	2301      	movs	r3, #1
 8004d08:	e10e      	b.n	8004f28 <HAL_I2C_Mem_Read+0x440>
 8004d0a:	bf00      	nop
 8004d0c:	00100002 	.word	0x00100002
 8004d10:	ffff0000 	.word	0xffff0000
 8004d14:	00010004 	.word	0x00010004
 8004d18:	68fb      	ldr	r3, [r7, #12]
 8004d1a:	681b      	ldr	r3, [r3, #0]
 8004d1c:	681a      	ldr	r2, [r3, #0]
 8004d1e:	68fb      	ldr	r3, [r7, #12]
 8004d20:	681b      	ldr	r3, [r3, #0]
 8004d22:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004d26:	601a      	str	r2, [r3, #0]
 8004d28:	68fb      	ldr	r3, [r7, #12]
 8004d2a:	681b      	ldr	r3, [r3, #0]
 8004d2c:	691a      	ldr	r2, [r3, #16]
 8004d2e:	68fb      	ldr	r3, [r7, #12]
 8004d30:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d32:	b2d2      	uxtb	r2, r2
 8004d34:	701a      	strb	r2, [r3, #0]
 8004d36:	68fb      	ldr	r3, [r7, #12]
 8004d38:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d3a:	1c5a      	adds	r2, r3, #1
 8004d3c:	68fb      	ldr	r3, [r7, #12]
 8004d3e:	625a      	str	r2, [r3, #36]	; 0x24
 8004d40:	68fb      	ldr	r3, [r7, #12]
 8004d42:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004d44:	3b01      	subs	r3, #1
 8004d46:	b29a      	uxth	r2, r3
 8004d48:	68fb      	ldr	r3, [r7, #12]
 8004d4a:	851a      	strh	r2, [r3, #40]	; 0x28
 8004d4c:	68fb      	ldr	r3, [r7, #12]
 8004d4e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004d50:	b29b      	uxth	r3, r3
 8004d52:	3b01      	subs	r3, #1
 8004d54:	b29a      	uxth	r2, r3
 8004d56:	68fb      	ldr	r3, [r7, #12]
 8004d58:	855a      	strh	r2, [r3, #42]	; 0x2a
 8004d5a:	68fb      	ldr	r3, [r7, #12]
 8004d5c:	681b      	ldr	r3, [r3, #0]
 8004d5e:	691a      	ldr	r2, [r3, #16]
 8004d60:	68fb      	ldr	r3, [r7, #12]
 8004d62:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d64:	b2d2      	uxtb	r2, r2
 8004d66:	701a      	strb	r2, [r3, #0]
 8004d68:	68fb      	ldr	r3, [r7, #12]
 8004d6a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d6c:	1c5a      	adds	r2, r3, #1
 8004d6e:	68fb      	ldr	r3, [r7, #12]
 8004d70:	625a      	str	r2, [r3, #36]	; 0x24
 8004d72:	68fb      	ldr	r3, [r7, #12]
 8004d74:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004d76:	3b01      	subs	r3, #1
 8004d78:	b29a      	uxth	r2, r3
 8004d7a:	68fb      	ldr	r3, [r7, #12]
 8004d7c:	851a      	strh	r2, [r3, #40]	; 0x28
 8004d7e:	68fb      	ldr	r3, [r7, #12]
 8004d80:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004d82:	b29b      	uxth	r3, r3
 8004d84:	3b01      	subs	r3, #1
 8004d86:	b29a      	uxth	r2, r3
 8004d88:	68fb      	ldr	r3, [r7, #12]
 8004d8a:	855a      	strh	r2, [r3, #42]	; 0x2a
 8004d8c:	e0b8      	b.n	8004f00 <HAL_I2C_Mem_Read+0x418>
 8004d8e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004d90:	9300      	str	r3, [sp, #0]
 8004d92:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004d94:	2200      	movs	r2, #0
 8004d96:	4966      	ldr	r1, [pc, #408]	; (8004f30 <HAL_I2C_Mem_Read+0x448>)
 8004d98:	68f8      	ldr	r0, [r7, #12]
 8004d9a:	f000 fd17 	bl	80057cc <I2C_WaitOnFlagUntilTimeout>
 8004d9e:	4603      	mov	r3, r0
 8004da0:	2b00      	cmp	r3, #0
 8004da2:	d001      	beq.n	8004da8 <HAL_I2C_Mem_Read+0x2c0>
 8004da4:	2301      	movs	r3, #1
 8004da6:	e0bf      	b.n	8004f28 <HAL_I2C_Mem_Read+0x440>
 8004da8:	68fb      	ldr	r3, [r7, #12]
 8004daa:	681b      	ldr	r3, [r3, #0]
 8004dac:	681a      	ldr	r2, [r3, #0]
 8004dae:	68fb      	ldr	r3, [r7, #12]
 8004db0:	681b      	ldr	r3, [r3, #0]
 8004db2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004db6:	601a      	str	r2, [r3, #0]
 8004db8:	68fb      	ldr	r3, [r7, #12]
 8004dba:	681b      	ldr	r3, [r3, #0]
 8004dbc:	691a      	ldr	r2, [r3, #16]
 8004dbe:	68fb      	ldr	r3, [r7, #12]
 8004dc0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004dc2:	b2d2      	uxtb	r2, r2
 8004dc4:	701a      	strb	r2, [r3, #0]
 8004dc6:	68fb      	ldr	r3, [r7, #12]
 8004dc8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004dca:	1c5a      	adds	r2, r3, #1
 8004dcc:	68fb      	ldr	r3, [r7, #12]
 8004dce:	625a      	str	r2, [r3, #36]	; 0x24
 8004dd0:	68fb      	ldr	r3, [r7, #12]
 8004dd2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004dd4:	3b01      	subs	r3, #1
 8004dd6:	b29a      	uxth	r2, r3
 8004dd8:	68fb      	ldr	r3, [r7, #12]
 8004dda:	851a      	strh	r2, [r3, #40]	; 0x28
 8004ddc:	68fb      	ldr	r3, [r7, #12]
 8004dde:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004de0:	b29b      	uxth	r3, r3
 8004de2:	3b01      	subs	r3, #1
 8004de4:	b29a      	uxth	r2, r3
 8004de6:	68fb      	ldr	r3, [r7, #12]
 8004de8:	855a      	strh	r2, [r3, #42]	; 0x2a
 8004dea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004dec:	9300      	str	r3, [sp, #0]
 8004dee:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004df0:	2200      	movs	r2, #0
 8004df2:	494f      	ldr	r1, [pc, #316]	; (8004f30 <HAL_I2C_Mem_Read+0x448>)
 8004df4:	68f8      	ldr	r0, [r7, #12]
 8004df6:	f000 fce9 	bl	80057cc <I2C_WaitOnFlagUntilTimeout>
 8004dfa:	4603      	mov	r3, r0
 8004dfc:	2b00      	cmp	r3, #0
 8004dfe:	d001      	beq.n	8004e04 <HAL_I2C_Mem_Read+0x31c>
 8004e00:	2301      	movs	r3, #1
 8004e02:	e091      	b.n	8004f28 <HAL_I2C_Mem_Read+0x440>
 8004e04:	68fb      	ldr	r3, [r7, #12]
 8004e06:	681b      	ldr	r3, [r3, #0]
 8004e08:	681a      	ldr	r2, [r3, #0]
 8004e0a:	68fb      	ldr	r3, [r7, #12]
 8004e0c:	681b      	ldr	r3, [r3, #0]
 8004e0e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004e12:	601a      	str	r2, [r3, #0]
 8004e14:	68fb      	ldr	r3, [r7, #12]
 8004e16:	681b      	ldr	r3, [r3, #0]
 8004e18:	691a      	ldr	r2, [r3, #16]
 8004e1a:	68fb      	ldr	r3, [r7, #12]
 8004e1c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e1e:	b2d2      	uxtb	r2, r2
 8004e20:	701a      	strb	r2, [r3, #0]
 8004e22:	68fb      	ldr	r3, [r7, #12]
 8004e24:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e26:	1c5a      	adds	r2, r3, #1
 8004e28:	68fb      	ldr	r3, [r7, #12]
 8004e2a:	625a      	str	r2, [r3, #36]	; 0x24
 8004e2c:	68fb      	ldr	r3, [r7, #12]
 8004e2e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004e30:	3b01      	subs	r3, #1
 8004e32:	b29a      	uxth	r2, r3
 8004e34:	68fb      	ldr	r3, [r7, #12]
 8004e36:	851a      	strh	r2, [r3, #40]	; 0x28
 8004e38:	68fb      	ldr	r3, [r7, #12]
 8004e3a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004e3c:	b29b      	uxth	r3, r3
 8004e3e:	3b01      	subs	r3, #1
 8004e40:	b29a      	uxth	r2, r3
 8004e42:	68fb      	ldr	r3, [r7, #12]
 8004e44:	855a      	strh	r2, [r3, #42]	; 0x2a
 8004e46:	68fb      	ldr	r3, [r7, #12]
 8004e48:	681b      	ldr	r3, [r3, #0]
 8004e4a:	691a      	ldr	r2, [r3, #16]
 8004e4c:	68fb      	ldr	r3, [r7, #12]
 8004e4e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e50:	b2d2      	uxtb	r2, r2
 8004e52:	701a      	strb	r2, [r3, #0]
 8004e54:	68fb      	ldr	r3, [r7, #12]
 8004e56:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e58:	1c5a      	adds	r2, r3, #1
 8004e5a:	68fb      	ldr	r3, [r7, #12]
 8004e5c:	625a      	str	r2, [r3, #36]	; 0x24
 8004e5e:	68fb      	ldr	r3, [r7, #12]
 8004e60:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004e62:	3b01      	subs	r3, #1
 8004e64:	b29a      	uxth	r2, r3
 8004e66:	68fb      	ldr	r3, [r7, #12]
 8004e68:	851a      	strh	r2, [r3, #40]	; 0x28
 8004e6a:	68fb      	ldr	r3, [r7, #12]
 8004e6c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004e6e:	b29b      	uxth	r3, r3
 8004e70:	3b01      	subs	r3, #1
 8004e72:	b29a      	uxth	r2, r3
 8004e74:	68fb      	ldr	r3, [r7, #12]
 8004e76:	855a      	strh	r2, [r3, #42]	; 0x2a
 8004e78:	e042      	b.n	8004f00 <HAL_I2C_Mem_Read+0x418>
 8004e7a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004e7c:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8004e7e:	68f8      	ldr	r0, [r7, #12]
 8004e80:	f000 fdfc 	bl	8005a7c <I2C_WaitOnRXNEFlagUntilTimeout>
 8004e84:	4603      	mov	r3, r0
 8004e86:	2b00      	cmp	r3, #0
 8004e88:	d001      	beq.n	8004e8e <HAL_I2C_Mem_Read+0x3a6>
 8004e8a:	2301      	movs	r3, #1
 8004e8c:	e04c      	b.n	8004f28 <HAL_I2C_Mem_Read+0x440>
 8004e8e:	68fb      	ldr	r3, [r7, #12]
 8004e90:	681b      	ldr	r3, [r3, #0]
 8004e92:	691a      	ldr	r2, [r3, #16]
 8004e94:	68fb      	ldr	r3, [r7, #12]
 8004e96:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e98:	b2d2      	uxtb	r2, r2
 8004e9a:	701a      	strb	r2, [r3, #0]
 8004e9c:	68fb      	ldr	r3, [r7, #12]
 8004e9e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ea0:	1c5a      	adds	r2, r3, #1
 8004ea2:	68fb      	ldr	r3, [r7, #12]
 8004ea4:	625a      	str	r2, [r3, #36]	; 0x24
 8004ea6:	68fb      	ldr	r3, [r7, #12]
 8004ea8:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004eaa:	3b01      	subs	r3, #1
 8004eac:	b29a      	uxth	r2, r3
 8004eae:	68fb      	ldr	r3, [r7, #12]
 8004eb0:	851a      	strh	r2, [r3, #40]	; 0x28
 8004eb2:	68fb      	ldr	r3, [r7, #12]
 8004eb4:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004eb6:	b29b      	uxth	r3, r3
 8004eb8:	3b01      	subs	r3, #1
 8004eba:	b29a      	uxth	r2, r3
 8004ebc:	68fb      	ldr	r3, [r7, #12]
 8004ebe:	855a      	strh	r2, [r3, #42]	; 0x2a
 8004ec0:	68fb      	ldr	r3, [r7, #12]
 8004ec2:	681b      	ldr	r3, [r3, #0]
 8004ec4:	695b      	ldr	r3, [r3, #20]
 8004ec6:	f003 0304 	and.w	r3, r3, #4
 8004eca:	2b04      	cmp	r3, #4
 8004ecc:	d118      	bne.n	8004f00 <HAL_I2C_Mem_Read+0x418>
 8004ece:	68fb      	ldr	r3, [r7, #12]
 8004ed0:	681b      	ldr	r3, [r3, #0]
 8004ed2:	691a      	ldr	r2, [r3, #16]
 8004ed4:	68fb      	ldr	r3, [r7, #12]
 8004ed6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ed8:	b2d2      	uxtb	r2, r2
 8004eda:	701a      	strb	r2, [r3, #0]
 8004edc:	68fb      	ldr	r3, [r7, #12]
 8004ede:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ee0:	1c5a      	adds	r2, r3, #1
 8004ee2:	68fb      	ldr	r3, [r7, #12]
 8004ee4:	625a      	str	r2, [r3, #36]	; 0x24
 8004ee6:	68fb      	ldr	r3, [r7, #12]
 8004ee8:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004eea:	3b01      	subs	r3, #1
 8004eec:	b29a      	uxth	r2, r3
 8004eee:	68fb      	ldr	r3, [r7, #12]
 8004ef0:	851a      	strh	r2, [r3, #40]	; 0x28
 8004ef2:	68fb      	ldr	r3, [r7, #12]
 8004ef4:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004ef6:	b29b      	uxth	r3, r3
 8004ef8:	3b01      	subs	r3, #1
 8004efa:	b29a      	uxth	r2, r3
 8004efc:	68fb      	ldr	r3, [r7, #12]
 8004efe:	855a      	strh	r2, [r3, #42]	; 0x2a
 8004f00:	68fb      	ldr	r3, [r7, #12]
 8004f02:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004f04:	2b00      	cmp	r3, #0
 8004f06:	f47f aec2 	bne.w	8004c8e <HAL_I2C_Mem_Read+0x1a6>
 8004f0a:	68fb      	ldr	r3, [r7, #12]
 8004f0c:	2220      	movs	r2, #32
 8004f0e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004f12:	68fb      	ldr	r3, [r7, #12]
 8004f14:	2200      	movs	r2, #0
 8004f16:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004f1a:	68fb      	ldr	r3, [r7, #12]
 8004f1c:	2200      	movs	r2, #0
 8004f1e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004f22:	2300      	movs	r3, #0
 8004f24:	e000      	b.n	8004f28 <HAL_I2C_Mem_Read+0x440>
 8004f26:	2302      	movs	r3, #2
 8004f28:	4618      	mov	r0, r3
 8004f2a:	3728      	adds	r7, #40	; 0x28
 8004f2c:	46bd      	mov	sp, r7
 8004f2e:	bd80      	pop	{r7, pc}
 8004f30:	00010004 	.word	0x00010004

08004f34 <HAL_I2C_Mem_Read_DMA>:
 8004f34:	b580      	push	{r7, lr}
 8004f36:	b08c      	sub	sp, #48	; 0x30
 8004f38:	af02      	add	r7, sp, #8
 8004f3a:	60f8      	str	r0, [r7, #12]
 8004f3c:	4608      	mov	r0, r1
 8004f3e:	4611      	mov	r1, r2
 8004f40:	461a      	mov	r2, r3
 8004f42:	4603      	mov	r3, r0
 8004f44:	817b      	strh	r3, [r7, #10]
 8004f46:	460b      	mov	r3, r1
 8004f48:	813b      	strh	r3, [r7, #8]
 8004f4a:	4613      	mov	r3, r2
 8004f4c:	80fb      	strh	r3, [r7, #6]
 8004f4e:	f7fe fc87 	bl	8003860 <HAL_GetTick>
 8004f52:	6278      	str	r0, [r7, #36]	; 0x24
 8004f54:	2300      	movs	r3, #0
 8004f56:	61fb      	str	r3, [r7, #28]
 8004f58:	68fb      	ldr	r3, [r7, #12]
 8004f5a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004f5e:	b2db      	uxtb	r3, r3
 8004f60:	2b20      	cmp	r3, #32
 8004f62:	f040 8176 	bne.w	8005252 <HAL_I2C_Mem_Read_DMA+0x31e>
 8004f66:	4b95      	ldr	r3, [pc, #596]	; (80051bc <HAL_I2C_Mem_Read_DMA+0x288>)
 8004f68:	681b      	ldr	r3, [r3, #0]
 8004f6a:	08db      	lsrs	r3, r3, #3
 8004f6c:	4a94      	ldr	r2, [pc, #592]	; (80051c0 <HAL_I2C_Mem_Read_DMA+0x28c>)
 8004f6e:	fba2 2303 	umull	r2, r3, r2, r3
 8004f72:	0a1a      	lsrs	r2, r3, #8
 8004f74:	4613      	mov	r3, r2
 8004f76:	009b      	lsls	r3, r3, #2
 8004f78:	4413      	add	r3, r2
 8004f7a:	009a      	lsls	r2, r3, #2
 8004f7c:	4413      	add	r3, r2
 8004f7e:	61fb      	str	r3, [r7, #28]
 8004f80:	69fb      	ldr	r3, [r7, #28]
 8004f82:	3b01      	subs	r3, #1
 8004f84:	61fb      	str	r3, [r7, #28]
 8004f86:	69fb      	ldr	r3, [r7, #28]
 8004f88:	2b00      	cmp	r3, #0
 8004f8a:	d116      	bne.n	8004fba <HAL_I2C_Mem_Read_DMA+0x86>
 8004f8c:	68fb      	ldr	r3, [r7, #12]
 8004f8e:	2200      	movs	r2, #0
 8004f90:	631a      	str	r2, [r3, #48]	; 0x30
 8004f92:	68fb      	ldr	r3, [r7, #12]
 8004f94:	2220      	movs	r2, #32
 8004f96:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004f9a:	68fb      	ldr	r3, [r7, #12]
 8004f9c:	2200      	movs	r2, #0
 8004f9e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004fa2:	68fb      	ldr	r3, [r7, #12]
 8004fa4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004fa6:	f043 0220 	orr.w	r2, r3, #32
 8004faa:	68fb      	ldr	r3, [r7, #12]
 8004fac:	641a      	str	r2, [r3, #64]	; 0x40
 8004fae:	68fb      	ldr	r3, [r7, #12]
 8004fb0:	2200      	movs	r2, #0
 8004fb2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004fb6:	2301      	movs	r3, #1
 8004fb8:	e14c      	b.n	8005254 <HAL_I2C_Mem_Read_DMA+0x320>
 8004fba:	68fb      	ldr	r3, [r7, #12]
 8004fbc:	681b      	ldr	r3, [r3, #0]
 8004fbe:	699b      	ldr	r3, [r3, #24]
 8004fc0:	f003 0302 	and.w	r3, r3, #2
 8004fc4:	2b02      	cmp	r3, #2
 8004fc6:	d0db      	beq.n	8004f80 <HAL_I2C_Mem_Read_DMA+0x4c>
 8004fc8:	68fb      	ldr	r3, [r7, #12]
 8004fca:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8004fce:	2b01      	cmp	r3, #1
 8004fd0:	d101      	bne.n	8004fd6 <HAL_I2C_Mem_Read_DMA+0xa2>
 8004fd2:	2302      	movs	r3, #2
 8004fd4:	e13e      	b.n	8005254 <HAL_I2C_Mem_Read_DMA+0x320>
 8004fd6:	68fb      	ldr	r3, [r7, #12]
 8004fd8:	2201      	movs	r2, #1
 8004fda:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004fde:	68fb      	ldr	r3, [r7, #12]
 8004fe0:	681b      	ldr	r3, [r3, #0]
 8004fe2:	681b      	ldr	r3, [r3, #0]
 8004fe4:	f003 0301 	and.w	r3, r3, #1
 8004fe8:	2b01      	cmp	r3, #1
 8004fea:	d007      	beq.n	8004ffc <HAL_I2C_Mem_Read_DMA+0xc8>
 8004fec:	68fb      	ldr	r3, [r7, #12]
 8004fee:	681b      	ldr	r3, [r3, #0]
 8004ff0:	681a      	ldr	r2, [r3, #0]
 8004ff2:	68fb      	ldr	r3, [r7, #12]
 8004ff4:	681b      	ldr	r3, [r3, #0]
 8004ff6:	f042 0201 	orr.w	r2, r2, #1
 8004ffa:	601a      	str	r2, [r3, #0]
 8004ffc:	68fb      	ldr	r3, [r7, #12]
 8004ffe:	681b      	ldr	r3, [r3, #0]
 8005000:	681a      	ldr	r2, [r3, #0]
 8005002:	68fb      	ldr	r3, [r7, #12]
 8005004:	681b      	ldr	r3, [r3, #0]
 8005006:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800500a:	601a      	str	r2, [r3, #0]
 800500c:	68fb      	ldr	r3, [r7, #12]
 800500e:	2222      	movs	r2, #34	; 0x22
 8005010:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005014:	68fb      	ldr	r3, [r7, #12]
 8005016:	2240      	movs	r2, #64	; 0x40
 8005018:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800501c:	68fb      	ldr	r3, [r7, #12]
 800501e:	2200      	movs	r2, #0
 8005020:	641a      	str	r2, [r3, #64]	; 0x40
 8005022:	68fb      	ldr	r3, [r7, #12]
 8005024:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8005026:	625a      	str	r2, [r3, #36]	; 0x24
 8005028:	68fb      	ldr	r3, [r7, #12]
 800502a:	8eba      	ldrh	r2, [r7, #52]	; 0x34
 800502c:	855a      	strh	r2, [r3, #42]	; 0x2a
 800502e:	68fb      	ldr	r3, [r7, #12]
 8005030:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005032:	b29a      	uxth	r2, r3
 8005034:	68fb      	ldr	r3, [r7, #12]
 8005036:	851a      	strh	r2, [r3, #40]	; 0x28
 8005038:	68fb      	ldr	r3, [r7, #12]
 800503a:	4a62      	ldr	r2, [pc, #392]	; (80051c4 <HAL_I2C_Mem_Read_DMA+0x290>)
 800503c:	62da      	str	r2, [r3, #44]	; 0x2c
 800503e:	897a      	ldrh	r2, [r7, #10]
 8005040:	68fb      	ldr	r3, [r7, #12]
 8005042:	645a      	str	r2, [r3, #68]	; 0x44
 8005044:	893a      	ldrh	r2, [r7, #8]
 8005046:	68fb      	ldr	r3, [r7, #12]
 8005048:	649a      	str	r2, [r3, #72]	; 0x48
 800504a:	88fa      	ldrh	r2, [r7, #6]
 800504c:	68fb      	ldr	r3, [r7, #12]
 800504e:	64da      	str	r2, [r3, #76]	; 0x4c
 8005050:	68fb      	ldr	r3, [r7, #12]
 8005052:	2200      	movs	r2, #0
 8005054:	651a      	str	r2, [r3, #80]	; 0x50
 8005056:	68fb      	ldr	r3, [r7, #12]
 8005058:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800505a:	2b00      	cmp	r3, #0
 800505c:	f000 80cc 	beq.w	80051f8 <HAL_I2C_Mem_Read_DMA+0x2c4>
 8005060:	68fb      	ldr	r3, [r7, #12]
 8005062:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005064:	2b00      	cmp	r3, #0
 8005066:	d02d      	beq.n	80050c4 <HAL_I2C_Mem_Read_DMA+0x190>
 8005068:	68fb      	ldr	r3, [r7, #12]
 800506a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800506c:	4a56      	ldr	r2, [pc, #344]	; (80051c8 <HAL_I2C_Mem_Read_DMA+0x294>)
 800506e:	63da      	str	r2, [r3, #60]	; 0x3c
 8005070:	68fb      	ldr	r3, [r7, #12]
 8005072:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005074:	4a55      	ldr	r2, [pc, #340]	; (80051cc <HAL_I2C_Mem_Read_DMA+0x298>)
 8005076:	64da      	str	r2, [r3, #76]	; 0x4c
 8005078:	68fb      	ldr	r3, [r7, #12]
 800507a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800507c:	2200      	movs	r2, #0
 800507e:	641a      	str	r2, [r3, #64]	; 0x40
 8005080:	68fb      	ldr	r3, [r7, #12]
 8005082:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005084:	2200      	movs	r2, #0
 8005086:	645a      	str	r2, [r3, #68]	; 0x44
 8005088:	68fb      	ldr	r3, [r7, #12]
 800508a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800508c:	2200      	movs	r2, #0
 800508e:	649a      	str	r2, [r3, #72]	; 0x48
 8005090:	68fb      	ldr	r3, [r7, #12]
 8005092:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005094:	2200      	movs	r2, #0
 8005096:	651a      	str	r2, [r3, #80]	; 0x50
 8005098:	68fb      	ldr	r3, [r7, #12]
 800509a:	6b98      	ldr	r0, [r3, #56]	; 0x38
 800509c:	68fb      	ldr	r3, [r7, #12]
 800509e:	681b      	ldr	r3, [r3, #0]
 80050a0:	3310      	adds	r3, #16
 80050a2:	4619      	mov	r1, r3
 80050a4:	68fb      	ldr	r3, [r7, #12]
 80050a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80050a8:	461a      	mov	r2, r3
 80050aa:	68fb      	ldr	r3, [r7, #12]
 80050ac:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80050ae:	f7fe fdc7 	bl	8003c40 <HAL_DMA_Start_IT>
 80050b2:	4603      	mov	r3, r0
 80050b4:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80050b8:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 80050bc:	2b00      	cmp	r3, #0
 80050be:	f040 8087 	bne.w	80051d0 <HAL_I2C_Mem_Read_DMA+0x29c>
 80050c2:	e013      	b.n	80050ec <HAL_I2C_Mem_Read_DMA+0x1b8>
 80050c4:	68fb      	ldr	r3, [r7, #12]
 80050c6:	2220      	movs	r2, #32
 80050c8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80050cc:	68fb      	ldr	r3, [r7, #12]
 80050ce:	2200      	movs	r2, #0
 80050d0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80050d4:	68fb      	ldr	r3, [r7, #12]
 80050d6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80050d8:	f043 0280 	orr.w	r2, r3, #128	; 0x80
 80050dc:	68fb      	ldr	r3, [r7, #12]
 80050de:	641a      	str	r2, [r3, #64]	; 0x40
 80050e0:	68fb      	ldr	r3, [r7, #12]
 80050e2:	2200      	movs	r2, #0
 80050e4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80050e8:	2301      	movs	r3, #1
 80050ea:	e0b3      	b.n	8005254 <HAL_I2C_Mem_Read_DMA+0x320>
 80050ec:	88f8      	ldrh	r0, [r7, #6]
 80050ee:	893a      	ldrh	r2, [r7, #8]
 80050f0:	8979      	ldrh	r1, [r7, #10]
 80050f2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80050f4:	9301      	str	r3, [sp, #4]
 80050f6:	2323      	movs	r3, #35	; 0x23
 80050f8:	9300      	str	r3, [sp, #0]
 80050fa:	4603      	mov	r3, r0
 80050fc:	68f8      	ldr	r0, [r7, #12]
 80050fe:	f000 f96b 	bl	80053d8 <I2C_RequestMemoryRead>
 8005102:	4603      	mov	r3, r0
 8005104:	2b00      	cmp	r3, #0
 8005106:	d023      	beq.n	8005150 <HAL_I2C_Mem_Read_DMA+0x21c>
 8005108:	68fb      	ldr	r3, [r7, #12]
 800510a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800510c:	4618      	mov	r0, r3
 800510e:	f7fe fe5f 	bl	8003dd0 <HAL_DMA_Abort_IT>
 8005112:	4603      	mov	r3, r0
 8005114:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8005118:	68fb      	ldr	r3, [r7, #12]
 800511a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800511c:	2200      	movs	r2, #0
 800511e:	63da      	str	r2, [r3, #60]	; 0x3c
 8005120:	68fb      	ldr	r3, [r7, #12]
 8005122:	681b      	ldr	r3, [r3, #0]
 8005124:	681a      	ldr	r2, [r3, #0]
 8005126:	68fb      	ldr	r3, [r7, #12]
 8005128:	681b      	ldr	r3, [r3, #0]
 800512a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800512e:	601a      	str	r2, [r3, #0]
 8005130:	68fb      	ldr	r3, [r7, #12]
 8005132:	2200      	movs	r2, #0
 8005134:	851a      	strh	r2, [r3, #40]	; 0x28
 8005136:	68fb      	ldr	r3, [r7, #12]
 8005138:	2200      	movs	r2, #0
 800513a:	855a      	strh	r2, [r3, #42]	; 0x2a
 800513c:	68fb      	ldr	r3, [r7, #12]
 800513e:	681b      	ldr	r3, [r3, #0]
 8005140:	681a      	ldr	r2, [r3, #0]
 8005142:	68fb      	ldr	r3, [r7, #12]
 8005144:	681b      	ldr	r3, [r3, #0]
 8005146:	f022 0201 	bic.w	r2, r2, #1
 800514a:	601a      	str	r2, [r3, #0]
 800514c:	2301      	movs	r3, #1
 800514e:	e081      	b.n	8005254 <HAL_I2C_Mem_Read_DMA+0x320>
 8005150:	68fb      	ldr	r3, [r7, #12]
 8005152:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005154:	2b01      	cmp	r3, #1
 8005156:	d108      	bne.n	800516a <HAL_I2C_Mem_Read_DMA+0x236>
 8005158:	68fb      	ldr	r3, [r7, #12]
 800515a:	681b      	ldr	r3, [r3, #0]
 800515c:	681a      	ldr	r2, [r3, #0]
 800515e:	68fb      	ldr	r3, [r7, #12]
 8005160:	681b      	ldr	r3, [r3, #0]
 8005162:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005166:	601a      	str	r2, [r3, #0]
 8005168:	e007      	b.n	800517a <HAL_I2C_Mem_Read_DMA+0x246>
 800516a:	68fb      	ldr	r3, [r7, #12]
 800516c:	681b      	ldr	r3, [r3, #0]
 800516e:	685a      	ldr	r2, [r3, #4]
 8005170:	68fb      	ldr	r3, [r7, #12]
 8005172:	681b      	ldr	r3, [r3, #0]
 8005174:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8005178:	605a      	str	r2, [r3, #4]
 800517a:	2300      	movs	r3, #0
 800517c:	61bb      	str	r3, [r7, #24]
 800517e:	68fb      	ldr	r3, [r7, #12]
 8005180:	681b      	ldr	r3, [r3, #0]
 8005182:	695b      	ldr	r3, [r3, #20]
 8005184:	61bb      	str	r3, [r7, #24]
 8005186:	68fb      	ldr	r3, [r7, #12]
 8005188:	681b      	ldr	r3, [r3, #0]
 800518a:	699b      	ldr	r3, [r3, #24]
 800518c:	61bb      	str	r3, [r7, #24]
 800518e:	69bb      	ldr	r3, [r7, #24]
 8005190:	68fb      	ldr	r3, [r7, #12]
 8005192:	2200      	movs	r2, #0
 8005194:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005198:	68fb      	ldr	r3, [r7, #12]
 800519a:	681b      	ldr	r3, [r3, #0]
 800519c:	685a      	ldr	r2, [r3, #4]
 800519e:	68fb      	ldr	r3, [r7, #12]
 80051a0:	681b      	ldr	r3, [r3, #0]
 80051a2:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80051a6:	605a      	str	r2, [r3, #4]
 80051a8:	68fb      	ldr	r3, [r7, #12]
 80051aa:	681b      	ldr	r3, [r3, #0]
 80051ac:	685a      	ldr	r2, [r3, #4]
 80051ae:	68fb      	ldr	r3, [r7, #12]
 80051b0:	681b      	ldr	r3, [r3, #0]
 80051b2:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80051b6:	605a      	str	r2, [r3, #4]
 80051b8:	e049      	b.n	800524e <HAL_I2C_Mem_Read_DMA+0x31a>
 80051ba:	bf00      	nop
 80051bc:	200000e4 	.word	0x200000e4
 80051c0:	14f8b589 	.word	0x14f8b589
 80051c4:	ffff0000 	.word	0xffff0000
 80051c8:	080055a9 	.word	0x080055a9
 80051cc:	08005753 	.word	0x08005753
 80051d0:	68fb      	ldr	r3, [r7, #12]
 80051d2:	2220      	movs	r2, #32
 80051d4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80051d8:	68fb      	ldr	r3, [r7, #12]
 80051da:	2200      	movs	r2, #0
 80051dc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80051e0:	68fb      	ldr	r3, [r7, #12]
 80051e2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80051e4:	f043 0210 	orr.w	r2, r3, #16
 80051e8:	68fb      	ldr	r3, [r7, #12]
 80051ea:	641a      	str	r2, [r3, #64]	; 0x40
 80051ec:	68fb      	ldr	r3, [r7, #12]
 80051ee:	2200      	movs	r2, #0
 80051f0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80051f4:	2301      	movs	r3, #1
 80051f6:	e02d      	b.n	8005254 <HAL_I2C_Mem_Read_DMA+0x320>
 80051f8:	88f8      	ldrh	r0, [r7, #6]
 80051fa:	893a      	ldrh	r2, [r7, #8]
 80051fc:	8979      	ldrh	r1, [r7, #10]
 80051fe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005200:	9301      	str	r3, [sp, #4]
 8005202:	2323      	movs	r3, #35	; 0x23
 8005204:	9300      	str	r3, [sp, #0]
 8005206:	4603      	mov	r3, r0
 8005208:	68f8      	ldr	r0, [r7, #12]
 800520a:	f000 f8e5 	bl	80053d8 <I2C_RequestMemoryRead>
 800520e:	4603      	mov	r3, r0
 8005210:	2b00      	cmp	r3, #0
 8005212:	d001      	beq.n	8005218 <HAL_I2C_Mem_Read_DMA+0x2e4>
 8005214:	2301      	movs	r3, #1
 8005216:	e01d      	b.n	8005254 <HAL_I2C_Mem_Read_DMA+0x320>
 8005218:	2300      	movs	r3, #0
 800521a:	617b      	str	r3, [r7, #20]
 800521c:	68fb      	ldr	r3, [r7, #12]
 800521e:	681b      	ldr	r3, [r3, #0]
 8005220:	695b      	ldr	r3, [r3, #20]
 8005222:	617b      	str	r3, [r7, #20]
 8005224:	68fb      	ldr	r3, [r7, #12]
 8005226:	681b      	ldr	r3, [r3, #0]
 8005228:	699b      	ldr	r3, [r3, #24]
 800522a:	617b      	str	r3, [r7, #20]
 800522c:	697b      	ldr	r3, [r7, #20]
 800522e:	68fb      	ldr	r3, [r7, #12]
 8005230:	681b      	ldr	r3, [r3, #0]
 8005232:	681a      	ldr	r2, [r3, #0]
 8005234:	68fb      	ldr	r3, [r7, #12]
 8005236:	681b      	ldr	r3, [r3, #0]
 8005238:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800523c:	601a      	str	r2, [r3, #0]
 800523e:	68fb      	ldr	r3, [r7, #12]
 8005240:	2220      	movs	r2, #32
 8005242:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005246:	68fb      	ldr	r3, [r7, #12]
 8005248:	2200      	movs	r2, #0
 800524a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800524e:	2300      	movs	r3, #0
 8005250:	e000      	b.n	8005254 <HAL_I2C_Mem_Read_DMA+0x320>
 8005252:	2302      	movs	r3, #2
 8005254:	4618      	mov	r0, r3
 8005256:	3728      	adds	r7, #40	; 0x28
 8005258:	46bd      	mov	sp, r7
 800525a:	bd80      	pop	{r7, pc}

0800525c <HAL_I2C_MasterRxCpltCallback>:
 800525c:	b480      	push	{r7}
 800525e:	b083      	sub	sp, #12
 8005260:	af00      	add	r7, sp, #0
 8005262:	6078      	str	r0, [r7, #4]
 8005264:	bf00      	nop
 8005266:	370c      	adds	r7, #12
 8005268:	46bd      	mov	sp, r7
 800526a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800526e:	4770      	bx	lr

08005270 <HAL_I2C_SlaveTxCpltCallback>:
 8005270:	b480      	push	{r7}
 8005272:	b083      	sub	sp, #12
 8005274:	af00      	add	r7, sp, #0
 8005276:	6078      	str	r0, [r7, #4]
 8005278:	bf00      	nop
 800527a:	370c      	adds	r7, #12
 800527c:	46bd      	mov	sp, r7
 800527e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005282:	4770      	bx	lr

08005284 <HAL_I2C_SlaveRxCpltCallback>:
 8005284:	b480      	push	{r7}
 8005286:	b083      	sub	sp, #12
 8005288:	af00      	add	r7, sp, #0
 800528a:	6078      	str	r0, [r7, #4]
 800528c:	bf00      	nop
 800528e:	370c      	adds	r7, #12
 8005290:	46bd      	mov	sp, r7
 8005292:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005296:	4770      	bx	lr

08005298 <HAL_I2C_ErrorCallback>:
 8005298:	b480      	push	{r7}
 800529a:	b083      	sub	sp, #12
 800529c:	af00      	add	r7, sp, #0
 800529e:	6078      	str	r0, [r7, #4]
 80052a0:	bf00      	nop
 80052a2:	370c      	adds	r7, #12
 80052a4:	46bd      	mov	sp, r7
 80052a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80052aa:	4770      	bx	lr

080052ac <I2C_RequestMemoryWrite>:
 80052ac:	b580      	push	{r7, lr}
 80052ae:	b088      	sub	sp, #32
 80052b0:	af02      	add	r7, sp, #8
 80052b2:	60f8      	str	r0, [r7, #12]
 80052b4:	4608      	mov	r0, r1
 80052b6:	4611      	mov	r1, r2
 80052b8:	461a      	mov	r2, r3
 80052ba:	4603      	mov	r3, r0
 80052bc:	817b      	strh	r3, [r7, #10]
 80052be:	460b      	mov	r3, r1
 80052c0:	813b      	strh	r3, [r7, #8]
 80052c2:	4613      	mov	r3, r2
 80052c4:	80fb      	strh	r3, [r7, #6]
 80052c6:	68fb      	ldr	r3, [r7, #12]
 80052c8:	681b      	ldr	r3, [r3, #0]
 80052ca:	681a      	ldr	r2, [r3, #0]
 80052cc:	68fb      	ldr	r3, [r7, #12]
 80052ce:	681b      	ldr	r3, [r3, #0]
 80052d0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80052d4:	601a      	str	r2, [r3, #0]
 80052d6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80052d8:	9300      	str	r3, [sp, #0]
 80052da:	6a3b      	ldr	r3, [r7, #32]
 80052dc:	2200      	movs	r2, #0
 80052de:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80052e2:	68f8      	ldr	r0, [r7, #12]
 80052e4:	f000 fa72 	bl	80057cc <I2C_WaitOnFlagUntilTimeout>
 80052e8:	4603      	mov	r3, r0
 80052ea:	2b00      	cmp	r3, #0
 80052ec:	d00d      	beq.n	800530a <I2C_RequestMemoryWrite+0x5e>
 80052ee:	68fb      	ldr	r3, [r7, #12]
 80052f0:	681b      	ldr	r3, [r3, #0]
 80052f2:	681b      	ldr	r3, [r3, #0]
 80052f4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80052f8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80052fc:	d103      	bne.n	8005306 <I2C_RequestMemoryWrite+0x5a>
 80052fe:	68fb      	ldr	r3, [r7, #12]
 8005300:	f44f 7200 	mov.w	r2, #512	; 0x200
 8005304:	641a      	str	r2, [r3, #64]	; 0x40
 8005306:	2303      	movs	r3, #3
 8005308:	e05f      	b.n	80053ca <I2C_RequestMemoryWrite+0x11e>
 800530a:	897b      	ldrh	r3, [r7, #10]
 800530c:	b2db      	uxtb	r3, r3
 800530e:	461a      	mov	r2, r3
 8005310:	68fb      	ldr	r3, [r7, #12]
 8005312:	681b      	ldr	r3, [r3, #0]
 8005314:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8005318:	611a      	str	r2, [r3, #16]
 800531a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800531c:	6a3a      	ldr	r2, [r7, #32]
 800531e:	492d      	ldr	r1, [pc, #180]	; (80053d4 <I2C_RequestMemoryWrite+0x128>)
 8005320:	68f8      	ldr	r0, [r7, #12]
 8005322:	f000 faaa 	bl	800587a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005326:	4603      	mov	r3, r0
 8005328:	2b00      	cmp	r3, #0
 800532a:	d001      	beq.n	8005330 <I2C_RequestMemoryWrite+0x84>
 800532c:	2301      	movs	r3, #1
 800532e:	e04c      	b.n	80053ca <I2C_RequestMemoryWrite+0x11e>
 8005330:	2300      	movs	r3, #0
 8005332:	617b      	str	r3, [r7, #20]
 8005334:	68fb      	ldr	r3, [r7, #12]
 8005336:	681b      	ldr	r3, [r3, #0]
 8005338:	695b      	ldr	r3, [r3, #20]
 800533a:	617b      	str	r3, [r7, #20]
 800533c:	68fb      	ldr	r3, [r7, #12]
 800533e:	681b      	ldr	r3, [r3, #0]
 8005340:	699b      	ldr	r3, [r3, #24]
 8005342:	617b      	str	r3, [r7, #20]
 8005344:	697b      	ldr	r3, [r7, #20]
 8005346:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8005348:	6a39      	ldr	r1, [r7, #32]
 800534a:	68f8      	ldr	r0, [r7, #12]
 800534c:	f000 fb14 	bl	8005978 <I2C_WaitOnTXEFlagUntilTimeout>
 8005350:	4603      	mov	r3, r0
 8005352:	2b00      	cmp	r3, #0
 8005354:	d00d      	beq.n	8005372 <I2C_RequestMemoryWrite+0xc6>
 8005356:	68fb      	ldr	r3, [r7, #12]
 8005358:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800535a:	2b04      	cmp	r3, #4
 800535c:	d107      	bne.n	800536e <I2C_RequestMemoryWrite+0xc2>
 800535e:	68fb      	ldr	r3, [r7, #12]
 8005360:	681b      	ldr	r3, [r3, #0]
 8005362:	681a      	ldr	r2, [r3, #0]
 8005364:	68fb      	ldr	r3, [r7, #12]
 8005366:	681b      	ldr	r3, [r3, #0]
 8005368:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800536c:	601a      	str	r2, [r3, #0]
 800536e:	2301      	movs	r3, #1
 8005370:	e02b      	b.n	80053ca <I2C_RequestMemoryWrite+0x11e>
 8005372:	88fb      	ldrh	r3, [r7, #6]
 8005374:	2b01      	cmp	r3, #1
 8005376:	d105      	bne.n	8005384 <I2C_RequestMemoryWrite+0xd8>
 8005378:	893b      	ldrh	r3, [r7, #8]
 800537a:	b2da      	uxtb	r2, r3
 800537c:	68fb      	ldr	r3, [r7, #12]
 800537e:	681b      	ldr	r3, [r3, #0]
 8005380:	611a      	str	r2, [r3, #16]
 8005382:	e021      	b.n	80053c8 <I2C_RequestMemoryWrite+0x11c>
 8005384:	893b      	ldrh	r3, [r7, #8]
 8005386:	0a1b      	lsrs	r3, r3, #8
 8005388:	b29b      	uxth	r3, r3
 800538a:	b2da      	uxtb	r2, r3
 800538c:	68fb      	ldr	r3, [r7, #12]
 800538e:	681b      	ldr	r3, [r3, #0]
 8005390:	611a      	str	r2, [r3, #16]
 8005392:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8005394:	6a39      	ldr	r1, [r7, #32]
 8005396:	68f8      	ldr	r0, [r7, #12]
 8005398:	f000 faee 	bl	8005978 <I2C_WaitOnTXEFlagUntilTimeout>
 800539c:	4603      	mov	r3, r0
 800539e:	2b00      	cmp	r3, #0
 80053a0:	d00d      	beq.n	80053be <I2C_RequestMemoryWrite+0x112>
 80053a2:	68fb      	ldr	r3, [r7, #12]
 80053a4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80053a6:	2b04      	cmp	r3, #4
 80053a8:	d107      	bne.n	80053ba <I2C_RequestMemoryWrite+0x10e>
 80053aa:	68fb      	ldr	r3, [r7, #12]
 80053ac:	681b      	ldr	r3, [r3, #0]
 80053ae:	681a      	ldr	r2, [r3, #0]
 80053b0:	68fb      	ldr	r3, [r7, #12]
 80053b2:	681b      	ldr	r3, [r3, #0]
 80053b4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80053b8:	601a      	str	r2, [r3, #0]
 80053ba:	2301      	movs	r3, #1
 80053bc:	e005      	b.n	80053ca <I2C_RequestMemoryWrite+0x11e>
 80053be:	893b      	ldrh	r3, [r7, #8]
 80053c0:	b2da      	uxtb	r2, r3
 80053c2:	68fb      	ldr	r3, [r7, #12]
 80053c4:	681b      	ldr	r3, [r3, #0]
 80053c6:	611a      	str	r2, [r3, #16]
 80053c8:	2300      	movs	r3, #0
 80053ca:	4618      	mov	r0, r3
 80053cc:	3718      	adds	r7, #24
 80053ce:	46bd      	mov	sp, r7
 80053d0:	bd80      	pop	{r7, pc}
 80053d2:	bf00      	nop
 80053d4:	00010002 	.word	0x00010002

080053d8 <I2C_RequestMemoryRead>:
 80053d8:	b580      	push	{r7, lr}
 80053da:	b088      	sub	sp, #32
 80053dc:	af02      	add	r7, sp, #8
 80053de:	60f8      	str	r0, [r7, #12]
 80053e0:	4608      	mov	r0, r1
 80053e2:	4611      	mov	r1, r2
 80053e4:	461a      	mov	r2, r3
 80053e6:	4603      	mov	r3, r0
 80053e8:	817b      	strh	r3, [r7, #10]
 80053ea:	460b      	mov	r3, r1
 80053ec:	813b      	strh	r3, [r7, #8]
 80053ee:	4613      	mov	r3, r2
 80053f0:	80fb      	strh	r3, [r7, #6]
 80053f2:	68fb      	ldr	r3, [r7, #12]
 80053f4:	681b      	ldr	r3, [r3, #0]
 80053f6:	681a      	ldr	r2, [r3, #0]
 80053f8:	68fb      	ldr	r3, [r7, #12]
 80053fa:	681b      	ldr	r3, [r3, #0]
 80053fc:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8005400:	601a      	str	r2, [r3, #0]
 8005402:	68fb      	ldr	r3, [r7, #12]
 8005404:	681b      	ldr	r3, [r3, #0]
 8005406:	681a      	ldr	r2, [r3, #0]
 8005408:	68fb      	ldr	r3, [r7, #12]
 800540a:	681b      	ldr	r3, [r3, #0]
 800540c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005410:	601a      	str	r2, [r3, #0]
 8005412:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005414:	9300      	str	r3, [sp, #0]
 8005416:	6a3b      	ldr	r3, [r7, #32]
 8005418:	2200      	movs	r2, #0
 800541a:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800541e:	68f8      	ldr	r0, [r7, #12]
 8005420:	f000 f9d4 	bl	80057cc <I2C_WaitOnFlagUntilTimeout>
 8005424:	4603      	mov	r3, r0
 8005426:	2b00      	cmp	r3, #0
 8005428:	d00d      	beq.n	8005446 <I2C_RequestMemoryRead+0x6e>
 800542a:	68fb      	ldr	r3, [r7, #12]
 800542c:	681b      	ldr	r3, [r3, #0]
 800542e:	681b      	ldr	r3, [r3, #0]
 8005430:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005434:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8005438:	d103      	bne.n	8005442 <I2C_RequestMemoryRead+0x6a>
 800543a:	68fb      	ldr	r3, [r7, #12]
 800543c:	f44f 7200 	mov.w	r2, #512	; 0x200
 8005440:	641a      	str	r2, [r3, #64]	; 0x40
 8005442:	2303      	movs	r3, #3
 8005444:	e0aa      	b.n	800559c <I2C_RequestMemoryRead+0x1c4>
 8005446:	897b      	ldrh	r3, [r7, #10]
 8005448:	b2db      	uxtb	r3, r3
 800544a:	461a      	mov	r2, r3
 800544c:	68fb      	ldr	r3, [r7, #12]
 800544e:	681b      	ldr	r3, [r3, #0]
 8005450:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8005454:	611a      	str	r2, [r3, #16]
 8005456:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005458:	6a3a      	ldr	r2, [r7, #32]
 800545a:	4952      	ldr	r1, [pc, #328]	; (80055a4 <I2C_RequestMemoryRead+0x1cc>)
 800545c:	68f8      	ldr	r0, [r7, #12]
 800545e:	f000 fa0c 	bl	800587a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005462:	4603      	mov	r3, r0
 8005464:	2b00      	cmp	r3, #0
 8005466:	d001      	beq.n	800546c <I2C_RequestMemoryRead+0x94>
 8005468:	2301      	movs	r3, #1
 800546a:	e097      	b.n	800559c <I2C_RequestMemoryRead+0x1c4>
 800546c:	2300      	movs	r3, #0
 800546e:	617b      	str	r3, [r7, #20]
 8005470:	68fb      	ldr	r3, [r7, #12]
 8005472:	681b      	ldr	r3, [r3, #0]
 8005474:	695b      	ldr	r3, [r3, #20]
 8005476:	617b      	str	r3, [r7, #20]
 8005478:	68fb      	ldr	r3, [r7, #12]
 800547a:	681b      	ldr	r3, [r3, #0]
 800547c:	699b      	ldr	r3, [r3, #24]
 800547e:	617b      	str	r3, [r7, #20]
 8005480:	697b      	ldr	r3, [r7, #20]
 8005482:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8005484:	6a39      	ldr	r1, [r7, #32]
 8005486:	68f8      	ldr	r0, [r7, #12]
 8005488:	f000 fa76 	bl	8005978 <I2C_WaitOnTXEFlagUntilTimeout>
 800548c:	4603      	mov	r3, r0
 800548e:	2b00      	cmp	r3, #0
 8005490:	d00d      	beq.n	80054ae <I2C_RequestMemoryRead+0xd6>
 8005492:	68fb      	ldr	r3, [r7, #12]
 8005494:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005496:	2b04      	cmp	r3, #4
 8005498:	d107      	bne.n	80054aa <I2C_RequestMemoryRead+0xd2>
 800549a:	68fb      	ldr	r3, [r7, #12]
 800549c:	681b      	ldr	r3, [r3, #0]
 800549e:	681a      	ldr	r2, [r3, #0]
 80054a0:	68fb      	ldr	r3, [r7, #12]
 80054a2:	681b      	ldr	r3, [r3, #0]
 80054a4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80054a8:	601a      	str	r2, [r3, #0]
 80054aa:	2301      	movs	r3, #1
 80054ac:	e076      	b.n	800559c <I2C_RequestMemoryRead+0x1c4>
 80054ae:	88fb      	ldrh	r3, [r7, #6]
 80054b0:	2b01      	cmp	r3, #1
 80054b2:	d105      	bne.n	80054c0 <I2C_RequestMemoryRead+0xe8>
 80054b4:	893b      	ldrh	r3, [r7, #8]
 80054b6:	b2da      	uxtb	r2, r3
 80054b8:	68fb      	ldr	r3, [r7, #12]
 80054ba:	681b      	ldr	r3, [r3, #0]
 80054bc:	611a      	str	r2, [r3, #16]
 80054be:	e021      	b.n	8005504 <I2C_RequestMemoryRead+0x12c>
 80054c0:	893b      	ldrh	r3, [r7, #8]
 80054c2:	0a1b      	lsrs	r3, r3, #8
 80054c4:	b29b      	uxth	r3, r3
 80054c6:	b2da      	uxtb	r2, r3
 80054c8:	68fb      	ldr	r3, [r7, #12]
 80054ca:	681b      	ldr	r3, [r3, #0]
 80054cc:	611a      	str	r2, [r3, #16]
 80054ce:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80054d0:	6a39      	ldr	r1, [r7, #32]
 80054d2:	68f8      	ldr	r0, [r7, #12]
 80054d4:	f000 fa50 	bl	8005978 <I2C_WaitOnTXEFlagUntilTimeout>
 80054d8:	4603      	mov	r3, r0
 80054da:	2b00      	cmp	r3, #0
 80054dc:	d00d      	beq.n	80054fa <I2C_RequestMemoryRead+0x122>
 80054de:	68fb      	ldr	r3, [r7, #12]
 80054e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80054e2:	2b04      	cmp	r3, #4
 80054e4:	d107      	bne.n	80054f6 <I2C_RequestMemoryRead+0x11e>
 80054e6:	68fb      	ldr	r3, [r7, #12]
 80054e8:	681b      	ldr	r3, [r3, #0]
 80054ea:	681a      	ldr	r2, [r3, #0]
 80054ec:	68fb      	ldr	r3, [r7, #12]
 80054ee:	681b      	ldr	r3, [r3, #0]
 80054f0:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80054f4:	601a      	str	r2, [r3, #0]
 80054f6:	2301      	movs	r3, #1
 80054f8:	e050      	b.n	800559c <I2C_RequestMemoryRead+0x1c4>
 80054fa:	893b      	ldrh	r3, [r7, #8]
 80054fc:	b2da      	uxtb	r2, r3
 80054fe:	68fb      	ldr	r3, [r7, #12]
 8005500:	681b      	ldr	r3, [r3, #0]
 8005502:	611a      	str	r2, [r3, #16]
 8005504:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8005506:	6a39      	ldr	r1, [r7, #32]
 8005508:	68f8      	ldr	r0, [r7, #12]
 800550a:	f000 fa35 	bl	8005978 <I2C_WaitOnTXEFlagUntilTimeout>
 800550e:	4603      	mov	r3, r0
 8005510:	2b00      	cmp	r3, #0
 8005512:	d00d      	beq.n	8005530 <I2C_RequestMemoryRead+0x158>
 8005514:	68fb      	ldr	r3, [r7, #12]
 8005516:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005518:	2b04      	cmp	r3, #4
 800551a:	d107      	bne.n	800552c <I2C_RequestMemoryRead+0x154>
 800551c:	68fb      	ldr	r3, [r7, #12]
 800551e:	681b      	ldr	r3, [r3, #0]
 8005520:	681a      	ldr	r2, [r3, #0]
 8005522:	68fb      	ldr	r3, [r7, #12]
 8005524:	681b      	ldr	r3, [r3, #0]
 8005526:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800552a:	601a      	str	r2, [r3, #0]
 800552c:	2301      	movs	r3, #1
 800552e:	e035      	b.n	800559c <I2C_RequestMemoryRead+0x1c4>
 8005530:	68fb      	ldr	r3, [r7, #12]
 8005532:	681b      	ldr	r3, [r3, #0]
 8005534:	681a      	ldr	r2, [r3, #0]
 8005536:	68fb      	ldr	r3, [r7, #12]
 8005538:	681b      	ldr	r3, [r3, #0]
 800553a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800553e:	601a      	str	r2, [r3, #0]
 8005540:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005542:	9300      	str	r3, [sp, #0]
 8005544:	6a3b      	ldr	r3, [r7, #32]
 8005546:	2200      	movs	r2, #0
 8005548:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800554c:	68f8      	ldr	r0, [r7, #12]
 800554e:	f000 f93d 	bl	80057cc <I2C_WaitOnFlagUntilTimeout>
 8005552:	4603      	mov	r3, r0
 8005554:	2b00      	cmp	r3, #0
 8005556:	d00d      	beq.n	8005574 <I2C_RequestMemoryRead+0x19c>
 8005558:	68fb      	ldr	r3, [r7, #12]
 800555a:	681b      	ldr	r3, [r3, #0]
 800555c:	681b      	ldr	r3, [r3, #0]
 800555e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005562:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8005566:	d103      	bne.n	8005570 <I2C_RequestMemoryRead+0x198>
 8005568:	68fb      	ldr	r3, [r7, #12]
 800556a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800556e:	641a      	str	r2, [r3, #64]	; 0x40
 8005570:	2303      	movs	r3, #3
 8005572:	e013      	b.n	800559c <I2C_RequestMemoryRead+0x1c4>
 8005574:	897b      	ldrh	r3, [r7, #10]
 8005576:	b2db      	uxtb	r3, r3
 8005578:	f043 0301 	orr.w	r3, r3, #1
 800557c:	b2da      	uxtb	r2, r3
 800557e:	68fb      	ldr	r3, [r7, #12]
 8005580:	681b      	ldr	r3, [r3, #0]
 8005582:	611a      	str	r2, [r3, #16]
 8005584:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005586:	6a3a      	ldr	r2, [r7, #32]
 8005588:	4906      	ldr	r1, [pc, #24]	; (80055a4 <I2C_RequestMemoryRead+0x1cc>)
 800558a:	68f8      	ldr	r0, [r7, #12]
 800558c:	f000 f975 	bl	800587a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005590:	4603      	mov	r3, r0
 8005592:	2b00      	cmp	r3, #0
 8005594:	d001      	beq.n	800559a <I2C_RequestMemoryRead+0x1c2>
 8005596:	2301      	movs	r3, #1
 8005598:	e000      	b.n	800559c <I2C_RequestMemoryRead+0x1c4>
 800559a:	2300      	movs	r3, #0
 800559c:	4618      	mov	r0, r3
 800559e:	3718      	adds	r7, #24
 80055a0:	46bd      	mov	sp, r7
 80055a2:	bd80      	pop	{r7, pc}
 80055a4:	00010002 	.word	0x00010002

080055a8 <I2C_DMAXferCplt>:
 80055a8:	b580      	push	{r7, lr}
 80055aa:	b086      	sub	sp, #24
 80055ac:	af00      	add	r7, sp, #0
 80055ae:	6078      	str	r0, [r7, #4]
 80055b0:	687b      	ldr	r3, [r7, #4]
 80055b2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80055b4:	617b      	str	r3, [r7, #20]
 80055b6:	697b      	ldr	r3, [r7, #20]
 80055b8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80055bc:	74fb      	strb	r3, [r7, #19]
 80055be:	697b      	ldr	r3, [r7, #20]
 80055c0:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80055c4:	74bb      	strb	r3, [r7, #18]
 80055c6:	697b      	ldr	r3, [r7, #20]
 80055c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80055ca:	60fb      	str	r3, [r7, #12]
 80055cc:	697b      	ldr	r3, [r7, #20]
 80055ce:	681b      	ldr	r3, [r3, #0]
 80055d0:	685a      	ldr	r2, [r3, #4]
 80055d2:	697b      	ldr	r3, [r7, #20]
 80055d4:	681b      	ldr	r3, [r3, #0]
 80055d6:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 80055da:	605a      	str	r2, [r3, #4]
 80055dc:	697b      	ldr	r3, [r7, #20]
 80055de:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80055e0:	2b00      	cmp	r3, #0
 80055e2:	d003      	beq.n	80055ec <I2C_DMAXferCplt+0x44>
 80055e4:	697b      	ldr	r3, [r7, #20]
 80055e6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80055e8:	2200      	movs	r2, #0
 80055ea:	63da      	str	r2, [r3, #60]	; 0x3c
 80055ec:	697b      	ldr	r3, [r7, #20]
 80055ee:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80055f0:	2b00      	cmp	r3, #0
 80055f2:	d003      	beq.n	80055fc <I2C_DMAXferCplt+0x54>
 80055f4:	697b      	ldr	r3, [r7, #20]
 80055f6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80055f8:	2200      	movs	r2, #0
 80055fa:	63da      	str	r2, [r3, #60]	; 0x3c
 80055fc:	7cfb      	ldrb	r3, [r7, #19]
 80055fe:	f003 0321 	and.w	r3, r3, #33	; 0x21
 8005602:	2b21      	cmp	r3, #33	; 0x21
 8005604:	d007      	beq.n	8005616 <I2C_DMAXferCplt+0x6e>
 8005606:	7cfb      	ldrb	r3, [r7, #19]
 8005608:	f003 0322 	and.w	r3, r3, #34	; 0x22
 800560c:	2b22      	cmp	r3, #34	; 0x22
 800560e:	d131      	bne.n	8005674 <I2C_DMAXferCplt+0xcc>
 8005610:	7cbb      	ldrb	r3, [r7, #18]
 8005612:	2b20      	cmp	r3, #32
 8005614:	d12e      	bne.n	8005674 <I2C_DMAXferCplt+0xcc>
 8005616:	697b      	ldr	r3, [r7, #20]
 8005618:	681b      	ldr	r3, [r3, #0]
 800561a:	685a      	ldr	r2, [r3, #4]
 800561c:	697b      	ldr	r3, [r7, #20]
 800561e:	681b      	ldr	r3, [r3, #0]
 8005620:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005624:	605a      	str	r2, [r3, #4]
 8005626:	697b      	ldr	r3, [r7, #20]
 8005628:	2200      	movs	r2, #0
 800562a:	855a      	strh	r2, [r3, #42]	; 0x2a
 800562c:	7cfb      	ldrb	r3, [r7, #19]
 800562e:	2b29      	cmp	r3, #41	; 0x29
 8005630:	d10a      	bne.n	8005648 <I2C_DMAXferCplt+0xa0>
 8005632:	697b      	ldr	r3, [r7, #20]
 8005634:	2221      	movs	r2, #33	; 0x21
 8005636:	631a      	str	r2, [r3, #48]	; 0x30
 8005638:	697b      	ldr	r3, [r7, #20]
 800563a:	2228      	movs	r2, #40	; 0x28
 800563c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005640:	6978      	ldr	r0, [r7, #20]
 8005642:	f7ff fe15 	bl	8005270 <HAL_I2C_SlaveTxCpltCallback>
 8005646:	e00c      	b.n	8005662 <I2C_DMAXferCplt+0xba>
 8005648:	7cfb      	ldrb	r3, [r7, #19]
 800564a:	2b2a      	cmp	r3, #42	; 0x2a
 800564c:	d109      	bne.n	8005662 <I2C_DMAXferCplt+0xba>
 800564e:	697b      	ldr	r3, [r7, #20]
 8005650:	2222      	movs	r2, #34	; 0x22
 8005652:	631a      	str	r2, [r3, #48]	; 0x30
 8005654:	697b      	ldr	r3, [r7, #20]
 8005656:	2228      	movs	r2, #40	; 0x28
 8005658:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800565c:	6978      	ldr	r0, [r7, #20]
 800565e:	f7ff fe11 	bl	8005284 <HAL_I2C_SlaveRxCpltCallback>
 8005662:	697b      	ldr	r3, [r7, #20]
 8005664:	681b      	ldr	r3, [r3, #0]
 8005666:	685a      	ldr	r2, [r3, #4]
 8005668:	697b      	ldr	r3, [r7, #20]
 800566a:	681b      	ldr	r3, [r3, #0]
 800566c:	f442 7240 	orr.w	r2, r2, #768	; 0x300
 8005670:	605a      	str	r2, [r3, #4]
 8005672:	e06a      	b.n	800574a <I2C_DMAXferCplt+0x1a2>
 8005674:	697b      	ldr	r3, [r7, #20]
 8005676:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800567a:	b2db      	uxtb	r3, r3
 800567c:	2b00      	cmp	r3, #0
 800567e:	d064      	beq.n	800574a <I2C_DMAXferCplt+0x1a2>
 8005680:	697b      	ldr	r3, [r7, #20]
 8005682:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005684:	b29b      	uxth	r3, r3
 8005686:	2b01      	cmp	r3, #1
 8005688:	d107      	bne.n	800569a <I2C_DMAXferCplt+0xf2>
 800568a:	697b      	ldr	r3, [r7, #20]
 800568c:	681b      	ldr	r3, [r3, #0]
 800568e:	681a      	ldr	r2, [r3, #0]
 8005690:	697b      	ldr	r3, [r7, #20]
 8005692:	681b      	ldr	r3, [r3, #0]
 8005694:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005698:	601a      	str	r2, [r3, #0]
 800569a:	697b      	ldr	r3, [r7, #20]
 800569c:	681b      	ldr	r3, [r3, #0]
 800569e:	685a      	ldr	r2, [r3, #4]
 80056a0:	697b      	ldr	r3, [r7, #20]
 80056a2:	681b      	ldr	r3, [r3, #0]
 80056a4:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 80056a8:	605a      	str	r2, [r3, #4]
 80056aa:	68fb      	ldr	r3, [r7, #12]
 80056ac:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 80056b0:	d009      	beq.n	80056c6 <I2C_DMAXferCplt+0x11e>
 80056b2:	68fb      	ldr	r3, [r7, #12]
 80056b4:	2b08      	cmp	r3, #8
 80056b6:	d006      	beq.n	80056c6 <I2C_DMAXferCplt+0x11e>
 80056b8:	68fb      	ldr	r3, [r7, #12]
 80056ba:	f1b3 4f2a 	cmp.w	r3, #2852126720	; 0xaa000000
 80056be:	d002      	beq.n	80056c6 <I2C_DMAXferCplt+0x11e>
 80056c0:	68fb      	ldr	r3, [r7, #12]
 80056c2:	2b20      	cmp	r3, #32
 80056c4:	d107      	bne.n	80056d6 <I2C_DMAXferCplt+0x12e>
 80056c6:	697b      	ldr	r3, [r7, #20]
 80056c8:	681b      	ldr	r3, [r3, #0]
 80056ca:	681a      	ldr	r2, [r3, #0]
 80056cc:	697b      	ldr	r3, [r7, #20]
 80056ce:	681b      	ldr	r3, [r3, #0]
 80056d0:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80056d4:	601a      	str	r2, [r3, #0]
 80056d6:	697b      	ldr	r3, [r7, #20]
 80056d8:	681b      	ldr	r3, [r3, #0]
 80056da:	685a      	ldr	r2, [r3, #4]
 80056dc:	697b      	ldr	r3, [r7, #20]
 80056de:	681b      	ldr	r3, [r3, #0]
 80056e0:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80056e4:	605a      	str	r2, [r3, #4]
 80056e6:	697b      	ldr	r3, [r7, #20]
 80056e8:	681b      	ldr	r3, [r3, #0]
 80056ea:	685a      	ldr	r2, [r3, #4]
 80056ec:	697b      	ldr	r3, [r7, #20]
 80056ee:	681b      	ldr	r3, [r3, #0]
 80056f0:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80056f4:	605a      	str	r2, [r3, #4]
 80056f6:	697b      	ldr	r3, [r7, #20]
 80056f8:	2200      	movs	r2, #0
 80056fa:	855a      	strh	r2, [r3, #42]	; 0x2a
 80056fc:	697b      	ldr	r3, [r7, #20]
 80056fe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005700:	2b00      	cmp	r3, #0
 8005702:	d003      	beq.n	800570c <I2C_DMAXferCplt+0x164>
 8005704:	6978      	ldr	r0, [r7, #20]
 8005706:	f7ff fdc7 	bl	8005298 <HAL_I2C_ErrorCallback>
 800570a:	e01e      	b.n	800574a <I2C_DMAXferCplt+0x1a2>
 800570c:	697b      	ldr	r3, [r7, #20]
 800570e:	2220      	movs	r2, #32
 8005710:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005714:	697b      	ldr	r3, [r7, #20]
 8005716:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800571a:	b2db      	uxtb	r3, r3
 800571c:	2b40      	cmp	r3, #64	; 0x40
 800571e:	d10a      	bne.n	8005736 <I2C_DMAXferCplt+0x18e>
 8005720:	697b      	ldr	r3, [r7, #20]
 8005722:	2200      	movs	r2, #0
 8005724:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005728:	697b      	ldr	r3, [r7, #20]
 800572a:	2200      	movs	r2, #0
 800572c:	631a      	str	r2, [r3, #48]	; 0x30
 800572e:	6978      	ldr	r0, [r7, #20]
 8005730:	f7fd fc06 	bl	8002f40 <HAL_I2C_MemRxCpltCallback>
 8005734:	e009      	b.n	800574a <I2C_DMAXferCplt+0x1a2>
 8005736:	697b      	ldr	r3, [r7, #20]
 8005738:	2200      	movs	r2, #0
 800573a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800573e:	697b      	ldr	r3, [r7, #20]
 8005740:	2212      	movs	r2, #18
 8005742:	631a      	str	r2, [r3, #48]	; 0x30
 8005744:	6978      	ldr	r0, [r7, #20]
 8005746:	f7ff fd89 	bl	800525c <HAL_I2C_MasterRxCpltCallback>
 800574a:	bf00      	nop
 800574c:	3718      	adds	r7, #24
 800574e:	46bd      	mov	sp, r7
 8005750:	bd80      	pop	{r7, pc}

08005752 <I2C_DMAError>:
 8005752:	b580      	push	{r7, lr}
 8005754:	b084      	sub	sp, #16
 8005756:	af00      	add	r7, sp, #0
 8005758:	6078      	str	r0, [r7, #4]
 800575a:	687b      	ldr	r3, [r7, #4]
 800575c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800575e:	60fb      	str	r3, [r7, #12]
 8005760:	68fb      	ldr	r3, [r7, #12]
 8005762:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005764:	2b00      	cmp	r3, #0
 8005766:	d003      	beq.n	8005770 <I2C_DMAError+0x1e>
 8005768:	68fb      	ldr	r3, [r7, #12]
 800576a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800576c:	2200      	movs	r2, #0
 800576e:	63da      	str	r2, [r3, #60]	; 0x3c
 8005770:	68fb      	ldr	r3, [r7, #12]
 8005772:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005774:	2b00      	cmp	r3, #0
 8005776:	d003      	beq.n	8005780 <I2C_DMAError+0x2e>
 8005778:	68fb      	ldr	r3, [r7, #12]
 800577a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800577c:	2200      	movs	r2, #0
 800577e:	63da      	str	r2, [r3, #60]	; 0x3c
 8005780:	6878      	ldr	r0, [r7, #4]
 8005782:	f7fe fcd1 	bl	8004128 <HAL_DMA_GetError>
 8005786:	4603      	mov	r3, r0
 8005788:	2b02      	cmp	r3, #2
 800578a:	d01b      	beq.n	80057c4 <I2C_DMAError+0x72>
 800578c:	68fb      	ldr	r3, [r7, #12]
 800578e:	681b      	ldr	r3, [r3, #0]
 8005790:	681a      	ldr	r2, [r3, #0]
 8005792:	68fb      	ldr	r3, [r7, #12]
 8005794:	681b      	ldr	r3, [r3, #0]
 8005796:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800579a:	601a      	str	r2, [r3, #0]
 800579c:	68fb      	ldr	r3, [r7, #12]
 800579e:	2200      	movs	r2, #0
 80057a0:	855a      	strh	r2, [r3, #42]	; 0x2a
 80057a2:	68fb      	ldr	r3, [r7, #12]
 80057a4:	2220      	movs	r2, #32
 80057a6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80057aa:	68fb      	ldr	r3, [r7, #12]
 80057ac:	2200      	movs	r2, #0
 80057ae:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80057b2:	68fb      	ldr	r3, [r7, #12]
 80057b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80057b6:	f043 0210 	orr.w	r2, r3, #16
 80057ba:	68fb      	ldr	r3, [r7, #12]
 80057bc:	641a      	str	r2, [r3, #64]	; 0x40
 80057be:	68f8      	ldr	r0, [r7, #12]
 80057c0:	f7ff fd6a 	bl	8005298 <HAL_I2C_ErrorCallback>
 80057c4:	bf00      	nop
 80057c6:	3710      	adds	r7, #16
 80057c8:	46bd      	mov	sp, r7
 80057ca:	bd80      	pop	{r7, pc}

080057cc <I2C_WaitOnFlagUntilTimeout>:
 80057cc:	b580      	push	{r7, lr}
 80057ce:	b084      	sub	sp, #16
 80057d0:	af00      	add	r7, sp, #0
 80057d2:	60f8      	str	r0, [r7, #12]
 80057d4:	60b9      	str	r1, [r7, #8]
 80057d6:	603b      	str	r3, [r7, #0]
 80057d8:	4613      	mov	r3, r2
 80057da:	71fb      	strb	r3, [r7, #7]
 80057dc:	e025      	b.n	800582a <I2C_WaitOnFlagUntilTimeout+0x5e>
 80057de:	683b      	ldr	r3, [r7, #0]
 80057e0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80057e4:	d021      	beq.n	800582a <I2C_WaitOnFlagUntilTimeout+0x5e>
 80057e6:	f7fe f83b 	bl	8003860 <HAL_GetTick>
 80057ea:	4602      	mov	r2, r0
 80057ec:	69bb      	ldr	r3, [r7, #24]
 80057ee:	1ad3      	subs	r3, r2, r3
 80057f0:	683a      	ldr	r2, [r7, #0]
 80057f2:	429a      	cmp	r2, r3
 80057f4:	d302      	bcc.n	80057fc <I2C_WaitOnFlagUntilTimeout+0x30>
 80057f6:	683b      	ldr	r3, [r7, #0]
 80057f8:	2b00      	cmp	r3, #0
 80057fa:	d116      	bne.n	800582a <I2C_WaitOnFlagUntilTimeout+0x5e>
 80057fc:	68fb      	ldr	r3, [r7, #12]
 80057fe:	2200      	movs	r2, #0
 8005800:	631a      	str	r2, [r3, #48]	; 0x30
 8005802:	68fb      	ldr	r3, [r7, #12]
 8005804:	2220      	movs	r2, #32
 8005806:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800580a:	68fb      	ldr	r3, [r7, #12]
 800580c:	2200      	movs	r2, #0
 800580e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005812:	68fb      	ldr	r3, [r7, #12]
 8005814:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005816:	f043 0220 	orr.w	r2, r3, #32
 800581a:	68fb      	ldr	r3, [r7, #12]
 800581c:	641a      	str	r2, [r3, #64]	; 0x40
 800581e:	68fb      	ldr	r3, [r7, #12]
 8005820:	2200      	movs	r2, #0
 8005822:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005826:	2301      	movs	r3, #1
 8005828:	e023      	b.n	8005872 <I2C_WaitOnFlagUntilTimeout+0xa6>
 800582a:	68bb      	ldr	r3, [r7, #8]
 800582c:	0c1b      	lsrs	r3, r3, #16
 800582e:	b2db      	uxtb	r3, r3
 8005830:	2b01      	cmp	r3, #1
 8005832:	d10d      	bne.n	8005850 <I2C_WaitOnFlagUntilTimeout+0x84>
 8005834:	68fb      	ldr	r3, [r7, #12]
 8005836:	681b      	ldr	r3, [r3, #0]
 8005838:	695b      	ldr	r3, [r3, #20]
 800583a:	43da      	mvns	r2, r3
 800583c:	68bb      	ldr	r3, [r7, #8]
 800583e:	4013      	ands	r3, r2
 8005840:	b29b      	uxth	r3, r3
 8005842:	2b00      	cmp	r3, #0
 8005844:	bf0c      	ite	eq
 8005846:	2301      	moveq	r3, #1
 8005848:	2300      	movne	r3, #0
 800584a:	b2db      	uxtb	r3, r3
 800584c:	461a      	mov	r2, r3
 800584e:	e00c      	b.n	800586a <I2C_WaitOnFlagUntilTimeout+0x9e>
 8005850:	68fb      	ldr	r3, [r7, #12]
 8005852:	681b      	ldr	r3, [r3, #0]
 8005854:	699b      	ldr	r3, [r3, #24]
 8005856:	43da      	mvns	r2, r3
 8005858:	68bb      	ldr	r3, [r7, #8]
 800585a:	4013      	ands	r3, r2
 800585c:	b29b      	uxth	r3, r3
 800585e:	2b00      	cmp	r3, #0
 8005860:	bf0c      	ite	eq
 8005862:	2301      	moveq	r3, #1
 8005864:	2300      	movne	r3, #0
 8005866:	b2db      	uxtb	r3, r3
 8005868:	461a      	mov	r2, r3
 800586a:	79fb      	ldrb	r3, [r7, #7]
 800586c:	429a      	cmp	r2, r3
 800586e:	d0b6      	beq.n	80057de <I2C_WaitOnFlagUntilTimeout+0x12>
 8005870:	2300      	movs	r3, #0
 8005872:	4618      	mov	r0, r3
 8005874:	3710      	adds	r7, #16
 8005876:	46bd      	mov	sp, r7
 8005878:	bd80      	pop	{r7, pc}

0800587a <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 800587a:	b580      	push	{r7, lr}
 800587c:	b084      	sub	sp, #16
 800587e:	af00      	add	r7, sp, #0
 8005880:	60f8      	str	r0, [r7, #12]
 8005882:	60b9      	str	r1, [r7, #8]
 8005884:	607a      	str	r2, [r7, #4]
 8005886:	603b      	str	r3, [r7, #0]
 8005888:	e051      	b.n	800592e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 800588a:	68fb      	ldr	r3, [r7, #12]
 800588c:	681b      	ldr	r3, [r3, #0]
 800588e:	695b      	ldr	r3, [r3, #20]
 8005890:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8005894:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8005898:	d123      	bne.n	80058e2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 800589a:	68fb      	ldr	r3, [r7, #12]
 800589c:	681b      	ldr	r3, [r3, #0]
 800589e:	681a      	ldr	r2, [r3, #0]
 80058a0:	68fb      	ldr	r3, [r7, #12]
 80058a2:	681b      	ldr	r3, [r3, #0]
 80058a4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80058a8:	601a      	str	r2, [r3, #0]
 80058aa:	68fb      	ldr	r3, [r7, #12]
 80058ac:	681b      	ldr	r3, [r3, #0]
 80058ae:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 80058b2:	615a      	str	r2, [r3, #20]
 80058b4:	68fb      	ldr	r3, [r7, #12]
 80058b6:	2200      	movs	r2, #0
 80058b8:	631a      	str	r2, [r3, #48]	; 0x30
 80058ba:	68fb      	ldr	r3, [r7, #12]
 80058bc:	2220      	movs	r2, #32
 80058be:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80058c2:	68fb      	ldr	r3, [r7, #12]
 80058c4:	2200      	movs	r2, #0
 80058c6:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80058ca:	68fb      	ldr	r3, [r7, #12]
 80058cc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80058ce:	f043 0204 	orr.w	r2, r3, #4
 80058d2:	68fb      	ldr	r3, [r7, #12]
 80058d4:	641a      	str	r2, [r3, #64]	; 0x40
 80058d6:	68fb      	ldr	r3, [r7, #12]
 80058d8:	2200      	movs	r2, #0
 80058da:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80058de:	2301      	movs	r3, #1
 80058e0:	e046      	b.n	8005970 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 80058e2:	687b      	ldr	r3, [r7, #4]
 80058e4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80058e8:	d021      	beq.n	800592e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 80058ea:	f7fd ffb9 	bl	8003860 <HAL_GetTick>
 80058ee:	4602      	mov	r2, r0
 80058f0:	683b      	ldr	r3, [r7, #0]
 80058f2:	1ad3      	subs	r3, r2, r3
 80058f4:	687a      	ldr	r2, [r7, #4]
 80058f6:	429a      	cmp	r2, r3
 80058f8:	d302      	bcc.n	8005900 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 80058fa:	687b      	ldr	r3, [r7, #4]
 80058fc:	2b00      	cmp	r3, #0
 80058fe:	d116      	bne.n	800592e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 8005900:	68fb      	ldr	r3, [r7, #12]
 8005902:	2200      	movs	r2, #0
 8005904:	631a      	str	r2, [r3, #48]	; 0x30
 8005906:	68fb      	ldr	r3, [r7, #12]
 8005908:	2220      	movs	r2, #32
 800590a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800590e:	68fb      	ldr	r3, [r7, #12]
 8005910:	2200      	movs	r2, #0
 8005912:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005916:	68fb      	ldr	r3, [r7, #12]
 8005918:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800591a:	f043 0220 	orr.w	r2, r3, #32
 800591e:	68fb      	ldr	r3, [r7, #12]
 8005920:	641a      	str	r2, [r3, #64]	; 0x40
 8005922:	68fb      	ldr	r3, [r7, #12]
 8005924:	2200      	movs	r2, #0
 8005926:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800592a:	2301      	movs	r3, #1
 800592c:	e020      	b.n	8005970 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 800592e:	68bb      	ldr	r3, [r7, #8]
 8005930:	0c1b      	lsrs	r3, r3, #16
 8005932:	b2db      	uxtb	r3, r3
 8005934:	2b01      	cmp	r3, #1
 8005936:	d10c      	bne.n	8005952 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xd8>
 8005938:	68fb      	ldr	r3, [r7, #12]
 800593a:	681b      	ldr	r3, [r3, #0]
 800593c:	695b      	ldr	r3, [r3, #20]
 800593e:	43da      	mvns	r2, r3
 8005940:	68bb      	ldr	r3, [r7, #8]
 8005942:	4013      	ands	r3, r2
 8005944:	b29b      	uxth	r3, r3
 8005946:	2b00      	cmp	r3, #0
 8005948:	bf14      	ite	ne
 800594a:	2301      	movne	r3, #1
 800594c:	2300      	moveq	r3, #0
 800594e:	b2db      	uxtb	r3, r3
 8005950:	e00b      	b.n	800596a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf0>
 8005952:	68fb      	ldr	r3, [r7, #12]
 8005954:	681b      	ldr	r3, [r3, #0]
 8005956:	699b      	ldr	r3, [r3, #24]
 8005958:	43da      	mvns	r2, r3
 800595a:	68bb      	ldr	r3, [r7, #8]
 800595c:	4013      	ands	r3, r2
 800595e:	b29b      	uxth	r3, r3
 8005960:	2b00      	cmp	r3, #0
 8005962:	bf14      	ite	ne
 8005964:	2301      	movne	r3, #1
 8005966:	2300      	moveq	r3, #0
 8005968:	b2db      	uxtb	r3, r3
 800596a:	2b00      	cmp	r3, #0
 800596c:	d18d      	bne.n	800588a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 800596e:	2300      	movs	r3, #0
 8005970:	4618      	mov	r0, r3
 8005972:	3710      	adds	r7, #16
 8005974:	46bd      	mov	sp, r7
 8005976:	bd80      	pop	{r7, pc}

08005978 <I2C_WaitOnTXEFlagUntilTimeout>:
 8005978:	b580      	push	{r7, lr}
 800597a:	b084      	sub	sp, #16
 800597c:	af00      	add	r7, sp, #0
 800597e:	60f8      	str	r0, [r7, #12]
 8005980:	60b9      	str	r1, [r7, #8]
 8005982:	607a      	str	r2, [r7, #4]
 8005984:	e02d      	b.n	80059e2 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 8005986:	68f8      	ldr	r0, [r7, #12]
 8005988:	f000 f8ce 	bl	8005b28 <I2C_IsAcknowledgeFailed>
 800598c:	4603      	mov	r3, r0
 800598e:	2b00      	cmp	r3, #0
 8005990:	d001      	beq.n	8005996 <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 8005992:	2301      	movs	r3, #1
 8005994:	e02d      	b.n	80059f2 <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 8005996:	68bb      	ldr	r3, [r7, #8]
 8005998:	f1b3 3fff 	cmp.w	r3, #4294967295
 800599c:	d021      	beq.n	80059e2 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 800599e:	f7fd ff5f 	bl	8003860 <HAL_GetTick>
 80059a2:	4602      	mov	r2, r0
 80059a4:	687b      	ldr	r3, [r7, #4]
 80059a6:	1ad3      	subs	r3, r2, r3
 80059a8:	68ba      	ldr	r2, [r7, #8]
 80059aa:	429a      	cmp	r2, r3
 80059ac:	d302      	bcc.n	80059b4 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 80059ae:	68bb      	ldr	r3, [r7, #8]
 80059b0:	2b00      	cmp	r3, #0
 80059b2:	d116      	bne.n	80059e2 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 80059b4:	68fb      	ldr	r3, [r7, #12]
 80059b6:	2200      	movs	r2, #0
 80059b8:	631a      	str	r2, [r3, #48]	; 0x30
 80059ba:	68fb      	ldr	r3, [r7, #12]
 80059bc:	2220      	movs	r2, #32
 80059be:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80059c2:	68fb      	ldr	r3, [r7, #12]
 80059c4:	2200      	movs	r2, #0
 80059c6:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80059ca:	68fb      	ldr	r3, [r7, #12]
 80059cc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80059ce:	f043 0220 	orr.w	r2, r3, #32
 80059d2:	68fb      	ldr	r3, [r7, #12]
 80059d4:	641a      	str	r2, [r3, #64]	; 0x40
 80059d6:	68fb      	ldr	r3, [r7, #12]
 80059d8:	2200      	movs	r2, #0
 80059da:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80059de:	2301      	movs	r3, #1
 80059e0:	e007      	b.n	80059f2 <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 80059e2:	68fb      	ldr	r3, [r7, #12]
 80059e4:	681b      	ldr	r3, [r3, #0]
 80059e6:	695b      	ldr	r3, [r3, #20]
 80059e8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80059ec:	2b80      	cmp	r3, #128	; 0x80
 80059ee:	d1ca      	bne.n	8005986 <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 80059f0:	2300      	movs	r3, #0
 80059f2:	4618      	mov	r0, r3
 80059f4:	3710      	adds	r7, #16
 80059f6:	46bd      	mov	sp, r7
 80059f8:	bd80      	pop	{r7, pc}

080059fa <I2C_WaitOnBTFFlagUntilTimeout>:
 80059fa:	b580      	push	{r7, lr}
 80059fc:	b084      	sub	sp, #16
 80059fe:	af00      	add	r7, sp, #0
 8005a00:	60f8      	str	r0, [r7, #12]
 8005a02:	60b9      	str	r1, [r7, #8]
 8005a04:	607a      	str	r2, [r7, #4]
 8005a06:	e02d      	b.n	8005a64 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8005a08:	68f8      	ldr	r0, [r7, #12]
 8005a0a:	f000 f88d 	bl	8005b28 <I2C_IsAcknowledgeFailed>
 8005a0e:	4603      	mov	r3, r0
 8005a10:	2b00      	cmp	r3, #0
 8005a12:	d001      	beq.n	8005a18 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 8005a14:	2301      	movs	r3, #1
 8005a16:	e02d      	b.n	8005a74 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 8005a18:	68bb      	ldr	r3, [r7, #8]
 8005a1a:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005a1e:	d021      	beq.n	8005a64 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8005a20:	f7fd ff1e 	bl	8003860 <HAL_GetTick>
 8005a24:	4602      	mov	r2, r0
 8005a26:	687b      	ldr	r3, [r7, #4]
 8005a28:	1ad3      	subs	r3, r2, r3
 8005a2a:	68ba      	ldr	r2, [r7, #8]
 8005a2c:	429a      	cmp	r2, r3
 8005a2e:	d302      	bcc.n	8005a36 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8005a30:	68bb      	ldr	r3, [r7, #8]
 8005a32:	2b00      	cmp	r3, #0
 8005a34:	d116      	bne.n	8005a64 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8005a36:	68fb      	ldr	r3, [r7, #12]
 8005a38:	2200      	movs	r2, #0
 8005a3a:	631a      	str	r2, [r3, #48]	; 0x30
 8005a3c:	68fb      	ldr	r3, [r7, #12]
 8005a3e:	2220      	movs	r2, #32
 8005a40:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005a44:	68fb      	ldr	r3, [r7, #12]
 8005a46:	2200      	movs	r2, #0
 8005a48:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005a4c:	68fb      	ldr	r3, [r7, #12]
 8005a4e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005a50:	f043 0220 	orr.w	r2, r3, #32
 8005a54:	68fb      	ldr	r3, [r7, #12]
 8005a56:	641a      	str	r2, [r3, #64]	; 0x40
 8005a58:	68fb      	ldr	r3, [r7, #12]
 8005a5a:	2200      	movs	r2, #0
 8005a5c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005a60:	2301      	movs	r3, #1
 8005a62:	e007      	b.n	8005a74 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 8005a64:	68fb      	ldr	r3, [r7, #12]
 8005a66:	681b      	ldr	r3, [r3, #0]
 8005a68:	695b      	ldr	r3, [r3, #20]
 8005a6a:	f003 0304 	and.w	r3, r3, #4
 8005a6e:	2b04      	cmp	r3, #4
 8005a70:	d1ca      	bne.n	8005a08 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 8005a72:	2300      	movs	r3, #0
 8005a74:	4618      	mov	r0, r3
 8005a76:	3710      	adds	r7, #16
 8005a78:	46bd      	mov	sp, r7
 8005a7a:	bd80      	pop	{r7, pc}

08005a7c <I2C_WaitOnRXNEFlagUntilTimeout>:
 8005a7c:	b580      	push	{r7, lr}
 8005a7e:	b084      	sub	sp, #16
 8005a80:	af00      	add	r7, sp, #0
 8005a82:	60f8      	str	r0, [r7, #12]
 8005a84:	60b9      	str	r1, [r7, #8]
 8005a86:	607a      	str	r2, [r7, #4]
 8005a88:	e042      	b.n	8005b10 <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
 8005a8a:	68fb      	ldr	r3, [r7, #12]
 8005a8c:	681b      	ldr	r3, [r3, #0]
 8005a8e:	695b      	ldr	r3, [r3, #20]
 8005a90:	f003 0310 	and.w	r3, r3, #16
 8005a94:	2b10      	cmp	r3, #16
 8005a96:	d119      	bne.n	8005acc <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
 8005a98:	68fb      	ldr	r3, [r7, #12]
 8005a9a:	681b      	ldr	r3, [r3, #0]
 8005a9c:	f06f 0210 	mvn.w	r2, #16
 8005aa0:	615a      	str	r2, [r3, #20]
 8005aa2:	68fb      	ldr	r3, [r7, #12]
 8005aa4:	2200      	movs	r2, #0
 8005aa6:	631a      	str	r2, [r3, #48]	; 0x30
 8005aa8:	68fb      	ldr	r3, [r7, #12]
 8005aaa:	2220      	movs	r2, #32
 8005aac:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005ab0:	68fb      	ldr	r3, [r7, #12]
 8005ab2:	2200      	movs	r2, #0
 8005ab4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005ab8:	68fb      	ldr	r3, [r7, #12]
 8005aba:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8005abc:	68fb      	ldr	r3, [r7, #12]
 8005abe:	641a      	str	r2, [r3, #64]	; 0x40
 8005ac0:	68fb      	ldr	r3, [r7, #12]
 8005ac2:	2200      	movs	r2, #0
 8005ac4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005ac8:	2301      	movs	r3, #1
 8005aca:	e029      	b.n	8005b20 <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
 8005acc:	f7fd fec8 	bl	8003860 <HAL_GetTick>
 8005ad0:	4602      	mov	r2, r0
 8005ad2:	687b      	ldr	r3, [r7, #4]
 8005ad4:	1ad3      	subs	r3, r2, r3
 8005ad6:	68ba      	ldr	r2, [r7, #8]
 8005ad8:	429a      	cmp	r2, r3
 8005ada:	d302      	bcc.n	8005ae2 <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 8005adc:	68bb      	ldr	r3, [r7, #8]
 8005ade:	2b00      	cmp	r3, #0
 8005ae0:	d116      	bne.n	8005b10 <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
 8005ae2:	68fb      	ldr	r3, [r7, #12]
 8005ae4:	2200      	movs	r2, #0
 8005ae6:	631a      	str	r2, [r3, #48]	; 0x30
 8005ae8:	68fb      	ldr	r3, [r7, #12]
 8005aea:	2220      	movs	r2, #32
 8005aec:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005af0:	68fb      	ldr	r3, [r7, #12]
 8005af2:	2200      	movs	r2, #0
 8005af4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005af8:	68fb      	ldr	r3, [r7, #12]
 8005afa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005afc:	f043 0220 	orr.w	r2, r3, #32
 8005b00:	68fb      	ldr	r3, [r7, #12]
 8005b02:	641a      	str	r2, [r3, #64]	; 0x40
 8005b04:	68fb      	ldr	r3, [r7, #12]
 8005b06:	2200      	movs	r2, #0
 8005b08:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005b0c:	2301      	movs	r3, #1
 8005b0e:	e007      	b.n	8005b20 <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
 8005b10:	68fb      	ldr	r3, [r7, #12]
 8005b12:	681b      	ldr	r3, [r3, #0]
 8005b14:	695b      	ldr	r3, [r3, #20]
 8005b16:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005b1a:	2b40      	cmp	r3, #64	; 0x40
 8005b1c:	d1b5      	bne.n	8005a8a <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
 8005b1e:	2300      	movs	r3, #0
 8005b20:	4618      	mov	r0, r3
 8005b22:	3710      	adds	r7, #16
 8005b24:	46bd      	mov	sp, r7
 8005b26:	bd80      	pop	{r7, pc}

08005b28 <I2C_IsAcknowledgeFailed>:
 8005b28:	b480      	push	{r7}
 8005b2a:	b083      	sub	sp, #12
 8005b2c:	af00      	add	r7, sp, #0
 8005b2e:	6078      	str	r0, [r7, #4]
 8005b30:	687b      	ldr	r3, [r7, #4]
 8005b32:	681b      	ldr	r3, [r3, #0]
 8005b34:	695b      	ldr	r3, [r3, #20]
 8005b36:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8005b3a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8005b3e:	d11b      	bne.n	8005b78 <I2C_IsAcknowledgeFailed+0x50>
 8005b40:	687b      	ldr	r3, [r7, #4]
 8005b42:	681b      	ldr	r3, [r3, #0]
 8005b44:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8005b48:	615a      	str	r2, [r3, #20]
 8005b4a:	687b      	ldr	r3, [r7, #4]
 8005b4c:	2200      	movs	r2, #0
 8005b4e:	631a      	str	r2, [r3, #48]	; 0x30
 8005b50:	687b      	ldr	r3, [r7, #4]
 8005b52:	2220      	movs	r2, #32
 8005b54:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005b58:	687b      	ldr	r3, [r7, #4]
 8005b5a:	2200      	movs	r2, #0
 8005b5c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005b60:	687b      	ldr	r3, [r7, #4]
 8005b62:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005b64:	f043 0204 	orr.w	r2, r3, #4
 8005b68:	687b      	ldr	r3, [r7, #4]
 8005b6a:	641a      	str	r2, [r3, #64]	; 0x40
 8005b6c:	687b      	ldr	r3, [r7, #4]
 8005b6e:	2200      	movs	r2, #0
 8005b70:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005b74:	2301      	movs	r3, #1
 8005b76:	e000      	b.n	8005b7a <I2C_IsAcknowledgeFailed+0x52>
 8005b78:	2300      	movs	r3, #0
 8005b7a:	4618      	mov	r0, r3
 8005b7c:	370c      	adds	r7, #12
 8005b7e:	46bd      	mov	sp, r7
 8005b80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b84:	4770      	bx	lr
	...

08005b88 <HAL_RCC_OscConfig>:
 8005b88:	b580      	push	{r7, lr}
 8005b8a:	b086      	sub	sp, #24
 8005b8c:	af00      	add	r7, sp, #0
 8005b8e:	6078      	str	r0, [r7, #4]
 8005b90:	687b      	ldr	r3, [r7, #4]
 8005b92:	2b00      	cmp	r3, #0
 8005b94:	d101      	bne.n	8005b9a <HAL_RCC_OscConfig+0x12>
 8005b96:	2301      	movs	r3, #1
 8005b98:	e264      	b.n	8006064 <HAL_RCC_OscConfig+0x4dc>
 8005b9a:	687b      	ldr	r3, [r7, #4]
 8005b9c:	681b      	ldr	r3, [r3, #0]
 8005b9e:	f003 0301 	and.w	r3, r3, #1
 8005ba2:	2b00      	cmp	r3, #0
 8005ba4:	d075      	beq.n	8005c92 <HAL_RCC_OscConfig+0x10a>
 8005ba6:	4ba3      	ldr	r3, [pc, #652]	; (8005e34 <HAL_RCC_OscConfig+0x2ac>)
 8005ba8:	689b      	ldr	r3, [r3, #8]
 8005baa:	f003 030c 	and.w	r3, r3, #12
 8005bae:	2b04      	cmp	r3, #4
 8005bb0:	d00c      	beq.n	8005bcc <HAL_RCC_OscConfig+0x44>
 8005bb2:	4ba0      	ldr	r3, [pc, #640]	; (8005e34 <HAL_RCC_OscConfig+0x2ac>)
 8005bb4:	689b      	ldr	r3, [r3, #8]
 8005bb6:	f003 030c 	and.w	r3, r3, #12
 8005bba:	2b08      	cmp	r3, #8
 8005bbc:	d112      	bne.n	8005be4 <HAL_RCC_OscConfig+0x5c>
 8005bbe:	4b9d      	ldr	r3, [pc, #628]	; (8005e34 <HAL_RCC_OscConfig+0x2ac>)
 8005bc0:	685b      	ldr	r3, [r3, #4]
 8005bc2:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8005bc6:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8005bca:	d10b      	bne.n	8005be4 <HAL_RCC_OscConfig+0x5c>
 8005bcc:	4b99      	ldr	r3, [pc, #612]	; (8005e34 <HAL_RCC_OscConfig+0x2ac>)
 8005bce:	681b      	ldr	r3, [r3, #0]
 8005bd0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005bd4:	2b00      	cmp	r3, #0
 8005bd6:	d05b      	beq.n	8005c90 <HAL_RCC_OscConfig+0x108>
 8005bd8:	687b      	ldr	r3, [r7, #4]
 8005bda:	685b      	ldr	r3, [r3, #4]
 8005bdc:	2b00      	cmp	r3, #0
 8005bde:	d157      	bne.n	8005c90 <HAL_RCC_OscConfig+0x108>
 8005be0:	2301      	movs	r3, #1
 8005be2:	e23f      	b.n	8006064 <HAL_RCC_OscConfig+0x4dc>
 8005be4:	687b      	ldr	r3, [r7, #4]
 8005be6:	685b      	ldr	r3, [r3, #4]
 8005be8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8005bec:	d106      	bne.n	8005bfc <HAL_RCC_OscConfig+0x74>
 8005bee:	4b91      	ldr	r3, [pc, #580]	; (8005e34 <HAL_RCC_OscConfig+0x2ac>)
 8005bf0:	681b      	ldr	r3, [r3, #0]
 8005bf2:	4a90      	ldr	r2, [pc, #576]	; (8005e34 <HAL_RCC_OscConfig+0x2ac>)
 8005bf4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8005bf8:	6013      	str	r3, [r2, #0]
 8005bfa:	e01d      	b.n	8005c38 <HAL_RCC_OscConfig+0xb0>
 8005bfc:	687b      	ldr	r3, [r7, #4]
 8005bfe:	685b      	ldr	r3, [r3, #4]
 8005c00:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8005c04:	d10c      	bne.n	8005c20 <HAL_RCC_OscConfig+0x98>
 8005c06:	4b8b      	ldr	r3, [pc, #556]	; (8005e34 <HAL_RCC_OscConfig+0x2ac>)
 8005c08:	681b      	ldr	r3, [r3, #0]
 8005c0a:	4a8a      	ldr	r2, [pc, #552]	; (8005e34 <HAL_RCC_OscConfig+0x2ac>)
 8005c0c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8005c10:	6013      	str	r3, [r2, #0]
 8005c12:	4b88      	ldr	r3, [pc, #544]	; (8005e34 <HAL_RCC_OscConfig+0x2ac>)
 8005c14:	681b      	ldr	r3, [r3, #0]
 8005c16:	4a87      	ldr	r2, [pc, #540]	; (8005e34 <HAL_RCC_OscConfig+0x2ac>)
 8005c18:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8005c1c:	6013      	str	r3, [r2, #0]
 8005c1e:	e00b      	b.n	8005c38 <HAL_RCC_OscConfig+0xb0>
 8005c20:	4b84      	ldr	r3, [pc, #528]	; (8005e34 <HAL_RCC_OscConfig+0x2ac>)
 8005c22:	681b      	ldr	r3, [r3, #0]
 8005c24:	4a83      	ldr	r2, [pc, #524]	; (8005e34 <HAL_RCC_OscConfig+0x2ac>)
 8005c26:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8005c2a:	6013      	str	r3, [r2, #0]
 8005c2c:	4b81      	ldr	r3, [pc, #516]	; (8005e34 <HAL_RCC_OscConfig+0x2ac>)
 8005c2e:	681b      	ldr	r3, [r3, #0]
 8005c30:	4a80      	ldr	r2, [pc, #512]	; (8005e34 <HAL_RCC_OscConfig+0x2ac>)
 8005c32:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8005c36:	6013      	str	r3, [r2, #0]
 8005c38:	687b      	ldr	r3, [r7, #4]
 8005c3a:	685b      	ldr	r3, [r3, #4]
 8005c3c:	2b00      	cmp	r3, #0
 8005c3e:	d013      	beq.n	8005c68 <HAL_RCC_OscConfig+0xe0>
 8005c40:	f7fd fe0e 	bl	8003860 <HAL_GetTick>
 8005c44:	6138      	str	r0, [r7, #16]
 8005c46:	e008      	b.n	8005c5a <HAL_RCC_OscConfig+0xd2>
 8005c48:	f7fd fe0a 	bl	8003860 <HAL_GetTick>
 8005c4c:	4602      	mov	r2, r0
 8005c4e:	693b      	ldr	r3, [r7, #16]
 8005c50:	1ad3      	subs	r3, r2, r3
 8005c52:	2b64      	cmp	r3, #100	; 0x64
 8005c54:	d901      	bls.n	8005c5a <HAL_RCC_OscConfig+0xd2>
 8005c56:	2303      	movs	r3, #3
 8005c58:	e204      	b.n	8006064 <HAL_RCC_OscConfig+0x4dc>
 8005c5a:	4b76      	ldr	r3, [pc, #472]	; (8005e34 <HAL_RCC_OscConfig+0x2ac>)
 8005c5c:	681b      	ldr	r3, [r3, #0]
 8005c5e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005c62:	2b00      	cmp	r3, #0
 8005c64:	d0f0      	beq.n	8005c48 <HAL_RCC_OscConfig+0xc0>
 8005c66:	e014      	b.n	8005c92 <HAL_RCC_OscConfig+0x10a>
 8005c68:	f7fd fdfa 	bl	8003860 <HAL_GetTick>
 8005c6c:	6138      	str	r0, [r7, #16]
 8005c6e:	e008      	b.n	8005c82 <HAL_RCC_OscConfig+0xfa>
 8005c70:	f7fd fdf6 	bl	8003860 <HAL_GetTick>
 8005c74:	4602      	mov	r2, r0
 8005c76:	693b      	ldr	r3, [r7, #16]
 8005c78:	1ad3      	subs	r3, r2, r3
 8005c7a:	2b64      	cmp	r3, #100	; 0x64
 8005c7c:	d901      	bls.n	8005c82 <HAL_RCC_OscConfig+0xfa>
 8005c7e:	2303      	movs	r3, #3
 8005c80:	e1f0      	b.n	8006064 <HAL_RCC_OscConfig+0x4dc>
 8005c82:	4b6c      	ldr	r3, [pc, #432]	; (8005e34 <HAL_RCC_OscConfig+0x2ac>)
 8005c84:	681b      	ldr	r3, [r3, #0]
 8005c86:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005c8a:	2b00      	cmp	r3, #0
 8005c8c:	d1f0      	bne.n	8005c70 <HAL_RCC_OscConfig+0xe8>
 8005c8e:	e000      	b.n	8005c92 <HAL_RCC_OscConfig+0x10a>
 8005c90:	bf00      	nop
 8005c92:	687b      	ldr	r3, [r7, #4]
 8005c94:	681b      	ldr	r3, [r3, #0]
 8005c96:	f003 0302 	and.w	r3, r3, #2
 8005c9a:	2b00      	cmp	r3, #0
 8005c9c:	d063      	beq.n	8005d66 <HAL_RCC_OscConfig+0x1de>
 8005c9e:	4b65      	ldr	r3, [pc, #404]	; (8005e34 <HAL_RCC_OscConfig+0x2ac>)
 8005ca0:	689b      	ldr	r3, [r3, #8]
 8005ca2:	f003 030c 	and.w	r3, r3, #12
 8005ca6:	2b00      	cmp	r3, #0
 8005ca8:	d00b      	beq.n	8005cc2 <HAL_RCC_OscConfig+0x13a>
 8005caa:	4b62      	ldr	r3, [pc, #392]	; (8005e34 <HAL_RCC_OscConfig+0x2ac>)
 8005cac:	689b      	ldr	r3, [r3, #8]
 8005cae:	f003 030c 	and.w	r3, r3, #12
 8005cb2:	2b08      	cmp	r3, #8
 8005cb4:	d11c      	bne.n	8005cf0 <HAL_RCC_OscConfig+0x168>
 8005cb6:	4b5f      	ldr	r3, [pc, #380]	; (8005e34 <HAL_RCC_OscConfig+0x2ac>)
 8005cb8:	685b      	ldr	r3, [r3, #4]
 8005cba:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8005cbe:	2b00      	cmp	r3, #0
 8005cc0:	d116      	bne.n	8005cf0 <HAL_RCC_OscConfig+0x168>
 8005cc2:	4b5c      	ldr	r3, [pc, #368]	; (8005e34 <HAL_RCC_OscConfig+0x2ac>)
 8005cc4:	681b      	ldr	r3, [r3, #0]
 8005cc6:	f003 0302 	and.w	r3, r3, #2
 8005cca:	2b00      	cmp	r3, #0
 8005ccc:	d005      	beq.n	8005cda <HAL_RCC_OscConfig+0x152>
 8005cce:	687b      	ldr	r3, [r7, #4]
 8005cd0:	68db      	ldr	r3, [r3, #12]
 8005cd2:	2b01      	cmp	r3, #1
 8005cd4:	d001      	beq.n	8005cda <HAL_RCC_OscConfig+0x152>
 8005cd6:	2301      	movs	r3, #1
 8005cd8:	e1c4      	b.n	8006064 <HAL_RCC_OscConfig+0x4dc>
 8005cda:	4b56      	ldr	r3, [pc, #344]	; (8005e34 <HAL_RCC_OscConfig+0x2ac>)
 8005cdc:	681b      	ldr	r3, [r3, #0]
 8005cde:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8005ce2:	687b      	ldr	r3, [r7, #4]
 8005ce4:	691b      	ldr	r3, [r3, #16]
 8005ce6:	00db      	lsls	r3, r3, #3
 8005ce8:	4952      	ldr	r1, [pc, #328]	; (8005e34 <HAL_RCC_OscConfig+0x2ac>)
 8005cea:	4313      	orrs	r3, r2
 8005cec:	600b      	str	r3, [r1, #0]
 8005cee:	e03a      	b.n	8005d66 <HAL_RCC_OscConfig+0x1de>
 8005cf0:	687b      	ldr	r3, [r7, #4]
 8005cf2:	68db      	ldr	r3, [r3, #12]
 8005cf4:	2b00      	cmp	r3, #0
 8005cf6:	d020      	beq.n	8005d3a <HAL_RCC_OscConfig+0x1b2>
 8005cf8:	4b4f      	ldr	r3, [pc, #316]	; (8005e38 <HAL_RCC_OscConfig+0x2b0>)
 8005cfa:	2201      	movs	r2, #1
 8005cfc:	601a      	str	r2, [r3, #0]
 8005cfe:	f7fd fdaf 	bl	8003860 <HAL_GetTick>
 8005d02:	6138      	str	r0, [r7, #16]
 8005d04:	e008      	b.n	8005d18 <HAL_RCC_OscConfig+0x190>
 8005d06:	f7fd fdab 	bl	8003860 <HAL_GetTick>
 8005d0a:	4602      	mov	r2, r0
 8005d0c:	693b      	ldr	r3, [r7, #16]
 8005d0e:	1ad3      	subs	r3, r2, r3
 8005d10:	2b02      	cmp	r3, #2
 8005d12:	d901      	bls.n	8005d18 <HAL_RCC_OscConfig+0x190>
 8005d14:	2303      	movs	r3, #3
 8005d16:	e1a5      	b.n	8006064 <HAL_RCC_OscConfig+0x4dc>
 8005d18:	4b46      	ldr	r3, [pc, #280]	; (8005e34 <HAL_RCC_OscConfig+0x2ac>)
 8005d1a:	681b      	ldr	r3, [r3, #0]
 8005d1c:	f003 0302 	and.w	r3, r3, #2
 8005d20:	2b00      	cmp	r3, #0
 8005d22:	d0f0      	beq.n	8005d06 <HAL_RCC_OscConfig+0x17e>
 8005d24:	4b43      	ldr	r3, [pc, #268]	; (8005e34 <HAL_RCC_OscConfig+0x2ac>)
 8005d26:	681b      	ldr	r3, [r3, #0]
 8005d28:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8005d2c:	687b      	ldr	r3, [r7, #4]
 8005d2e:	691b      	ldr	r3, [r3, #16]
 8005d30:	00db      	lsls	r3, r3, #3
 8005d32:	4940      	ldr	r1, [pc, #256]	; (8005e34 <HAL_RCC_OscConfig+0x2ac>)
 8005d34:	4313      	orrs	r3, r2
 8005d36:	600b      	str	r3, [r1, #0]
 8005d38:	e015      	b.n	8005d66 <HAL_RCC_OscConfig+0x1de>
 8005d3a:	4b3f      	ldr	r3, [pc, #252]	; (8005e38 <HAL_RCC_OscConfig+0x2b0>)
 8005d3c:	2200      	movs	r2, #0
 8005d3e:	601a      	str	r2, [r3, #0]
 8005d40:	f7fd fd8e 	bl	8003860 <HAL_GetTick>
 8005d44:	6138      	str	r0, [r7, #16]
 8005d46:	e008      	b.n	8005d5a <HAL_RCC_OscConfig+0x1d2>
 8005d48:	f7fd fd8a 	bl	8003860 <HAL_GetTick>
 8005d4c:	4602      	mov	r2, r0
 8005d4e:	693b      	ldr	r3, [r7, #16]
 8005d50:	1ad3      	subs	r3, r2, r3
 8005d52:	2b02      	cmp	r3, #2
 8005d54:	d901      	bls.n	8005d5a <HAL_RCC_OscConfig+0x1d2>
 8005d56:	2303      	movs	r3, #3
 8005d58:	e184      	b.n	8006064 <HAL_RCC_OscConfig+0x4dc>
 8005d5a:	4b36      	ldr	r3, [pc, #216]	; (8005e34 <HAL_RCC_OscConfig+0x2ac>)
 8005d5c:	681b      	ldr	r3, [r3, #0]
 8005d5e:	f003 0302 	and.w	r3, r3, #2
 8005d62:	2b00      	cmp	r3, #0
 8005d64:	d1f0      	bne.n	8005d48 <HAL_RCC_OscConfig+0x1c0>
 8005d66:	687b      	ldr	r3, [r7, #4]
 8005d68:	681b      	ldr	r3, [r3, #0]
 8005d6a:	f003 0308 	and.w	r3, r3, #8
 8005d6e:	2b00      	cmp	r3, #0
 8005d70:	d030      	beq.n	8005dd4 <HAL_RCC_OscConfig+0x24c>
 8005d72:	687b      	ldr	r3, [r7, #4]
 8005d74:	695b      	ldr	r3, [r3, #20]
 8005d76:	2b00      	cmp	r3, #0
 8005d78:	d016      	beq.n	8005da8 <HAL_RCC_OscConfig+0x220>
 8005d7a:	4b30      	ldr	r3, [pc, #192]	; (8005e3c <HAL_RCC_OscConfig+0x2b4>)
 8005d7c:	2201      	movs	r2, #1
 8005d7e:	601a      	str	r2, [r3, #0]
 8005d80:	f7fd fd6e 	bl	8003860 <HAL_GetTick>
 8005d84:	6138      	str	r0, [r7, #16]
 8005d86:	e008      	b.n	8005d9a <HAL_RCC_OscConfig+0x212>
 8005d88:	f7fd fd6a 	bl	8003860 <HAL_GetTick>
 8005d8c:	4602      	mov	r2, r0
 8005d8e:	693b      	ldr	r3, [r7, #16]
 8005d90:	1ad3      	subs	r3, r2, r3
 8005d92:	2b02      	cmp	r3, #2
 8005d94:	d901      	bls.n	8005d9a <HAL_RCC_OscConfig+0x212>
 8005d96:	2303      	movs	r3, #3
 8005d98:	e164      	b.n	8006064 <HAL_RCC_OscConfig+0x4dc>
 8005d9a:	4b26      	ldr	r3, [pc, #152]	; (8005e34 <HAL_RCC_OscConfig+0x2ac>)
 8005d9c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005d9e:	f003 0302 	and.w	r3, r3, #2
 8005da2:	2b00      	cmp	r3, #0
 8005da4:	d0f0      	beq.n	8005d88 <HAL_RCC_OscConfig+0x200>
 8005da6:	e015      	b.n	8005dd4 <HAL_RCC_OscConfig+0x24c>
 8005da8:	4b24      	ldr	r3, [pc, #144]	; (8005e3c <HAL_RCC_OscConfig+0x2b4>)
 8005daa:	2200      	movs	r2, #0
 8005dac:	601a      	str	r2, [r3, #0]
 8005dae:	f7fd fd57 	bl	8003860 <HAL_GetTick>
 8005db2:	6138      	str	r0, [r7, #16]
 8005db4:	e008      	b.n	8005dc8 <HAL_RCC_OscConfig+0x240>
 8005db6:	f7fd fd53 	bl	8003860 <HAL_GetTick>
 8005dba:	4602      	mov	r2, r0
 8005dbc:	693b      	ldr	r3, [r7, #16]
 8005dbe:	1ad3      	subs	r3, r2, r3
 8005dc0:	2b02      	cmp	r3, #2
 8005dc2:	d901      	bls.n	8005dc8 <HAL_RCC_OscConfig+0x240>
 8005dc4:	2303      	movs	r3, #3
 8005dc6:	e14d      	b.n	8006064 <HAL_RCC_OscConfig+0x4dc>
 8005dc8:	4b1a      	ldr	r3, [pc, #104]	; (8005e34 <HAL_RCC_OscConfig+0x2ac>)
 8005dca:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005dcc:	f003 0302 	and.w	r3, r3, #2
 8005dd0:	2b00      	cmp	r3, #0
 8005dd2:	d1f0      	bne.n	8005db6 <HAL_RCC_OscConfig+0x22e>
 8005dd4:	687b      	ldr	r3, [r7, #4]
 8005dd6:	681b      	ldr	r3, [r3, #0]
 8005dd8:	f003 0304 	and.w	r3, r3, #4
 8005ddc:	2b00      	cmp	r3, #0
 8005dde:	f000 80a0 	beq.w	8005f22 <HAL_RCC_OscConfig+0x39a>
 8005de2:	2300      	movs	r3, #0
 8005de4:	75fb      	strb	r3, [r7, #23]
 8005de6:	4b13      	ldr	r3, [pc, #76]	; (8005e34 <HAL_RCC_OscConfig+0x2ac>)
 8005de8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005dea:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005dee:	2b00      	cmp	r3, #0
 8005df0:	d10f      	bne.n	8005e12 <HAL_RCC_OscConfig+0x28a>
 8005df2:	2300      	movs	r3, #0
 8005df4:	60bb      	str	r3, [r7, #8]
 8005df6:	4b0f      	ldr	r3, [pc, #60]	; (8005e34 <HAL_RCC_OscConfig+0x2ac>)
 8005df8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005dfa:	4a0e      	ldr	r2, [pc, #56]	; (8005e34 <HAL_RCC_OscConfig+0x2ac>)
 8005dfc:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005e00:	6413      	str	r3, [r2, #64]	; 0x40
 8005e02:	4b0c      	ldr	r3, [pc, #48]	; (8005e34 <HAL_RCC_OscConfig+0x2ac>)
 8005e04:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005e06:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005e0a:	60bb      	str	r3, [r7, #8]
 8005e0c:	68bb      	ldr	r3, [r7, #8]
 8005e0e:	2301      	movs	r3, #1
 8005e10:	75fb      	strb	r3, [r7, #23]
 8005e12:	4b0b      	ldr	r3, [pc, #44]	; (8005e40 <HAL_RCC_OscConfig+0x2b8>)
 8005e14:	681b      	ldr	r3, [r3, #0]
 8005e16:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005e1a:	2b00      	cmp	r3, #0
 8005e1c:	d121      	bne.n	8005e62 <HAL_RCC_OscConfig+0x2da>
 8005e1e:	4b08      	ldr	r3, [pc, #32]	; (8005e40 <HAL_RCC_OscConfig+0x2b8>)
 8005e20:	681b      	ldr	r3, [r3, #0]
 8005e22:	4a07      	ldr	r2, [pc, #28]	; (8005e40 <HAL_RCC_OscConfig+0x2b8>)
 8005e24:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005e28:	6013      	str	r3, [r2, #0]
 8005e2a:	f7fd fd19 	bl	8003860 <HAL_GetTick>
 8005e2e:	6138      	str	r0, [r7, #16]
 8005e30:	e011      	b.n	8005e56 <HAL_RCC_OscConfig+0x2ce>
 8005e32:	bf00      	nop
 8005e34:	40023800 	.word	0x40023800
 8005e38:	42470000 	.word	0x42470000
 8005e3c:	42470e80 	.word	0x42470e80
 8005e40:	40007000 	.word	0x40007000
 8005e44:	f7fd fd0c 	bl	8003860 <HAL_GetTick>
 8005e48:	4602      	mov	r2, r0
 8005e4a:	693b      	ldr	r3, [r7, #16]
 8005e4c:	1ad3      	subs	r3, r2, r3
 8005e4e:	2b02      	cmp	r3, #2
 8005e50:	d901      	bls.n	8005e56 <HAL_RCC_OscConfig+0x2ce>
 8005e52:	2303      	movs	r3, #3
 8005e54:	e106      	b.n	8006064 <HAL_RCC_OscConfig+0x4dc>
 8005e56:	4b85      	ldr	r3, [pc, #532]	; (800606c <HAL_RCC_OscConfig+0x4e4>)
 8005e58:	681b      	ldr	r3, [r3, #0]
 8005e5a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005e5e:	2b00      	cmp	r3, #0
 8005e60:	d0f0      	beq.n	8005e44 <HAL_RCC_OscConfig+0x2bc>
 8005e62:	687b      	ldr	r3, [r7, #4]
 8005e64:	689b      	ldr	r3, [r3, #8]
 8005e66:	2b01      	cmp	r3, #1
 8005e68:	d106      	bne.n	8005e78 <HAL_RCC_OscConfig+0x2f0>
 8005e6a:	4b81      	ldr	r3, [pc, #516]	; (8006070 <HAL_RCC_OscConfig+0x4e8>)
 8005e6c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005e6e:	4a80      	ldr	r2, [pc, #512]	; (8006070 <HAL_RCC_OscConfig+0x4e8>)
 8005e70:	f043 0301 	orr.w	r3, r3, #1
 8005e74:	6713      	str	r3, [r2, #112]	; 0x70
 8005e76:	e01c      	b.n	8005eb2 <HAL_RCC_OscConfig+0x32a>
 8005e78:	687b      	ldr	r3, [r7, #4]
 8005e7a:	689b      	ldr	r3, [r3, #8]
 8005e7c:	2b05      	cmp	r3, #5
 8005e7e:	d10c      	bne.n	8005e9a <HAL_RCC_OscConfig+0x312>
 8005e80:	4b7b      	ldr	r3, [pc, #492]	; (8006070 <HAL_RCC_OscConfig+0x4e8>)
 8005e82:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005e84:	4a7a      	ldr	r2, [pc, #488]	; (8006070 <HAL_RCC_OscConfig+0x4e8>)
 8005e86:	f043 0304 	orr.w	r3, r3, #4
 8005e8a:	6713      	str	r3, [r2, #112]	; 0x70
 8005e8c:	4b78      	ldr	r3, [pc, #480]	; (8006070 <HAL_RCC_OscConfig+0x4e8>)
 8005e8e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005e90:	4a77      	ldr	r2, [pc, #476]	; (8006070 <HAL_RCC_OscConfig+0x4e8>)
 8005e92:	f043 0301 	orr.w	r3, r3, #1
 8005e96:	6713      	str	r3, [r2, #112]	; 0x70
 8005e98:	e00b      	b.n	8005eb2 <HAL_RCC_OscConfig+0x32a>
 8005e9a:	4b75      	ldr	r3, [pc, #468]	; (8006070 <HAL_RCC_OscConfig+0x4e8>)
 8005e9c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005e9e:	4a74      	ldr	r2, [pc, #464]	; (8006070 <HAL_RCC_OscConfig+0x4e8>)
 8005ea0:	f023 0301 	bic.w	r3, r3, #1
 8005ea4:	6713      	str	r3, [r2, #112]	; 0x70
 8005ea6:	4b72      	ldr	r3, [pc, #456]	; (8006070 <HAL_RCC_OscConfig+0x4e8>)
 8005ea8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005eaa:	4a71      	ldr	r2, [pc, #452]	; (8006070 <HAL_RCC_OscConfig+0x4e8>)
 8005eac:	f023 0304 	bic.w	r3, r3, #4
 8005eb0:	6713      	str	r3, [r2, #112]	; 0x70
 8005eb2:	687b      	ldr	r3, [r7, #4]
 8005eb4:	689b      	ldr	r3, [r3, #8]
 8005eb6:	2b00      	cmp	r3, #0
 8005eb8:	d015      	beq.n	8005ee6 <HAL_RCC_OscConfig+0x35e>
 8005eba:	f7fd fcd1 	bl	8003860 <HAL_GetTick>
 8005ebe:	6138      	str	r0, [r7, #16]
 8005ec0:	e00a      	b.n	8005ed8 <HAL_RCC_OscConfig+0x350>
 8005ec2:	f7fd fccd 	bl	8003860 <HAL_GetTick>
 8005ec6:	4602      	mov	r2, r0
 8005ec8:	693b      	ldr	r3, [r7, #16]
 8005eca:	1ad3      	subs	r3, r2, r3
 8005ecc:	f241 3288 	movw	r2, #5000	; 0x1388
 8005ed0:	4293      	cmp	r3, r2
 8005ed2:	d901      	bls.n	8005ed8 <HAL_RCC_OscConfig+0x350>
 8005ed4:	2303      	movs	r3, #3
 8005ed6:	e0c5      	b.n	8006064 <HAL_RCC_OscConfig+0x4dc>
 8005ed8:	4b65      	ldr	r3, [pc, #404]	; (8006070 <HAL_RCC_OscConfig+0x4e8>)
 8005eda:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005edc:	f003 0302 	and.w	r3, r3, #2
 8005ee0:	2b00      	cmp	r3, #0
 8005ee2:	d0ee      	beq.n	8005ec2 <HAL_RCC_OscConfig+0x33a>
 8005ee4:	e014      	b.n	8005f10 <HAL_RCC_OscConfig+0x388>
 8005ee6:	f7fd fcbb 	bl	8003860 <HAL_GetTick>
 8005eea:	6138      	str	r0, [r7, #16]
 8005eec:	e00a      	b.n	8005f04 <HAL_RCC_OscConfig+0x37c>
 8005eee:	f7fd fcb7 	bl	8003860 <HAL_GetTick>
 8005ef2:	4602      	mov	r2, r0
 8005ef4:	693b      	ldr	r3, [r7, #16]
 8005ef6:	1ad3      	subs	r3, r2, r3
 8005ef8:	f241 3288 	movw	r2, #5000	; 0x1388
 8005efc:	4293      	cmp	r3, r2
 8005efe:	d901      	bls.n	8005f04 <HAL_RCC_OscConfig+0x37c>
 8005f00:	2303      	movs	r3, #3
 8005f02:	e0af      	b.n	8006064 <HAL_RCC_OscConfig+0x4dc>
 8005f04:	4b5a      	ldr	r3, [pc, #360]	; (8006070 <HAL_RCC_OscConfig+0x4e8>)
 8005f06:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005f08:	f003 0302 	and.w	r3, r3, #2
 8005f0c:	2b00      	cmp	r3, #0
 8005f0e:	d1ee      	bne.n	8005eee <HAL_RCC_OscConfig+0x366>
 8005f10:	7dfb      	ldrb	r3, [r7, #23]
 8005f12:	2b01      	cmp	r3, #1
 8005f14:	d105      	bne.n	8005f22 <HAL_RCC_OscConfig+0x39a>
 8005f16:	4b56      	ldr	r3, [pc, #344]	; (8006070 <HAL_RCC_OscConfig+0x4e8>)
 8005f18:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005f1a:	4a55      	ldr	r2, [pc, #340]	; (8006070 <HAL_RCC_OscConfig+0x4e8>)
 8005f1c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8005f20:	6413      	str	r3, [r2, #64]	; 0x40
 8005f22:	687b      	ldr	r3, [r7, #4]
 8005f24:	699b      	ldr	r3, [r3, #24]
 8005f26:	2b00      	cmp	r3, #0
 8005f28:	f000 809b 	beq.w	8006062 <HAL_RCC_OscConfig+0x4da>
 8005f2c:	4b50      	ldr	r3, [pc, #320]	; (8006070 <HAL_RCC_OscConfig+0x4e8>)
 8005f2e:	689b      	ldr	r3, [r3, #8]
 8005f30:	f003 030c 	and.w	r3, r3, #12
 8005f34:	2b08      	cmp	r3, #8
 8005f36:	d05c      	beq.n	8005ff2 <HAL_RCC_OscConfig+0x46a>
 8005f38:	687b      	ldr	r3, [r7, #4]
 8005f3a:	699b      	ldr	r3, [r3, #24]
 8005f3c:	2b02      	cmp	r3, #2
 8005f3e:	d141      	bne.n	8005fc4 <HAL_RCC_OscConfig+0x43c>
 8005f40:	4b4c      	ldr	r3, [pc, #304]	; (8006074 <HAL_RCC_OscConfig+0x4ec>)
 8005f42:	2200      	movs	r2, #0
 8005f44:	601a      	str	r2, [r3, #0]
 8005f46:	f7fd fc8b 	bl	8003860 <HAL_GetTick>
 8005f4a:	6138      	str	r0, [r7, #16]
 8005f4c:	e008      	b.n	8005f60 <HAL_RCC_OscConfig+0x3d8>
 8005f4e:	f7fd fc87 	bl	8003860 <HAL_GetTick>
 8005f52:	4602      	mov	r2, r0
 8005f54:	693b      	ldr	r3, [r7, #16]
 8005f56:	1ad3      	subs	r3, r2, r3
 8005f58:	2b02      	cmp	r3, #2
 8005f5a:	d901      	bls.n	8005f60 <HAL_RCC_OscConfig+0x3d8>
 8005f5c:	2303      	movs	r3, #3
 8005f5e:	e081      	b.n	8006064 <HAL_RCC_OscConfig+0x4dc>
 8005f60:	4b43      	ldr	r3, [pc, #268]	; (8006070 <HAL_RCC_OscConfig+0x4e8>)
 8005f62:	681b      	ldr	r3, [r3, #0]
 8005f64:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005f68:	2b00      	cmp	r3, #0
 8005f6a:	d1f0      	bne.n	8005f4e <HAL_RCC_OscConfig+0x3c6>
 8005f6c:	687b      	ldr	r3, [r7, #4]
 8005f6e:	69da      	ldr	r2, [r3, #28]
 8005f70:	687b      	ldr	r3, [r7, #4]
 8005f72:	6a1b      	ldr	r3, [r3, #32]
 8005f74:	431a      	orrs	r2, r3
 8005f76:	687b      	ldr	r3, [r7, #4]
 8005f78:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f7a:	019b      	lsls	r3, r3, #6
 8005f7c:	431a      	orrs	r2, r3
 8005f7e:	687b      	ldr	r3, [r7, #4]
 8005f80:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005f82:	085b      	lsrs	r3, r3, #1
 8005f84:	3b01      	subs	r3, #1
 8005f86:	041b      	lsls	r3, r3, #16
 8005f88:	431a      	orrs	r2, r3
 8005f8a:	687b      	ldr	r3, [r7, #4]
 8005f8c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005f8e:	061b      	lsls	r3, r3, #24
 8005f90:	4937      	ldr	r1, [pc, #220]	; (8006070 <HAL_RCC_OscConfig+0x4e8>)
 8005f92:	4313      	orrs	r3, r2
 8005f94:	604b      	str	r3, [r1, #4]
 8005f96:	4b37      	ldr	r3, [pc, #220]	; (8006074 <HAL_RCC_OscConfig+0x4ec>)
 8005f98:	2201      	movs	r2, #1
 8005f9a:	601a      	str	r2, [r3, #0]
 8005f9c:	f7fd fc60 	bl	8003860 <HAL_GetTick>
 8005fa0:	6138      	str	r0, [r7, #16]
 8005fa2:	e008      	b.n	8005fb6 <HAL_RCC_OscConfig+0x42e>
 8005fa4:	f7fd fc5c 	bl	8003860 <HAL_GetTick>
 8005fa8:	4602      	mov	r2, r0
 8005faa:	693b      	ldr	r3, [r7, #16]
 8005fac:	1ad3      	subs	r3, r2, r3
 8005fae:	2b02      	cmp	r3, #2
 8005fb0:	d901      	bls.n	8005fb6 <HAL_RCC_OscConfig+0x42e>
 8005fb2:	2303      	movs	r3, #3
 8005fb4:	e056      	b.n	8006064 <HAL_RCC_OscConfig+0x4dc>
 8005fb6:	4b2e      	ldr	r3, [pc, #184]	; (8006070 <HAL_RCC_OscConfig+0x4e8>)
 8005fb8:	681b      	ldr	r3, [r3, #0]
 8005fba:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005fbe:	2b00      	cmp	r3, #0
 8005fc0:	d0f0      	beq.n	8005fa4 <HAL_RCC_OscConfig+0x41c>
 8005fc2:	e04e      	b.n	8006062 <HAL_RCC_OscConfig+0x4da>
 8005fc4:	4b2b      	ldr	r3, [pc, #172]	; (8006074 <HAL_RCC_OscConfig+0x4ec>)
 8005fc6:	2200      	movs	r2, #0
 8005fc8:	601a      	str	r2, [r3, #0]
 8005fca:	f7fd fc49 	bl	8003860 <HAL_GetTick>
 8005fce:	6138      	str	r0, [r7, #16]
 8005fd0:	e008      	b.n	8005fe4 <HAL_RCC_OscConfig+0x45c>
 8005fd2:	f7fd fc45 	bl	8003860 <HAL_GetTick>
 8005fd6:	4602      	mov	r2, r0
 8005fd8:	693b      	ldr	r3, [r7, #16]
 8005fda:	1ad3      	subs	r3, r2, r3
 8005fdc:	2b02      	cmp	r3, #2
 8005fde:	d901      	bls.n	8005fe4 <HAL_RCC_OscConfig+0x45c>
 8005fe0:	2303      	movs	r3, #3
 8005fe2:	e03f      	b.n	8006064 <HAL_RCC_OscConfig+0x4dc>
 8005fe4:	4b22      	ldr	r3, [pc, #136]	; (8006070 <HAL_RCC_OscConfig+0x4e8>)
 8005fe6:	681b      	ldr	r3, [r3, #0]
 8005fe8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005fec:	2b00      	cmp	r3, #0
 8005fee:	d1f0      	bne.n	8005fd2 <HAL_RCC_OscConfig+0x44a>
 8005ff0:	e037      	b.n	8006062 <HAL_RCC_OscConfig+0x4da>
 8005ff2:	687b      	ldr	r3, [r7, #4]
 8005ff4:	699b      	ldr	r3, [r3, #24]
 8005ff6:	2b01      	cmp	r3, #1
 8005ff8:	d101      	bne.n	8005ffe <HAL_RCC_OscConfig+0x476>
 8005ffa:	2301      	movs	r3, #1
 8005ffc:	e032      	b.n	8006064 <HAL_RCC_OscConfig+0x4dc>
 8005ffe:	4b1c      	ldr	r3, [pc, #112]	; (8006070 <HAL_RCC_OscConfig+0x4e8>)
 8006000:	685b      	ldr	r3, [r3, #4]
 8006002:	60fb      	str	r3, [r7, #12]
 8006004:	687b      	ldr	r3, [r7, #4]
 8006006:	699b      	ldr	r3, [r3, #24]
 8006008:	2b01      	cmp	r3, #1
 800600a:	d028      	beq.n	800605e <HAL_RCC_OscConfig+0x4d6>
 800600c:	68fb      	ldr	r3, [r7, #12]
 800600e:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8006012:	687b      	ldr	r3, [r7, #4]
 8006014:	69db      	ldr	r3, [r3, #28]
 8006016:	429a      	cmp	r2, r3
 8006018:	d121      	bne.n	800605e <HAL_RCC_OscConfig+0x4d6>
 800601a:	68fb      	ldr	r3, [r7, #12]
 800601c:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8006020:	687b      	ldr	r3, [r7, #4]
 8006022:	6a1b      	ldr	r3, [r3, #32]
 8006024:	429a      	cmp	r2, r3
 8006026:	d11a      	bne.n	800605e <HAL_RCC_OscConfig+0x4d6>
 8006028:	68fa      	ldr	r2, [r7, #12]
 800602a:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 800602e:	4013      	ands	r3, r2
 8006030:	687a      	ldr	r2, [r7, #4]
 8006032:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8006034:	0192      	lsls	r2, r2, #6
 8006036:	4293      	cmp	r3, r2
 8006038:	d111      	bne.n	800605e <HAL_RCC_OscConfig+0x4d6>
 800603a:	68fb      	ldr	r3, [r7, #12]
 800603c:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8006040:	687b      	ldr	r3, [r7, #4]
 8006042:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006044:	085b      	lsrs	r3, r3, #1
 8006046:	3b01      	subs	r3, #1
 8006048:	041b      	lsls	r3, r3, #16
 800604a:	429a      	cmp	r2, r3
 800604c:	d107      	bne.n	800605e <HAL_RCC_OscConfig+0x4d6>
 800604e:	68fb      	ldr	r3, [r7, #12]
 8006050:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8006054:	687b      	ldr	r3, [r7, #4]
 8006056:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006058:	061b      	lsls	r3, r3, #24
 800605a:	429a      	cmp	r2, r3
 800605c:	d001      	beq.n	8006062 <HAL_RCC_OscConfig+0x4da>
 800605e:	2301      	movs	r3, #1
 8006060:	e000      	b.n	8006064 <HAL_RCC_OscConfig+0x4dc>
 8006062:	2300      	movs	r3, #0
 8006064:	4618      	mov	r0, r3
 8006066:	3718      	adds	r7, #24
 8006068:	46bd      	mov	sp, r7
 800606a:	bd80      	pop	{r7, pc}
 800606c:	40007000 	.word	0x40007000
 8006070:	40023800 	.word	0x40023800
 8006074:	42470060 	.word	0x42470060

08006078 <HAL_RCC_ClockConfig>:
 8006078:	b580      	push	{r7, lr}
 800607a:	b084      	sub	sp, #16
 800607c:	af00      	add	r7, sp, #0
 800607e:	6078      	str	r0, [r7, #4]
 8006080:	6039      	str	r1, [r7, #0]
 8006082:	687b      	ldr	r3, [r7, #4]
 8006084:	2b00      	cmp	r3, #0
 8006086:	d101      	bne.n	800608c <HAL_RCC_ClockConfig+0x14>
 8006088:	2301      	movs	r3, #1
 800608a:	e0cc      	b.n	8006226 <HAL_RCC_ClockConfig+0x1ae>
 800608c:	4b68      	ldr	r3, [pc, #416]	; (8006230 <HAL_RCC_ClockConfig+0x1b8>)
 800608e:	681b      	ldr	r3, [r3, #0]
 8006090:	f003 0307 	and.w	r3, r3, #7
 8006094:	683a      	ldr	r2, [r7, #0]
 8006096:	429a      	cmp	r2, r3
 8006098:	d90c      	bls.n	80060b4 <HAL_RCC_ClockConfig+0x3c>
 800609a:	4b65      	ldr	r3, [pc, #404]	; (8006230 <HAL_RCC_ClockConfig+0x1b8>)
 800609c:	683a      	ldr	r2, [r7, #0]
 800609e:	b2d2      	uxtb	r2, r2
 80060a0:	701a      	strb	r2, [r3, #0]
 80060a2:	4b63      	ldr	r3, [pc, #396]	; (8006230 <HAL_RCC_ClockConfig+0x1b8>)
 80060a4:	681b      	ldr	r3, [r3, #0]
 80060a6:	f003 0307 	and.w	r3, r3, #7
 80060aa:	683a      	ldr	r2, [r7, #0]
 80060ac:	429a      	cmp	r2, r3
 80060ae:	d001      	beq.n	80060b4 <HAL_RCC_ClockConfig+0x3c>
 80060b0:	2301      	movs	r3, #1
 80060b2:	e0b8      	b.n	8006226 <HAL_RCC_ClockConfig+0x1ae>
 80060b4:	687b      	ldr	r3, [r7, #4]
 80060b6:	681b      	ldr	r3, [r3, #0]
 80060b8:	f003 0302 	and.w	r3, r3, #2
 80060bc:	2b00      	cmp	r3, #0
 80060be:	d020      	beq.n	8006102 <HAL_RCC_ClockConfig+0x8a>
 80060c0:	687b      	ldr	r3, [r7, #4]
 80060c2:	681b      	ldr	r3, [r3, #0]
 80060c4:	f003 0304 	and.w	r3, r3, #4
 80060c8:	2b00      	cmp	r3, #0
 80060ca:	d005      	beq.n	80060d8 <HAL_RCC_ClockConfig+0x60>
 80060cc:	4b59      	ldr	r3, [pc, #356]	; (8006234 <HAL_RCC_ClockConfig+0x1bc>)
 80060ce:	689b      	ldr	r3, [r3, #8]
 80060d0:	4a58      	ldr	r2, [pc, #352]	; (8006234 <HAL_RCC_ClockConfig+0x1bc>)
 80060d2:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 80060d6:	6093      	str	r3, [r2, #8]
 80060d8:	687b      	ldr	r3, [r7, #4]
 80060da:	681b      	ldr	r3, [r3, #0]
 80060dc:	f003 0308 	and.w	r3, r3, #8
 80060e0:	2b00      	cmp	r3, #0
 80060e2:	d005      	beq.n	80060f0 <HAL_RCC_ClockConfig+0x78>
 80060e4:	4b53      	ldr	r3, [pc, #332]	; (8006234 <HAL_RCC_ClockConfig+0x1bc>)
 80060e6:	689b      	ldr	r3, [r3, #8]
 80060e8:	4a52      	ldr	r2, [pc, #328]	; (8006234 <HAL_RCC_ClockConfig+0x1bc>)
 80060ea:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 80060ee:	6093      	str	r3, [r2, #8]
 80060f0:	4b50      	ldr	r3, [pc, #320]	; (8006234 <HAL_RCC_ClockConfig+0x1bc>)
 80060f2:	689b      	ldr	r3, [r3, #8]
 80060f4:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80060f8:	687b      	ldr	r3, [r7, #4]
 80060fa:	689b      	ldr	r3, [r3, #8]
 80060fc:	494d      	ldr	r1, [pc, #308]	; (8006234 <HAL_RCC_ClockConfig+0x1bc>)
 80060fe:	4313      	orrs	r3, r2
 8006100:	608b      	str	r3, [r1, #8]
 8006102:	687b      	ldr	r3, [r7, #4]
 8006104:	681b      	ldr	r3, [r3, #0]
 8006106:	f003 0301 	and.w	r3, r3, #1
 800610a:	2b00      	cmp	r3, #0
 800610c:	d044      	beq.n	8006198 <HAL_RCC_ClockConfig+0x120>
 800610e:	687b      	ldr	r3, [r7, #4]
 8006110:	685b      	ldr	r3, [r3, #4]
 8006112:	2b01      	cmp	r3, #1
 8006114:	d107      	bne.n	8006126 <HAL_RCC_ClockConfig+0xae>
 8006116:	4b47      	ldr	r3, [pc, #284]	; (8006234 <HAL_RCC_ClockConfig+0x1bc>)
 8006118:	681b      	ldr	r3, [r3, #0]
 800611a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800611e:	2b00      	cmp	r3, #0
 8006120:	d119      	bne.n	8006156 <HAL_RCC_ClockConfig+0xde>
 8006122:	2301      	movs	r3, #1
 8006124:	e07f      	b.n	8006226 <HAL_RCC_ClockConfig+0x1ae>
 8006126:	687b      	ldr	r3, [r7, #4]
 8006128:	685b      	ldr	r3, [r3, #4]
 800612a:	2b02      	cmp	r3, #2
 800612c:	d003      	beq.n	8006136 <HAL_RCC_ClockConfig+0xbe>
 800612e:	687b      	ldr	r3, [r7, #4]
 8006130:	685b      	ldr	r3, [r3, #4]
 8006132:	2b03      	cmp	r3, #3
 8006134:	d107      	bne.n	8006146 <HAL_RCC_ClockConfig+0xce>
 8006136:	4b3f      	ldr	r3, [pc, #252]	; (8006234 <HAL_RCC_ClockConfig+0x1bc>)
 8006138:	681b      	ldr	r3, [r3, #0]
 800613a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800613e:	2b00      	cmp	r3, #0
 8006140:	d109      	bne.n	8006156 <HAL_RCC_ClockConfig+0xde>
 8006142:	2301      	movs	r3, #1
 8006144:	e06f      	b.n	8006226 <HAL_RCC_ClockConfig+0x1ae>
 8006146:	4b3b      	ldr	r3, [pc, #236]	; (8006234 <HAL_RCC_ClockConfig+0x1bc>)
 8006148:	681b      	ldr	r3, [r3, #0]
 800614a:	f003 0302 	and.w	r3, r3, #2
 800614e:	2b00      	cmp	r3, #0
 8006150:	d101      	bne.n	8006156 <HAL_RCC_ClockConfig+0xde>
 8006152:	2301      	movs	r3, #1
 8006154:	e067      	b.n	8006226 <HAL_RCC_ClockConfig+0x1ae>
 8006156:	4b37      	ldr	r3, [pc, #220]	; (8006234 <HAL_RCC_ClockConfig+0x1bc>)
 8006158:	689b      	ldr	r3, [r3, #8]
 800615a:	f023 0203 	bic.w	r2, r3, #3
 800615e:	687b      	ldr	r3, [r7, #4]
 8006160:	685b      	ldr	r3, [r3, #4]
 8006162:	4934      	ldr	r1, [pc, #208]	; (8006234 <HAL_RCC_ClockConfig+0x1bc>)
 8006164:	4313      	orrs	r3, r2
 8006166:	608b      	str	r3, [r1, #8]
 8006168:	f7fd fb7a 	bl	8003860 <HAL_GetTick>
 800616c:	60f8      	str	r0, [r7, #12]
 800616e:	e00a      	b.n	8006186 <HAL_RCC_ClockConfig+0x10e>
 8006170:	f7fd fb76 	bl	8003860 <HAL_GetTick>
 8006174:	4602      	mov	r2, r0
 8006176:	68fb      	ldr	r3, [r7, #12]
 8006178:	1ad3      	subs	r3, r2, r3
 800617a:	f241 3288 	movw	r2, #5000	; 0x1388
 800617e:	4293      	cmp	r3, r2
 8006180:	d901      	bls.n	8006186 <HAL_RCC_ClockConfig+0x10e>
 8006182:	2303      	movs	r3, #3
 8006184:	e04f      	b.n	8006226 <HAL_RCC_ClockConfig+0x1ae>
 8006186:	4b2b      	ldr	r3, [pc, #172]	; (8006234 <HAL_RCC_ClockConfig+0x1bc>)
 8006188:	689b      	ldr	r3, [r3, #8]
 800618a:	f003 020c 	and.w	r2, r3, #12
 800618e:	687b      	ldr	r3, [r7, #4]
 8006190:	685b      	ldr	r3, [r3, #4]
 8006192:	009b      	lsls	r3, r3, #2
 8006194:	429a      	cmp	r2, r3
 8006196:	d1eb      	bne.n	8006170 <HAL_RCC_ClockConfig+0xf8>
 8006198:	4b25      	ldr	r3, [pc, #148]	; (8006230 <HAL_RCC_ClockConfig+0x1b8>)
 800619a:	681b      	ldr	r3, [r3, #0]
 800619c:	f003 0307 	and.w	r3, r3, #7
 80061a0:	683a      	ldr	r2, [r7, #0]
 80061a2:	429a      	cmp	r2, r3
 80061a4:	d20c      	bcs.n	80061c0 <HAL_RCC_ClockConfig+0x148>
 80061a6:	4b22      	ldr	r3, [pc, #136]	; (8006230 <HAL_RCC_ClockConfig+0x1b8>)
 80061a8:	683a      	ldr	r2, [r7, #0]
 80061aa:	b2d2      	uxtb	r2, r2
 80061ac:	701a      	strb	r2, [r3, #0]
 80061ae:	4b20      	ldr	r3, [pc, #128]	; (8006230 <HAL_RCC_ClockConfig+0x1b8>)
 80061b0:	681b      	ldr	r3, [r3, #0]
 80061b2:	f003 0307 	and.w	r3, r3, #7
 80061b6:	683a      	ldr	r2, [r7, #0]
 80061b8:	429a      	cmp	r2, r3
 80061ba:	d001      	beq.n	80061c0 <HAL_RCC_ClockConfig+0x148>
 80061bc:	2301      	movs	r3, #1
 80061be:	e032      	b.n	8006226 <HAL_RCC_ClockConfig+0x1ae>
 80061c0:	687b      	ldr	r3, [r7, #4]
 80061c2:	681b      	ldr	r3, [r3, #0]
 80061c4:	f003 0304 	and.w	r3, r3, #4
 80061c8:	2b00      	cmp	r3, #0
 80061ca:	d008      	beq.n	80061de <HAL_RCC_ClockConfig+0x166>
 80061cc:	4b19      	ldr	r3, [pc, #100]	; (8006234 <HAL_RCC_ClockConfig+0x1bc>)
 80061ce:	689b      	ldr	r3, [r3, #8]
 80061d0:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 80061d4:	687b      	ldr	r3, [r7, #4]
 80061d6:	68db      	ldr	r3, [r3, #12]
 80061d8:	4916      	ldr	r1, [pc, #88]	; (8006234 <HAL_RCC_ClockConfig+0x1bc>)
 80061da:	4313      	orrs	r3, r2
 80061dc:	608b      	str	r3, [r1, #8]
 80061de:	687b      	ldr	r3, [r7, #4]
 80061e0:	681b      	ldr	r3, [r3, #0]
 80061e2:	f003 0308 	and.w	r3, r3, #8
 80061e6:	2b00      	cmp	r3, #0
 80061e8:	d009      	beq.n	80061fe <HAL_RCC_ClockConfig+0x186>
 80061ea:	4b12      	ldr	r3, [pc, #72]	; (8006234 <HAL_RCC_ClockConfig+0x1bc>)
 80061ec:	689b      	ldr	r3, [r3, #8]
 80061ee:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 80061f2:	687b      	ldr	r3, [r7, #4]
 80061f4:	691b      	ldr	r3, [r3, #16]
 80061f6:	00db      	lsls	r3, r3, #3
 80061f8:	490e      	ldr	r1, [pc, #56]	; (8006234 <HAL_RCC_ClockConfig+0x1bc>)
 80061fa:	4313      	orrs	r3, r2
 80061fc:	608b      	str	r3, [r1, #8]
 80061fe:	f000 f821 	bl	8006244 <HAL_RCC_GetSysClockFreq>
 8006202:	4602      	mov	r2, r0
 8006204:	4b0b      	ldr	r3, [pc, #44]	; (8006234 <HAL_RCC_ClockConfig+0x1bc>)
 8006206:	689b      	ldr	r3, [r3, #8]
 8006208:	091b      	lsrs	r3, r3, #4
 800620a:	f003 030f 	and.w	r3, r3, #15
 800620e:	490a      	ldr	r1, [pc, #40]	; (8006238 <HAL_RCC_ClockConfig+0x1c0>)
 8006210:	5ccb      	ldrb	r3, [r1, r3]
 8006212:	fa22 f303 	lsr.w	r3, r2, r3
 8006216:	4a09      	ldr	r2, [pc, #36]	; (800623c <HAL_RCC_ClockConfig+0x1c4>)
 8006218:	6013      	str	r3, [r2, #0]
 800621a:	4b09      	ldr	r3, [pc, #36]	; (8006240 <HAL_RCC_ClockConfig+0x1c8>)
 800621c:	681b      	ldr	r3, [r3, #0]
 800621e:	4618      	mov	r0, r3
 8006220:	f7fd fada 	bl	80037d8 <HAL_InitTick>
 8006224:	2300      	movs	r3, #0
 8006226:	4618      	mov	r0, r3
 8006228:	3710      	adds	r7, #16
 800622a:	46bd      	mov	sp, r7
 800622c:	bd80      	pop	{r7, pc}
 800622e:	bf00      	nop
 8006230:	40023c00 	.word	0x40023c00
 8006234:	40023800 	.word	0x40023800
 8006238:	0800934c 	.word	0x0800934c
 800623c:	200000e4 	.word	0x200000e4
 8006240:	200000e8 	.word	0x200000e8

08006244 <HAL_RCC_GetSysClockFreq>:
 8006244:	b5b0      	push	{r4, r5, r7, lr}
 8006246:	b084      	sub	sp, #16
 8006248:	af00      	add	r7, sp, #0
 800624a:	2100      	movs	r1, #0
 800624c:	6079      	str	r1, [r7, #4]
 800624e:	2100      	movs	r1, #0
 8006250:	60f9      	str	r1, [r7, #12]
 8006252:	2100      	movs	r1, #0
 8006254:	6039      	str	r1, [r7, #0]
 8006256:	2100      	movs	r1, #0
 8006258:	60b9      	str	r1, [r7, #8]
 800625a:	4952      	ldr	r1, [pc, #328]	; (80063a4 <HAL_RCC_GetSysClockFreq+0x160>)
 800625c:	6889      	ldr	r1, [r1, #8]
 800625e:	f001 010c 	and.w	r1, r1, #12
 8006262:	2908      	cmp	r1, #8
 8006264:	d00d      	beq.n	8006282 <HAL_RCC_GetSysClockFreq+0x3e>
 8006266:	2908      	cmp	r1, #8
 8006268:	f200 8094 	bhi.w	8006394 <HAL_RCC_GetSysClockFreq+0x150>
 800626c:	2900      	cmp	r1, #0
 800626e:	d002      	beq.n	8006276 <HAL_RCC_GetSysClockFreq+0x32>
 8006270:	2904      	cmp	r1, #4
 8006272:	d003      	beq.n	800627c <HAL_RCC_GetSysClockFreq+0x38>
 8006274:	e08e      	b.n	8006394 <HAL_RCC_GetSysClockFreq+0x150>
 8006276:	4b4c      	ldr	r3, [pc, #304]	; (80063a8 <HAL_RCC_GetSysClockFreq+0x164>)
 8006278:	60bb      	str	r3, [r7, #8]
 800627a:	e08e      	b.n	800639a <HAL_RCC_GetSysClockFreq+0x156>
 800627c:	4b4b      	ldr	r3, [pc, #300]	; (80063ac <HAL_RCC_GetSysClockFreq+0x168>)
 800627e:	60bb      	str	r3, [r7, #8]
 8006280:	e08b      	b.n	800639a <HAL_RCC_GetSysClockFreq+0x156>
 8006282:	4948      	ldr	r1, [pc, #288]	; (80063a4 <HAL_RCC_GetSysClockFreq+0x160>)
 8006284:	6849      	ldr	r1, [r1, #4]
 8006286:	f001 013f 	and.w	r1, r1, #63	; 0x3f
 800628a:	6079      	str	r1, [r7, #4]
 800628c:	4945      	ldr	r1, [pc, #276]	; (80063a4 <HAL_RCC_GetSysClockFreq+0x160>)
 800628e:	6849      	ldr	r1, [r1, #4]
 8006290:	f401 0180 	and.w	r1, r1, #4194304	; 0x400000
 8006294:	2900      	cmp	r1, #0
 8006296:	d024      	beq.n	80062e2 <HAL_RCC_GetSysClockFreq+0x9e>
 8006298:	4942      	ldr	r1, [pc, #264]	; (80063a4 <HAL_RCC_GetSysClockFreq+0x160>)
 800629a:	6849      	ldr	r1, [r1, #4]
 800629c:	0989      	lsrs	r1, r1, #6
 800629e:	4608      	mov	r0, r1
 80062a0:	f04f 0100 	mov.w	r1, #0
 80062a4:	f240 14ff 	movw	r4, #511	; 0x1ff
 80062a8:	f04f 0500 	mov.w	r5, #0
 80062ac:	ea00 0204 	and.w	r2, r0, r4
 80062b0:	ea01 0305 	and.w	r3, r1, r5
 80062b4:	493d      	ldr	r1, [pc, #244]	; (80063ac <HAL_RCC_GetSysClockFreq+0x168>)
 80062b6:	fb01 f003 	mul.w	r0, r1, r3
 80062ba:	2100      	movs	r1, #0
 80062bc:	fb01 f102 	mul.w	r1, r1, r2
 80062c0:	1844      	adds	r4, r0, r1
 80062c2:	493a      	ldr	r1, [pc, #232]	; (80063ac <HAL_RCC_GetSysClockFreq+0x168>)
 80062c4:	fba2 0101 	umull	r0, r1, r2, r1
 80062c8:	1863      	adds	r3, r4, r1
 80062ca:	4619      	mov	r1, r3
 80062cc:	687b      	ldr	r3, [r7, #4]
 80062ce:	461a      	mov	r2, r3
 80062d0:	f04f 0300 	mov.w	r3, #0
 80062d4:	f7f9 ff78 	bl	80001c8 <__aeabi_uldivmod>
 80062d8:	4602      	mov	r2, r0
 80062da:	460b      	mov	r3, r1
 80062dc:	4613      	mov	r3, r2
 80062de:	60fb      	str	r3, [r7, #12]
 80062e0:	e04a      	b.n	8006378 <HAL_RCC_GetSysClockFreq+0x134>
 80062e2:	4b30      	ldr	r3, [pc, #192]	; (80063a4 <HAL_RCC_GetSysClockFreq+0x160>)
 80062e4:	685b      	ldr	r3, [r3, #4]
 80062e6:	099b      	lsrs	r3, r3, #6
 80062e8:	461a      	mov	r2, r3
 80062ea:	f04f 0300 	mov.w	r3, #0
 80062ee:	f240 10ff 	movw	r0, #511	; 0x1ff
 80062f2:	f04f 0100 	mov.w	r1, #0
 80062f6:	ea02 0400 	and.w	r4, r2, r0
 80062fa:	ea03 0501 	and.w	r5, r3, r1
 80062fe:	4620      	mov	r0, r4
 8006300:	4629      	mov	r1, r5
 8006302:	f04f 0200 	mov.w	r2, #0
 8006306:	f04f 0300 	mov.w	r3, #0
 800630a:	014b      	lsls	r3, r1, #5
 800630c:	ea43 63d0 	orr.w	r3, r3, r0, lsr #27
 8006310:	0142      	lsls	r2, r0, #5
 8006312:	4610      	mov	r0, r2
 8006314:	4619      	mov	r1, r3
 8006316:	1b00      	subs	r0, r0, r4
 8006318:	eb61 0105 	sbc.w	r1, r1, r5
 800631c:	f04f 0200 	mov.w	r2, #0
 8006320:	f04f 0300 	mov.w	r3, #0
 8006324:	018b      	lsls	r3, r1, #6
 8006326:	ea43 6390 	orr.w	r3, r3, r0, lsr #26
 800632a:	0182      	lsls	r2, r0, #6
 800632c:	1a12      	subs	r2, r2, r0
 800632e:	eb63 0301 	sbc.w	r3, r3, r1
 8006332:	f04f 0000 	mov.w	r0, #0
 8006336:	f04f 0100 	mov.w	r1, #0
 800633a:	00d9      	lsls	r1, r3, #3
 800633c:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 8006340:	00d0      	lsls	r0, r2, #3
 8006342:	4602      	mov	r2, r0
 8006344:	460b      	mov	r3, r1
 8006346:	1912      	adds	r2, r2, r4
 8006348:	eb45 0303 	adc.w	r3, r5, r3
 800634c:	f04f 0000 	mov.w	r0, #0
 8006350:	f04f 0100 	mov.w	r1, #0
 8006354:	0299      	lsls	r1, r3, #10
 8006356:	ea41 5192 	orr.w	r1, r1, r2, lsr #22
 800635a:	0290      	lsls	r0, r2, #10
 800635c:	4602      	mov	r2, r0
 800635e:	460b      	mov	r3, r1
 8006360:	4610      	mov	r0, r2
 8006362:	4619      	mov	r1, r3
 8006364:	687b      	ldr	r3, [r7, #4]
 8006366:	461a      	mov	r2, r3
 8006368:	f04f 0300 	mov.w	r3, #0
 800636c:	f7f9 ff2c 	bl	80001c8 <__aeabi_uldivmod>
 8006370:	4602      	mov	r2, r0
 8006372:	460b      	mov	r3, r1
 8006374:	4613      	mov	r3, r2
 8006376:	60fb      	str	r3, [r7, #12]
 8006378:	4b0a      	ldr	r3, [pc, #40]	; (80063a4 <HAL_RCC_GetSysClockFreq+0x160>)
 800637a:	685b      	ldr	r3, [r3, #4]
 800637c:	0c1b      	lsrs	r3, r3, #16
 800637e:	f003 0303 	and.w	r3, r3, #3
 8006382:	3301      	adds	r3, #1
 8006384:	005b      	lsls	r3, r3, #1
 8006386:	603b      	str	r3, [r7, #0]
 8006388:	68fa      	ldr	r2, [r7, #12]
 800638a:	683b      	ldr	r3, [r7, #0]
 800638c:	fbb2 f3f3 	udiv	r3, r2, r3
 8006390:	60bb      	str	r3, [r7, #8]
 8006392:	e002      	b.n	800639a <HAL_RCC_GetSysClockFreq+0x156>
 8006394:	4b04      	ldr	r3, [pc, #16]	; (80063a8 <HAL_RCC_GetSysClockFreq+0x164>)
 8006396:	60bb      	str	r3, [r7, #8]
 8006398:	bf00      	nop
 800639a:	68bb      	ldr	r3, [r7, #8]
 800639c:	4618      	mov	r0, r3
 800639e:	3710      	adds	r7, #16
 80063a0:	46bd      	mov	sp, r7
 80063a2:	bdb0      	pop	{r4, r5, r7, pc}
 80063a4:	40023800 	.word	0x40023800
 80063a8:	00f42400 	.word	0x00f42400
 80063ac:	017d7840 	.word	0x017d7840

080063b0 <HAL_RCC_GetHCLKFreq>:
 80063b0:	b480      	push	{r7}
 80063b2:	af00      	add	r7, sp, #0
 80063b4:	4b03      	ldr	r3, [pc, #12]	; (80063c4 <HAL_RCC_GetHCLKFreq+0x14>)
 80063b6:	681b      	ldr	r3, [r3, #0]
 80063b8:	4618      	mov	r0, r3
 80063ba:	46bd      	mov	sp, r7
 80063bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80063c0:	4770      	bx	lr
 80063c2:	bf00      	nop
 80063c4:	200000e4 	.word	0x200000e4

080063c8 <HAL_RCC_GetPCLK1Freq>:
 80063c8:	b580      	push	{r7, lr}
 80063ca:	af00      	add	r7, sp, #0
 80063cc:	f7ff fff0 	bl	80063b0 <HAL_RCC_GetHCLKFreq>
 80063d0:	4602      	mov	r2, r0
 80063d2:	4b05      	ldr	r3, [pc, #20]	; (80063e8 <HAL_RCC_GetPCLK1Freq+0x20>)
 80063d4:	689b      	ldr	r3, [r3, #8]
 80063d6:	0a9b      	lsrs	r3, r3, #10
 80063d8:	f003 0307 	and.w	r3, r3, #7
 80063dc:	4903      	ldr	r1, [pc, #12]	; (80063ec <HAL_RCC_GetPCLK1Freq+0x24>)
 80063de:	5ccb      	ldrb	r3, [r1, r3]
 80063e0:	fa22 f303 	lsr.w	r3, r2, r3
 80063e4:	4618      	mov	r0, r3
 80063e6:	bd80      	pop	{r7, pc}
 80063e8:	40023800 	.word	0x40023800
 80063ec:	0800935c 	.word	0x0800935c

080063f0 <HAL_RCC_GetPCLK2Freq>:
 80063f0:	b580      	push	{r7, lr}
 80063f2:	af00      	add	r7, sp, #0
 80063f4:	f7ff ffdc 	bl	80063b0 <HAL_RCC_GetHCLKFreq>
 80063f8:	4602      	mov	r2, r0
 80063fa:	4b05      	ldr	r3, [pc, #20]	; (8006410 <HAL_RCC_GetPCLK2Freq+0x20>)
 80063fc:	689b      	ldr	r3, [r3, #8]
 80063fe:	0b5b      	lsrs	r3, r3, #13
 8006400:	f003 0307 	and.w	r3, r3, #7
 8006404:	4903      	ldr	r1, [pc, #12]	; (8006414 <HAL_RCC_GetPCLK2Freq+0x24>)
 8006406:	5ccb      	ldrb	r3, [r1, r3]
 8006408:	fa22 f303 	lsr.w	r3, r2, r3
 800640c:	4618      	mov	r0, r3
 800640e:	bd80      	pop	{r7, pc}
 8006410:	40023800 	.word	0x40023800
 8006414:	0800935c 	.word	0x0800935c

08006418 <HAL_TIM_Base_Init>:
 8006418:	b580      	push	{r7, lr}
 800641a:	b082      	sub	sp, #8
 800641c:	af00      	add	r7, sp, #0
 800641e:	6078      	str	r0, [r7, #4]
 8006420:	687b      	ldr	r3, [r7, #4]
 8006422:	2b00      	cmp	r3, #0
 8006424:	d101      	bne.n	800642a <HAL_TIM_Base_Init+0x12>
 8006426:	2301      	movs	r3, #1
 8006428:	e041      	b.n	80064ae <HAL_TIM_Base_Init+0x96>
 800642a:	687b      	ldr	r3, [r7, #4]
 800642c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006430:	b2db      	uxtb	r3, r3
 8006432:	2b00      	cmp	r3, #0
 8006434:	d106      	bne.n	8006444 <HAL_TIM_Base_Init+0x2c>
 8006436:	687b      	ldr	r3, [r7, #4]
 8006438:	2200      	movs	r2, #0
 800643a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800643e:	6878      	ldr	r0, [r7, #4]
 8006440:	f7fc fe38 	bl	80030b4 <HAL_TIM_Base_MspInit>
 8006444:	687b      	ldr	r3, [r7, #4]
 8006446:	2202      	movs	r2, #2
 8006448:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800644c:	687b      	ldr	r3, [r7, #4]
 800644e:	681a      	ldr	r2, [r3, #0]
 8006450:	687b      	ldr	r3, [r7, #4]
 8006452:	3304      	adds	r3, #4
 8006454:	4619      	mov	r1, r3
 8006456:	4610      	mov	r0, r2
 8006458:	f000 fb48 	bl	8006aec <TIM_Base_SetConfig>
 800645c:	687b      	ldr	r3, [r7, #4]
 800645e:	2201      	movs	r2, #1
 8006460:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8006464:	687b      	ldr	r3, [r7, #4]
 8006466:	2201      	movs	r2, #1
 8006468:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800646c:	687b      	ldr	r3, [r7, #4]
 800646e:	2201      	movs	r2, #1
 8006470:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8006474:	687b      	ldr	r3, [r7, #4]
 8006476:	2201      	movs	r2, #1
 8006478:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800647c:	687b      	ldr	r3, [r7, #4]
 800647e:	2201      	movs	r2, #1
 8006480:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8006484:	687b      	ldr	r3, [r7, #4]
 8006486:	2201      	movs	r2, #1
 8006488:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800648c:	687b      	ldr	r3, [r7, #4]
 800648e:	2201      	movs	r2, #1
 8006490:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8006494:	687b      	ldr	r3, [r7, #4]
 8006496:	2201      	movs	r2, #1
 8006498:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800649c:	687b      	ldr	r3, [r7, #4]
 800649e:	2201      	movs	r2, #1
 80064a0:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80064a4:	687b      	ldr	r3, [r7, #4]
 80064a6:	2201      	movs	r2, #1
 80064a8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80064ac:	2300      	movs	r3, #0
 80064ae:	4618      	mov	r0, r3
 80064b0:	3708      	adds	r7, #8
 80064b2:	46bd      	mov	sp, r7
 80064b4:	bd80      	pop	{r7, pc}

080064b6 <HAL_TIM_PWM_Init>:
 80064b6:	b580      	push	{r7, lr}
 80064b8:	b082      	sub	sp, #8
 80064ba:	af00      	add	r7, sp, #0
 80064bc:	6078      	str	r0, [r7, #4]
 80064be:	687b      	ldr	r3, [r7, #4]
 80064c0:	2b00      	cmp	r3, #0
 80064c2:	d101      	bne.n	80064c8 <HAL_TIM_PWM_Init+0x12>
 80064c4:	2301      	movs	r3, #1
 80064c6:	e041      	b.n	800654c <HAL_TIM_PWM_Init+0x96>
 80064c8:	687b      	ldr	r3, [r7, #4]
 80064ca:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80064ce:	b2db      	uxtb	r3, r3
 80064d0:	2b00      	cmp	r3, #0
 80064d2:	d106      	bne.n	80064e2 <HAL_TIM_PWM_Init+0x2c>
 80064d4:	687b      	ldr	r3, [r7, #4]
 80064d6:	2200      	movs	r2, #0
 80064d8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80064dc:	6878      	ldr	r0, [r7, #4]
 80064de:	f000 f839 	bl	8006554 <HAL_TIM_PWM_MspInit>
 80064e2:	687b      	ldr	r3, [r7, #4]
 80064e4:	2202      	movs	r2, #2
 80064e6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80064ea:	687b      	ldr	r3, [r7, #4]
 80064ec:	681a      	ldr	r2, [r3, #0]
 80064ee:	687b      	ldr	r3, [r7, #4]
 80064f0:	3304      	adds	r3, #4
 80064f2:	4619      	mov	r1, r3
 80064f4:	4610      	mov	r0, r2
 80064f6:	f000 faf9 	bl	8006aec <TIM_Base_SetConfig>
 80064fa:	687b      	ldr	r3, [r7, #4]
 80064fc:	2201      	movs	r2, #1
 80064fe:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8006502:	687b      	ldr	r3, [r7, #4]
 8006504:	2201      	movs	r2, #1
 8006506:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800650a:	687b      	ldr	r3, [r7, #4]
 800650c:	2201      	movs	r2, #1
 800650e:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8006512:	687b      	ldr	r3, [r7, #4]
 8006514:	2201      	movs	r2, #1
 8006516:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800651a:	687b      	ldr	r3, [r7, #4]
 800651c:	2201      	movs	r2, #1
 800651e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8006522:	687b      	ldr	r3, [r7, #4]
 8006524:	2201      	movs	r2, #1
 8006526:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800652a:	687b      	ldr	r3, [r7, #4]
 800652c:	2201      	movs	r2, #1
 800652e:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8006532:	687b      	ldr	r3, [r7, #4]
 8006534:	2201      	movs	r2, #1
 8006536:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800653a:	687b      	ldr	r3, [r7, #4]
 800653c:	2201      	movs	r2, #1
 800653e:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8006542:	687b      	ldr	r3, [r7, #4]
 8006544:	2201      	movs	r2, #1
 8006546:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800654a:	2300      	movs	r3, #0
 800654c:	4618      	mov	r0, r3
 800654e:	3708      	adds	r7, #8
 8006550:	46bd      	mov	sp, r7
 8006552:	bd80      	pop	{r7, pc}

08006554 <HAL_TIM_PWM_MspInit>:
 8006554:	b480      	push	{r7}
 8006556:	b083      	sub	sp, #12
 8006558:	af00      	add	r7, sp, #0
 800655a:	6078      	str	r0, [r7, #4]
 800655c:	bf00      	nop
 800655e:	370c      	adds	r7, #12
 8006560:	46bd      	mov	sp, r7
 8006562:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006566:	4770      	bx	lr

08006568 <HAL_TIM_PWM_Start>:
 8006568:	b580      	push	{r7, lr}
 800656a:	b084      	sub	sp, #16
 800656c:	af00      	add	r7, sp, #0
 800656e:	6078      	str	r0, [r7, #4]
 8006570:	6039      	str	r1, [r7, #0]
 8006572:	683b      	ldr	r3, [r7, #0]
 8006574:	2b00      	cmp	r3, #0
 8006576:	d109      	bne.n	800658c <HAL_TIM_PWM_Start+0x24>
 8006578:	687b      	ldr	r3, [r7, #4]
 800657a:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800657e:	b2db      	uxtb	r3, r3
 8006580:	2b01      	cmp	r3, #1
 8006582:	bf14      	ite	ne
 8006584:	2301      	movne	r3, #1
 8006586:	2300      	moveq	r3, #0
 8006588:	b2db      	uxtb	r3, r3
 800658a:	e022      	b.n	80065d2 <HAL_TIM_PWM_Start+0x6a>
 800658c:	683b      	ldr	r3, [r7, #0]
 800658e:	2b04      	cmp	r3, #4
 8006590:	d109      	bne.n	80065a6 <HAL_TIM_PWM_Start+0x3e>
 8006592:	687b      	ldr	r3, [r7, #4]
 8006594:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8006598:	b2db      	uxtb	r3, r3
 800659a:	2b01      	cmp	r3, #1
 800659c:	bf14      	ite	ne
 800659e:	2301      	movne	r3, #1
 80065a0:	2300      	moveq	r3, #0
 80065a2:	b2db      	uxtb	r3, r3
 80065a4:	e015      	b.n	80065d2 <HAL_TIM_PWM_Start+0x6a>
 80065a6:	683b      	ldr	r3, [r7, #0]
 80065a8:	2b08      	cmp	r3, #8
 80065aa:	d109      	bne.n	80065c0 <HAL_TIM_PWM_Start+0x58>
 80065ac:	687b      	ldr	r3, [r7, #4]
 80065ae:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 80065b2:	b2db      	uxtb	r3, r3
 80065b4:	2b01      	cmp	r3, #1
 80065b6:	bf14      	ite	ne
 80065b8:	2301      	movne	r3, #1
 80065ba:	2300      	moveq	r3, #0
 80065bc:	b2db      	uxtb	r3, r3
 80065be:	e008      	b.n	80065d2 <HAL_TIM_PWM_Start+0x6a>
 80065c0:	687b      	ldr	r3, [r7, #4]
 80065c2:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80065c6:	b2db      	uxtb	r3, r3
 80065c8:	2b01      	cmp	r3, #1
 80065ca:	bf14      	ite	ne
 80065cc:	2301      	movne	r3, #1
 80065ce:	2300      	moveq	r3, #0
 80065d0:	b2db      	uxtb	r3, r3
 80065d2:	2b00      	cmp	r3, #0
 80065d4:	d001      	beq.n	80065da <HAL_TIM_PWM_Start+0x72>
 80065d6:	2301      	movs	r3, #1
 80065d8:	e07c      	b.n	80066d4 <HAL_TIM_PWM_Start+0x16c>
 80065da:	683b      	ldr	r3, [r7, #0]
 80065dc:	2b00      	cmp	r3, #0
 80065de:	d104      	bne.n	80065ea <HAL_TIM_PWM_Start+0x82>
 80065e0:	687b      	ldr	r3, [r7, #4]
 80065e2:	2202      	movs	r2, #2
 80065e4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80065e8:	e013      	b.n	8006612 <HAL_TIM_PWM_Start+0xaa>
 80065ea:	683b      	ldr	r3, [r7, #0]
 80065ec:	2b04      	cmp	r3, #4
 80065ee:	d104      	bne.n	80065fa <HAL_TIM_PWM_Start+0x92>
 80065f0:	687b      	ldr	r3, [r7, #4]
 80065f2:	2202      	movs	r2, #2
 80065f4:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80065f8:	e00b      	b.n	8006612 <HAL_TIM_PWM_Start+0xaa>
 80065fa:	683b      	ldr	r3, [r7, #0]
 80065fc:	2b08      	cmp	r3, #8
 80065fe:	d104      	bne.n	800660a <HAL_TIM_PWM_Start+0xa2>
 8006600:	687b      	ldr	r3, [r7, #4]
 8006602:	2202      	movs	r2, #2
 8006604:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8006608:	e003      	b.n	8006612 <HAL_TIM_PWM_Start+0xaa>
 800660a:	687b      	ldr	r3, [r7, #4]
 800660c:	2202      	movs	r2, #2
 800660e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8006612:	687b      	ldr	r3, [r7, #4]
 8006614:	681b      	ldr	r3, [r3, #0]
 8006616:	2201      	movs	r2, #1
 8006618:	6839      	ldr	r1, [r7, #0]
 800661a:	4618      	mov	r0, r3
 800661c:	f000 fd50 	bl	80070c0 <TIM_CCxChannelCmd>
 8006620:	687b      	ldr	r3, [r7, #4]
 8006622:	681b      	ldr	r3, [r3, #0]
 8006624:	4a2d      	ldr	r2, [pc, #180]	; (80066dc <HAL_TIM_PWM_Start+0x174>)
 8006626:	4293      	cmp	r3, r2
 8006628:	d004      	beq.n	8006634 <HAL_TIM_PWM_Start+0xcc>
 800662a:	687b      	ldr	r3, [r7, #4]
 800662c:	681b      	ldr	r3, [r3, #0]
 800662e:	4a2c      	ldr	r2, [pc, #176]	; (80066e0 <HAL_TIM_PWM_Start+0x178>)
 8006630:	4293      	cmp	r3, r2
 8006632:	d101      	bne.n	8006638 <HAL_TIM_PWM_Start+0xd0>
 8006634:	2301      	movs	r3, #1
 8006636:	e000      	b.n	800663a <HAL_TIM_PWM_Start+0xd2>
 8006638:	2300      	movs	r3, #0
 800663a:	2b00      	cmp	r3, #0
 800663c:	d007      	beq.n	800664e <HAL_TIM_PWM_Start+0xe6>
 800663e:	687b      	ldr	r3, [r7, #4]
 8006640:	681b      	ldr	r3, [r3, #0]
 8006642:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8006644:	687b      	ldr	r3, [r7, #4]
 8006646:	681b      	ldr	r3, [r3, #0]
 8006648:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800664c:	645a      	str	r2, [r3, #68]	; 0x44
 800664e:	687b      	ldr	r3, [r7, #4]
 8006650:	681b      	ldr	r3, [r3, #0]
 8006652:	4a22      	ldr	r2, [pc, #136]	; (80066dc <HAL_TIM_PWM_Start+0x174>)
 8006654:	4293      	cmp	r3, r2
 8006656:	d022      	beq.n	800669e <HAL_TIM_PWM_Start+0x136>
 8006658:	687b      	ldr	r3, [r7, #4]
 800665a:	681b      	ldr	r3, [r3, #0]
 800665c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006660:	d01d      	beq.n	800669e <HAL_TIM_PWM_Start+0x136>
 8006662:	687b      	ldr	r3, [r7, #4]
 8006664:	681b      	ldr	r3, [r3, #0]
 8006666:	4a1f      	ldr	r2, [pc, #124]	; (80066e4 <HAL_TIM_PWM_Start+0x17c>)
 8006668:	4293      	cmp	r3, r2
 800666a:	d018      	beq.n	800669e <HAL_TIM_PWM_Start+0x136>
 800666c:	687b      	ldr	r3, [r7, #4]
 800666e:	681b      	ldr	r3, [r3, #0]
 8006670:	4a1d      	ldr	r2, [pc, #116]	; (80066e8 <HAL_TIM_PWM_Start+0x180>)
 8006672:	4293      	cmp	r3, r2
 8006674:	d013      	beq.n	800669e <HAL_TIM_PWM_Start+0x136>
 8006676:	687b      	ldr	r3, [r7, #4]
 8006678:	681b      	ldr	r3, [r3, #0]
 800667a:	4a1c      	ldr	r2, [pc, #112]	; (80066ec <HAL_TIM_PWM_Start+0x184>)
 800667c:	4293      	cmp	r3, r2
 800667e:	d00e      	beq.n	800669e <HAL_TIM_PWM_Start+0x136>
 8006680:	687b      	ldr	r3, [r7, #4]
 8006682:	681b      	ldr	r3, [r3, #0]
 8006684:	4a16      	ldr	r2, [pc, #88]	; (80066e0 <HAL_TIM_PWM_Start+0x178>)
 8006686:	4293      	cmp	r3, r2
 8006688:	d009      	beq.n	800669e <HAL_TIM_PWM_Start+0x136>
 800668a:	687b      	ldr	r3, [r7, #4]
 800668c:	681b      	ldr	r3, [r3, #0]
 800668e:	4a18      	ldr	r2, [pc, #96]	; (80066f0 <HAL_TIM_PWM_Start+0x188>)
 8006690:	4293      	cmp	r3, r2
 8006692:	d004      	beq.n	800669e <HAL_TIM_PWM_Start+0x136>
 8006694:	687b      	ldr	r3, [r7, #4]
 8006696:	681b      	ldr	r3, [r3, #0]
 8006698:	4a16      	ldr	r2, [pc, #88]	; (80066f4 <HAL_TIM_PWM_Start+0x18c>)
 800669a:	4293      	cmp	r3, r2
 800669c:	d111      	bne.n	80066c2 <HAL_TIM_PWM_Start+0x15a>
 800669e:	687b      	ldr	r3, [r7, #4]
 80066a0:	681b      	ldr	r3, [r3, #0]
 80066a2:	689b      	ldr	r3, [r3, #8]
 80066a4:	f003 0307 	and.w	r3, r3, #7
 80066a8:	60fb      	str	r3, [r7, #12]
 80066aa:	68fb      	ldr	r3, [r7, #12]
 80066ac:	2b06      	cmp	r3, #6
 80066ae:	d010      	beq.n	80066d2 <HAL_TIM_PWM_Start+0x16a>
 80066b0:	687b      	ldr	r3, [r7, #4]
 80066b2:	681b      	ldr	r3, [r3, #0]
 80066b4:	681a      	ldr	r2, [r3, #0]
 80066b6:	687b      	ldr	r3, [r7, #4]
 80066b8:	681b      	ldr	r3, [r3, #0]
 80066ba:	f042 0201 	orr.w	r2, r2, #1
 80066be:	601a      	str	r2, [r3, #0]
 80066c0:	e007      	b.n	80066d2 <HAL_TIM_PWM_Start+0x16a>
 80066c2:	687b      	ldr	r3, [r7, #4]
 80066c4:	681b      	ldr	r3, [r3, #0]
 80066c6:	681a      	ldr	r2, [r3, #0]
 80066c8:	687b      	ldr	r3, [r7, #4]
 80066ca:	681b      	ldr	r3, [r3, #0]
 80066cc:	f042 0201 	orr.w	r2, r2, #1
 80066d0:	601a      	str	r2, [r3, #0]
 80066d2:	2300      	movs	r3, #0
 80066d4:	4618      	mov	r0, r3
 80066d6:	3710      	adds	r7, #16
 80066d8:	46bd      	mov	sp, r7
 80066da:	bd80      	pop	{r7, pc}
 80066dc:	40010000 	.word	0x40010000
 80066e0:	40010400 	.word	0x40010400
 80066e4:	40000400 	.word	0x40000400
 80066e8:	40000800 	.word	0x40000800
 80066ec:	40000c00 	.word	0x40000c00
 80066f0:	40014000 	.word	0x40014000
 80066f4:	40001800 	.word	0x40001800

080066f8 <HAL_TIM_PWM_Stop>:
 80066f8:	b580      	push	{r7, lr}
 80066fa:	b082      	sub	sp, #8
 80066fc:	af00      	add	r7, sp, #0
 80066fe:	6078      	str	r0, [r7, #4]
 8006700:	6039      	str	r1, [r7, #0]
 8006702:	687b      	ldr	r3, [r7, #4]
 8006704:	681b      	ldr	r3, [r3, #0]
 8006706:	2200      	movs	r2, #0
 8006708:	6839      	ldr	r1, [r7, #0]
 800670a:	4618      	mov	r0, r3
 800670c:	f000 fcd8 	bl	80070c0 <TIM_CCxChannelCmd>
 8006710:	687b      	ldr	r3, [r7, #4]
 8006712:	681b      	ldr	r3, [r3, #0]
 8006714:	4a2e      	ldr	r2, [pc, #184]	; (80067d0 <HAL_TIM_PWM_Stop+0xd8>)
 8006716:	4293      	cmp	r3, r2
 8006718:	d004      	beq.n	8006724 <HAL_TIM_PWM_Stop+0x2c>
 800671a:	687b      	ldr	r3, [r7, #4]
 800671c:	681b      	ldr	r3, [r3, #0]
 800671e:	4a2d      	ldr	r2, [pc, #180]	; (80067d4 <HAL_TIM_PWM_Stop+0xdc>)
 8006720:	4293      	cmp	r3, r2
 8006722:	d101      	bne.n	8006728 <HAL_TIM_PWM_Stop+0x30>
 8006724:	2301      	movs	r3, #1
 8006726:	e000      	b.n	800672a <HAL_TIM_PWM_Stop+0x32>
 8006728:	2300      	movs	r3, #0
 800672a:	2b00      	cmp	r3, #0
 800672c:	d017      	beq.n	800675e <HAL_TIM_PWM_Stop+0x66>
 800672e:	687b      	ldr	r3, [r7, #4]
 8006730:	681b      	ldr	r3, [r3, #0]
 8006732:	6a1a      	ldr	r2, [r3, #32]
 8006734:	f241 1311 	movw	r3, #4369	; 0x1111
 8006738:	4013      	ands	r3, r2
 800673a:	2b00      	cmp	r3, #0
 800673c:	d10f      	bne.n	800675e <HAL_TIM_PWM_Stop+0x66>
 800673e:	687b      	ldr	r3, [r7, #4]
 8006740:	681b      	ldr	r3, [r3, #0]
 8006742:	6a1a      	ldr	r2, [r3, #32]
 8006744:	f240 4344 	movw	r3, #1092	; 0x444
 8006748:	4013      	ands	r3, r2
 800674a:	2b00      	cmp	r3, #0
 800674c:	d107      	bne.n	800675e <HAL_TIM_PWM_Stop+0x66>
 800674e:	687b      	ldr	r3, [r7, #4]
 8006750:	681b      	ldr	r3, [r3, #0]
 8006752:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8006754:	687b      	ldr	r3, [r7, #4]
 8006756:	681b      	ldr	r3, [r3, #0]
 8006758:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800675c:	645a      	str	r2, [r3, #68]	; 0x44
 800675e:	687b      	ldr	r3, [r7, #4]
 8006760:	681b      	ldr	r3, [r3, #0]
 8006762:	6a1a      	ldr	r2, [r3, #32]
 8006764:	f241 1311 	movw	r3, #4369	; 0x1111
 8006768:	4013      	ands	r3, r2
 800676a:	2b00      	cmp	r3, #0
 800676c:	d10f      	bne.n	800678e <HAL_TIM_PWM_Stop+0x96>
 800676e:	687b      	ldr	r3, [r7, #4]
 8006770:	681b      	ldr	r3, [r3, #0]
 8006772:	6a1a      	ldr	r2, [r3, #32]
 8006774:	f240 4344 	movw	r3, #1092	; 0x444
 8006778:	4013      	ands	r3, r2
 800677a:	2b00      	cmp	r3, #0
 800677c:	d107      	bne.n	800678e <HAL_TIM_PWM_Stop+0x96>
 800677e:	687b      	ldr	r3, [r7, #4]
 8006780:	681b      	ldr	r3, [r3, #0]
 8006782:	681a      	ldr	r2, [r3, #0]
 8006784:	687b      	ldr	r3, [r7, #4]
 8006786:	681b      	ldr	r3, [r3, #0]
 8006788:	f022 0201 	bic.w	r2, r2, #1
 800678c:	601a      	str	r2, [r3, #0]
 800678e:	683b      	ldr	r3, [r7, #0]
 8006790:	2b00      	cmp	r3, #0
 8006792:	d104      	bne.n	800679e <HAL_TIM_PWM_Stop+0xa6>
 8006794:	687b      	ldr	r3, [r7, #4]
 8006796:	2201      	movs	r2, #1
 8006798:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800679c:	e013      	b.n	80067c6 <HAL_TIM_PWM_Stop+0xce>
 800679e:	683b      	ldr	r3, [r7, #0]
 80067a0:	2b04      	cmp	r3, #4
 80067a2:	d104      	bne.n	80067ae <HAL_TIM_PWM_Stop+0xb6>
 80067a4:	687b      	ldr	r3, [r7, #4]
 80067a6:	2201      	movs	r2, #1
 80067a8:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80067ac:	e00b      	b.n	80067c6 <HAL_TIM_PWM_Stop+0xce>
 80067ae:	683b      	ldr	r3, [r7, #0]
 80067b0:	2b08      	cmp	r3, #8
 80067b2:	d104      	bne.n	80067be <HAL_TIM_PWM_Stop+0xc6>
 80067b4:	687b      	ldr	r3, [r7, #4]
 80067b6:	2201      	movs	r2, #1
 80067b8:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80067bc:	e003      	b.n	80067c6 <HAL_TIM_PWM_Stop+0xce>
 80067be:	687b      	ldr	r3, [r7, #4]
 80067c0:	2201      	movs	r2, #1
 80067c2:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80067c6:	2300      	movs	r3, #0
 80067c8:	4618      	mov	r0, r3
 80067ca:	3708      	adds	r7, #8
 80067cc:	46bd      	mov	sp, r7
 80067ce:	bd80      	pop	{r7, pc}
 80067d0:	40010000 	.word	0x40010000
 80067d4:	40010400 	.word	0x40010400

080067d8 <HAL_TIM_PWM_ConfigChannel>:
 80067d8:	b580      	push	{r7, lr}
 80067da:	b086      	sub	sp, #24
 80067dc:	af00      	add	r7, sp, #0
 80067de:	60f8      	str	r0, [r7, #12]
 80067e0:	60b9      	str	r1, [r7, #8]
 80067e2:	607a      	str	r2, [r7, #4]
 80067e4:	2300      	movs	r3, #0
 80067e6:	75fb      	strb	r3, [r7, #23]
 80067e8:	68fb      	ldr	r3, [r7, #12]
 80067ea:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80067ee:	2b01      	cmp	r3, #1
 80067f0:	d101      	bne.n	80067f6 <HAL_TIM_PWM_ConfigChannel+0x1e>
 80067f2:	2302      	movs	r3, #2
 80067f4:	e0ae      	b.n	8006954 <HAL_TIM_PWM_ConfigChannel+0x17c>
 80067f6:	68fb      	ldr	r3, [r7, #12]
 80067f8:	2201      	movs	r2, #1
 80067fa:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80067fe:	687b      	ldr	r3, [r7, #4]
 8006800:	2b0c      	cmp	r3, #12
 8006802:	f200 809f 	bhi.w	8006944 <HAL_TIM_PWM_ConfigChannel+0x16c>
 8006806:	a201      	add	r2, pc, #4	; (adr r2, 800680c <HAL_TIM_PWM_ConfigChannel+0x34>)
 8006808:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800680c:	08006841 	.word	0x08006841
 8006810:	08006945 	.word	0x08006945
 8006814:	08006945 	.word	0x08006945
 8006818:	08006945 	.word	0x08006945
 800681c:	08006881 	.word	0x08006881
 8006820:	08006945 	.word	0x08006945
 8006824:	08006945 	.word	0x08006945
 8006828:	08006945 	.word	0x08006945
 800682c:	080068c3 	.word	0x080068c3
 8006830:	08006945 	.word	0x08006945
 8006834:	08006945 	.word	0x08006945
 8006838:	08006945 	.word	0x08006945
 800683c:	08006903 	.word	0x08006903
 8006840:	68fb      	ldr	r3, [r7, #12]
 8006842:	681b      	ldr	r3, [r3, #0]
 8006844:	68b9      	ldr	r1, [r7, #8]
 8006846:	4618      	mov	r0, r3
 8006848:	f000 f9f0 	bl	8006c2c <TIM_OC1_SetConfig>
 800684c:	68fb      	ldr	r3, [r7, #12]
 800684e:	681b      	ldr	r3, [r3, #0]
 8006850:	699a      	ldr	r2, [r3, #24]
 8006852:	68fb      	ldr	r3, [r7, #12]
 8006854:	681b      	ldr	r3, [r3, #0]
 8006856:	f042 0208 	orr.w	r2, r2, #8
 800685a:	619a      	str	r2, [r3, #24]
 800685c:	68fb      	ldr	r3, [r7, #12]
 800685e:	681b      	ldr	r3, [r3, #0]
 8006860:	699a      	ldr	r2, [r3, #24]
 8006862:	68fb      	ldr	r3, [r7, #12]
 8006864:	681b      	ldr	r3, [r3, #0]
 8006866:	f022 0204 	bic.w	r2, r2, #4
 800686a:	619a      	str	r2, [r3, #24]
 800686c:	68fb      	ldr	r3, [r7, #12]
 800686e:	681b      	ldr	r3, [r3, #0]
 8006870:	6999      	ldr	r1, [r3, #24]
 8006872:	68bb      	ldr	r3, [r7, #8]
 8006874:	691a      	ldr	r2, [r3, #16]
 8006876:	68fb      	ldr	r3, [r7, #12]
 8006878:	681b      	ldr	r3, [r3, #0]
 800687a:	430a      	orrs	r2, r1
 800687c:	619a      	str	r2, [r3, #24]
 800687e:	e064      	b.n	800694a <HAL_TIM_PWM_ConfigChannel+0x172>
 8006880:	68fb      	ldr	r3, [r7, #12]
 8006882:	681b      	ldr	r3, [r3, #0]
 8006884:	68b9      	ldr	r1, [r7, #8]
 8006886:	4618      	mov	r0, r3
 8006888:	f000 fa40 	bl	8006d0c <TIM_OC2_SetConfig>
 800688c:	68fb      	ldr	r3, [r7, #12]
 800688e:	681b      	ldr	r3, [r3, #0]
 8006890:	699a      	ldr	r2, [r3, #24]
 8006892:	68fb      	ldr	r3, [r7, #12]
 8006894:	681b      	ldr	r3, [r3, #0]
 8006896:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800689a:	619a      	str	r2, [r3, #24]
 800689c:	68fb      	ldr	r3, [r7, #12]
 800689e:	681b      	ldr	r3, [r3, #0]
 80068a0:	699a      	ldr	r2, [r3, #24]
 80068a2:	68fb      	ldr	r3, [r7, #12]
 80068a4:	681b      	ldr	r3, [r3, #0]
 80068a6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80068aa:	619a      	str	r2, [r3, #24]
 80068ac:	68fb      	ldr	r3, [r7, #12]
 80068ae:	681b      	ldr	r3, [r3, #0]
 80068b0:	6999      	ldr	r1, [r3, #24]
 80068b2:	68bb      	ldr	r3, [r7, #8]
 80068b4:	691b      	ldr	r3, [r3, #16]
 80068b6:	021a      	lsls	r2, r3, #8
 80068b8:	68fb      	ldr	r3, [r7, #12]
 80068ba:	681b      	ldr	r3, [r3, #0]
 80068bc:	430a      	orrs	r2, r1
 80068be:	619a      	str	r2, [r3, #24]
 80068c0:	e043      	b.n	800694a <HAL_TIM_PWM_ConfigChannel+0x172>
 80068c2:	68fb      	ldr	r3, [r7, #12]
 80068c4:	681b      	ldr	r3, [r3, #0]
 80068c6:	68b9      	ldr	r1, [r7, #8]
 80068c8:	4618      	mov	r0, r3
 80068ca:	f000 fa95 	bl	8006df8 <TIM_OC3_SetConfig>
 80068ce:	68fb      	ldr	r3, [r7, #12]
 80068d0:	681b      	ldr	r3, [r3, #0]
 80068d2:	69da      	ldr	r2, [r3, #28]
 80068d4:	68fb      	ldr	r3, [r7, #12]
 80068d6:	681b      	ldr	r3, [r3, #0]
 80068d8:	f042 0208 	orr.w	r2, r2, #8
 80068dc:	61da      	str	r2, [r3, #28]
 80068de:	68fb      	ldr	r3, [r7, #12]
 80068e0:	681b      	ldr	r3, [r3, #0]
 80068e2:	69da      	ldr	r2, [r3, #28]
 80068e4:	68fb      	ldr	r3, [r7, #12]
 80068e6:	681b      	ldr	r3, [r3, #0]
 80068e8:	f022 0204 	bic.w	r2, r2, #4
 80068ec:	61da      	str	r2, [r3, #28]
 80068ee:	68fb      	ldr	r3, [r7, #12]
 80068f0:	681b      	ldr	r3, [r3, #0]
 80068f2:	69d9      	ldr	r1, [r3, #28]
 80068f4:	68bb      	ldr	r3, [r7, #8]
 80068f6:	691a      	ldr	r2, [r3, #16]
 80068f8:	68fb      	ldr	r3, [r7, #12]
 80068fa:	681b      	ldr	r3, [r3, #0]
 80068fc:	430a      	orrs	r2, r1
 80068fe:	61da      	str	r2, [r3, #28]
 8006900:	e023      	b.n	800694a <HAL_TIM_PWM_ConfigChannel+0x172>
 8006902:	68fb      	ldr	r3, [r7, #12]
 8006904:	681b      	ldr	r3, [r3, #0]
 8006906:	68b9      	ldr	r1, [r7, #8]
 8006908:	4618      	mov	r0, r3
 800690a:	f000 fae9 	bl	8006ee0 <TIM_OC4_SetConfig>
 800690e:	68fb      	ldr	r3, [r7, #12]
 8006910:	681b      	ldr	r3, [r3, #0]
 8006912:	69da      	ldr	r2, [r3, #28]
 8006914:	68fb      	ldr	r3, [r7, #12]
 8006916:	681b      	ldr	r3, [r3, #0]
 8006918:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800691c:	61da      	str	r2, [r3, #28]
 800691e:	68fb      	ldr	r3, [r7, #12]
 8006920:	681b      	ldr	r3, [r3, #0]
 8006922:	69da      	ldr	r2, [r3, #28]
 8006924:	68fb      	ldr	r3, [r7, #12]
 8006926:	681b      	ldr	r3, [r3, #0]
 8006928:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800692c:	61da      	str	r2, [r3, #28]
 800692e:	68fb      	ldr	r3, [r7, #12]
 8006930:	681b      	ldr	r3, [r3, #0]
 8006932:	69d9      	ldr	r1, [r3, #28]
 8006934:	68bb      	ldr	r3, [r7, #8]
 8006936:	691b      	ldr	r3, [r3, #16]
 8006938:	021a      	lsls	r2, r3, #8
 800693a:	68fb      	ldr	r3, [r7, #12]
 800693c:	681b      	ldr	r3, [r3, #0]
 800693e:	430a      	orrs	r2, r1
 8006940:	61da      	str	r2, [r3, #28]
 8006942:	e002      	b.n	800694a <HAL_TIM_PWM_ConfigChannel+0x172>
 8006944:	2301      	movs	r3, #1
 8006946:	75fb      	strb	r3, [r7, #23]
 8006948:	bf00      	nop
 800694a:	68fb      	ldr	r3, [r7, #12]
 800694c:	2200      	movs	r2, #0
 800694e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006952:	7dfb      	ldrb	r3, [r7, #23]
 8006954:	4618      	mov	r0, r3
 8006956:	3718      	adds	r7, #24
 8006958:	46bd      	mov	sp, r7
 800695a:	bd80      	pop	{r7, pc}

0800695c <HAL_TIM_ConfigClockSource>:
 800695c:	b580      	push	{r7, lr}
 800695e:	b084      	sub	sp, #16
 8006960:	af00      	add	r7, sp, #0
 8006962:	6078      	str	r0, [r7, #4]
 8006964:	6039      	str	r1, [r7, #0]
 8006966:	2300      	movs	r3, #0
 8006968:	73fb      	strb	r3, [r7, #15]
 800696a:	687b      	ldr	r3, [r7, #4]
 800696c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8006970:	2b01      	cmp	r3, #1
 8006972:	d101      	bne.n	8006978 <HAL_TIM_ConfigClockSource+0x1c>
 8006974:	2302      	movs	r3, #2
 8006976:	e0b4      	b.n	8006ae2 <HAL_TIM_ConfigClockSource+0x186>
 8006978:	687b      	ldr	r3, [r7, #4]
 800697a:	2201      	movs	r2, #1
 800697c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006980:	687b      	ldr	r3, [r7, #4]
 8006982:	2202      	movs	r2, #2
 8006984:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006988:	687b      	ldr	r3, [r7, #4]
 800698a:	681b      	ldr	r3, [r3, #0]
 800698c:	689b      	ldr	r3, [r3, #8]
 800698e:	60bb      	str	r3, [r7, #8]
 8006990:	68bb      	ldr	r3, [r7, #8]
 8006992:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8006996:	60bb      	str	r3, [r7, #8]
 8006998:	68bb      	ldr	r3, [r7, #8]
 800699a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800699e:	60bb      	str	r3, [r7, #8]
 80069a0:	687b      	ldr	r3, [r7, #4]
 80069a2:	681b      	ldr	r3, [r3, #0]
 80069a4:	68ba      	ldr	r2, [r7, #8]
 80069a6:	609a      	str	r2, [r3, #8]
 80069a8:	683b      	ldr	r3, [r7, #0]
 80069aa:	681b      	ldr	r3, [r3, #0]
 80069ac:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80069b0:	d03e      	beq.n	8006a30 <HAL_TIM_ConfigClockSource+0xd4>
 80069b2:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80069b6:	f200 8087 	bhi.w	8006ac8 <HAL_TIM_ConfigClockSource+0x16c>
 80069ba:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80069be:	f000 8086 	beq.w	8006ace <HAL_TIM_ConfigClockSource+0x172>
 80069c2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80069c6:	d87f      	bhi.n	8006ac8 <HAL_TIM_ConfigClockSource+0x16c>
 80069c8:	2b70      	cmp	r3, #112	; 0x70
 80069ca:	d01a      	beq.n	8006a02 <HAL_TIM_ConfigClockSource+0xa6>
 80069cc:	2b70      	cmp	r3, #112	; 0x70
 80069ce:	d87b      	bhi.n	8006ac8 <HAL_TIM_ConfigClockSource+0x16c>
 80069d0:	2b60      	cmp	r3, #96	; 0x60
 80069d2:	d050      	beq.n	8006a76 <HAL_TIM_ConfigClockSource+0x11a>
 80069d4:	2b60      	cmp	r3, #96	; 0x60
 80069d6:	d877      	bhi.n	8006ac8 <HAL_TIM_ConfigClockSource+0x16c>
 80069d8:	2b50      	cmp	r3, #80	; 0x50
 80069da:	d03c      	beq.n	8006a56 <HAL_TIM_ConfigClockSource+0xfa>
 80069dc:	2b50      	cmp	r3, #80	; 0x50
 80069de:	d873      	bhi.n	8006ac8 <HAL_TIM_ConfigClockSource+0x16c>
 80069e0:	2b40      	cmp	r3, #64	; 0x40
 80069e2:	d058      	beq.n	8006a96 <HAL_TIM_ConfigClockSource+0x13a>
 80069e4:	2b40      	cmp	r3, #64	; 0x40
 80069e6:	d86f      	bhi.n	8006ac8 <HAL_TIM_ConfigClockSource+0x16c>
 80069e8:	2b30      	cmp	r3, #48	; 0x30
 80069ea:	d064      	beq.n	8006ab6 <HAL_TIM_ConfigClockSource+0x15a>
 80069ec:	2b30      	cmp	r3, #48	; 0x30
 80069ee:	d86b      	bhi.n	8006ac8 <HAL_TIM_ConfigClockSource+0x16c>
 80069f0:	2b20      	cmp	r3, #32
 80069f2:	d060      	beq.n	8006ab6 <HAL_TIM_ConfigClockSource+0x15a>
 80069f4:	2b20      	cmp	r3, #32
 80069f6:	d867      	bhi.n	8006ac8 <HAL_TIM_ConfigClockSource+0x16c>
 80069f8:	2b00      	cmp	r3, #0
 80069fa:	d05c      	beq.n	8006ab6 <HAL_TIM_ConfigClockSource+0x15a>
 80069fc:	2b10      	cmp	r3, #16
 80069fe:	d05a      	beq.n	8006ab6 <HAL_TIM_ConfigClockSource+0x15a>
 8006a00:	e062      	b.n	8006ac8 <HAL_TIM_ConfigClockSource+0x16c>
 8006a02:	687b      	ldr	r3, [r7, #4]
 8006a04:	6818      	ldr	r0, [r3, #0]
 8006a06:	683b      	ldr	r3, [r7, #0]
 8006a08:	6899      	ldr	r1, [r3, #8]
 8006a0a:	683b      	ldr	r3, [r7, #0]
 8006a0c:	685a      	ldr	r2, [r3, #4]
 8006a0e:	683b      	ldr	r3, [r7, #0]
 8006a10:	68db      	ldr	r3, [r3, #12]
 8006a12:	f000 fb35 	bl	8007080 <TIM_ETR_SetConfig>
 8006a16:	687b      	ldr	r3, [r7, #4]
 8006a18:	681b      	ldr	r3, [r3, #0]
 8006a1a:	689b      	ldr	r3, [r3, #8]
 8006a1c:	60bb      	str	r3, [r7, #8]
 8006a1e:	68bb      	ldr	r3, [r7, #8]
 8006a20:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8006a24:	60bb      	str	r3, [r7, #8]
 8006a26:	687b      	ldr	r3, [r7, #4]
 8006a28:	681b      	ldr	r3, [r3, #0]
 8006a2a:	68ba      	ldr	r2, [r7, #8]
 8006a2c:	609a      	str	r2, [r3, #8]
 8006a2e:	e04f      	b.n	8006ad0 <HAL_TIM_ConfigClockSource+0x174>
 8006a30:	687b      	ldr	r3, [r7, #4]
 8006a32:	6818      	ldr	r0, [r3, #0]
 8006a34:	683b      	ldr	r3, [r7, #0]
 8006a36:	6899      	ldr	r1, [r3, #8]
 8006a38:	683b      	ldr	r3, [r7, #0]
 8006a3a:	685a      	ldr	r2, [r3, #4]
 8006a3c:	683b      	ldr	r3, [r7, #0]
 8006a3e:	68db      	ldr	r3, [r3, #12]
 8006a40:	f000 fb1e 	bl	8007080 <TIM_ETR_SetConfig>
 8006a44:	687b      	ldr	r3, [r7, #4]
 8006a46:	681b      	ldr	r3, [r3, #0]
 8006a48:	689a      	ldr	r2, [r3, #8]
 8006a4a:	687b      	ldr	r3, [r7, #4]
 8006a4c:	681b      	ldr	r3, [r3, #0]
 8006a4e:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8006a52:	609a      	str	r2, [r3, #8]
 8006a54:	e03c      	b.n	8006ad0 <HAL_TIM_ConfigClockSource+0x174>
 8006a56:	687b      	ldr	r3, [r7, #4]
 8006a58:	6818      	ldr	r0, [r3, #0]
 8006a5a:	683b      	ldr	r3, [r7, #0]
 8006a5c:	6859      	ldr	r1, [r3, #4]
 8006a5e:	683b      	ldr	r3, [r7, #0]
 8006a60:	68db      	ldr	r3, [r3, #12]
 8006a62:	461a      	mov	r2, r3
 8006a64:	f000 fa92 	bl	8006f8c <TIM_TI1_ConfigInputStage>
 8006a68:	687b      	ldr	r3, [r7, #4]
 8006a6a:	681b      	ldr	r3, [r3, #0]
 8006a6c:	2150      	movs	r1, #80	; 0x50
 8006a6e:	4618      	mov	r0, r3
 8006a70:	f000 faeb 	bl	800704a <TIM_ITRx_SetConfig>
 8006a74:	e02c      	b.n	8006ad0 <HAL_TIM_ConfigClockSource+0x174>
 8006a76:	687b      	ldr	r3, [r7, #4]
 8006a78:	6818      	ldr	r0, [r3, #0]
 8006a7a:	683b      	ldr	r3, [r7, #0]
 8006a7c:	6859      	ldr	r1, [r3, #4]
 8006a7e:	683b      	ldr	r3, [r7, #0]
 8006a80:	68db      	ldr	r3, [r3, #12]
 8006a82:	461a      	mov	r2, r3
 8006a84:	f000 fab1 	bl	8006fea <TIM_TI2_ConfigInputStage>
 8006a88:	687b      	ldr	r3, [r7, #4]
 8006a8a:	681b      	ldr	r3, [r3, #0]
 8006a8c:	2160      	movs	r1, #96	; 0x60
 8006a8e:	4618      	mov	r0, r3
 8006a90:	f000 fadb 	bl	800704a <TIM_ITRx_SetConfig>
 8006a94:	e01c      	b.n	8006ad0 <HAL_TIM_ConfigClockSource+0x174>
 8006a96:	687b      	ldr	r3, [r7, #4]
 8006a98:	6818      	ldr	r0, [r3, #0]
 8006a9a:	683b      	ldr	r3, [r7, #0]
 8006a9c:	6859      	ldr	r1, [r3, #4]
 8006a9e:	683b      	ldr	r3, [r7, #0]
 8006aa0:	68db      	ldr	r3, [r3, #12]
 8006aa2:	461a      	mov	r2, r3
 8006aa4:	f000 fa72 	bl	8006f8c <TIM_TI1_ConfigInputStage>
 8006aa8:	687b      	ldr	r3, [r7, #4]
 8006aaa:	681b      	ldr	r3, [r3, #0]
 8006aac:	2140      	movs	r1, #64	; 0x40
 8006aae:	4618      	mov	r0, r3
 8006ab0:	f000 facb 	bl	800704a <TIM_ITRx_SetConfig>
 8006ab4:	e00c      	b.n	8006ad0 <HAL_TIM_ConfigClockSource+0x174>
 8006ab6:	687b      	ldr	r3, [r7, #4]
 8006ab8:	681a      	ldr	r2, [r3, #0]
 8006aba:	683b      	ldr	r3, [r7, #0]
 8006abc:	681b      	ldr	r3, [r3, #0]
 8006abe:	4619      	mov	r1, r3
 8006ac0:	4610      	mov	r0, r2
 8006ac2:	f000 fac2 	bl	800704a <TIM_ITRx_SetConfig>
 8006ac6:	e003      	b.n	8006ad0 <HAL_TIM_ConfigClockSource+0x174>
 8006ac8:	2301      	movs	r3, #1
 8006aca:	73fb      	strb	r3, [r7, #15]
 8006acc:	e000      	b.n	8006ad0 <HAL_TIM_ConfigClockSource+0x174>
 8006ace:	bf00      	nop
 8006ad0:	687b      	ldr	r3, [r7, #4]
 8006ad2:	2201      	movs	r2, #1
 8006ad4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006ad8:	687b      	ldr	r3, [r7, #4]
 8006ada:	2200      	movs	r2, #0
 8006adc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006ae0:	7bfb      	ldrb	r3, [r7, #15]
 8006ae2:	4618      	mov	r0, r3
 8006ae4:	3710      	adds	r7, #16
 8006ae6:	46bd      	mov	sp, r7
 8006ae8:	bd80      	pop	{r7, pc}
	...

08006aec <TIM_Base_SetConfig>:
 8006aec:	b480      	push	{r7}
 8006aee:	b085      	sub	sp, #20
 8006af0:	af00      	add	r7, sp, #0
 8006af2:	6078      	str	r0, [r7, #4]
 8006af4:	6039      	str	r1, [r7, #0]
 8006af6:	687b      	ldr	r3, [r7, #4]
 8006af8:	681b      	ldr	r3, [r3, #0]
 8006afa:	60fb      	str	r3, [r7, #12]
 8006afc:	687b      	ldr	r3, [r7, #4]
 8006afe:	4a40      	ldr	r2, [pc, #256]	; (8006c00 <TIM_Base_SetConfig+0x114>)
 8006b00:	4293      	cmp	r3, r2
 8006b02:	d013      	beq.n	8006b2c <TIM_Base_SetConfig+0x40>
 8006b04:	687b      	ldr	r3, [r7, #4]
 8006b06:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006b0a:	d00f      	beq.n	8006b2c <TIM_Base_SetConfig+0x40>
 8006b0c:	687b      	ldr	r3, [r7, #4]
 8006b0e:	4a3d      	ldr	r2, [pc, #244]	; (8006c04 <TIM_Base_SetConfig+0x118>)
 8006b10:	4293      	cmp	r3, r2
 8006b12:	d00b      	beq.n	8006b2c <TIM_Base_SetConfig+0x40>
 8006b14:	687b      	ldr	r3, [r7, #4]
 8006b16:	4a3c      	ldr	r2, [pc, #240]	; (8006c08 <TIM_Base_SetConfig+0x11c>)
 8006b18:	4293      	cmp	r3, r2
 8006b1a:	d007      	beq.n	8006b2c <TIM_Base_SetConfig+0x40>
 8006b1c:	687b      	ldr	r3, [r7, #4]
 8006b1e:	4a3b      	ldr	r2, [pc, #236]	; (8006c0c <TIM_Base_SetConfig+0x120>)
 8006b20:	4293      	cmp	r3, r2
 8006b22:	d003      	beq.n	8006b2c <TIM_Base_SetConfig+0x40>
 8006b24:	687b      	ldr	r3, [r7, #4]
 8006b26:	4a3a      	ldr	r2, [pc, #232]	; (8006c10 <TIM_Base_SetConfig+0x124>)
 8006b28:	4293      	cmp	r3, r2
 8006b2a:	d108      	bne.n	8006b3e <TIM_Base_SetConfig+0x52>
 8006b2c:	68fb      	ldr	r3, [r7, #12]
 8006b2e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006b32:	60fb      	str	r3, [r7, #12]
 8006b34:	683b      	ldr	r3, [r7, #0]
 8006b36:	685b      	ldr	r3, [r3, #4]
 8006b38:	68fa      	ldr	r2, [r7, #12]
 8006b3a:	4313      	orrs	r3, r2
 8006b3c:	60fb      	str	r3, [r7, #12]
 8006b3e:	687b      	ldr	r3, [r7, #4]
 8006b40:	4a2f      	ldr	r2, [pc, #188]	; (8006c00 <TIM_Base_SetConfig+0x114>)
 8006b42:	4293      	cmp	r3, r2
 8006b44:	d02b      	beq.n	8006b9e <TIM_Base_SetConfig+0xb2>
 8006b46:	687b      	ldr	r3, [r7, #4]
 8006b48:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006b4c:	d027      	beq.n	8006b9e <TIM_Base_SetConfig+0xb2>
 8006b4e:	687b      	ldr	r3, [r7, #4]
 8006b50:	4a2c      	ldr	r2, [pc, #176]	; (8006c04 <TIM_Base_SetConfig+0x118>)
 8006b52:	4293      	cmp	r3, r2
 8006b54:	d023      	beq.n	8006b9e <TIM_Base_SetConfig+0xb2>
 8006b56:	687b      	ldr	r3, [r7, #4]
 8006b58:	4a2b      	ldr	r2, [pc, #172]	; (8006c08 <TIM_Base_SetConfig+0x11c>)
 8006b5a:	4293      	cmp	r3, r2
 8006b5c:	d01f      	beq.n	8006b9e <TIM_Base_SetConfig+0xb2>
 8006b5e:	687b      	ldr	r3, [r7, #4]
 8006b60:	4a2a      	ldr	r2, [pc, #168]	; (8006c0c <TIM_Base_SetConfig+0x120>)
 8006b62:	4293      	cmp	r3, r2
 8006b64:	d01b      	beq.n	8006b9e <TIM_Base_SetConfig+0xb2>
 8006b66:	687b      	ldr	r3, [r7, #4]
 8006b68:	4a29      	ldr	r2, [pc, #164]	; (8006c10 <TIM_Base_SetConfig+0x124>)
 8006b6a:	4293      	cmp	r3, r2
 8006b6c:	d017      	beq.n	8006b9e <TIM_Base_SetConfig+0xb2>
 8006b6e:	687b      	ldr	r3, [r7, #4]
 8006b70:	4a28      	ldr	r2, [pc, #160]	; (8006c14 <TIM_Base_SetConfig+0x128>)
 8006b72:	4293      	cmp	r3, r2
 8006b74:	d013      	beq.n	8006b9e <TIM_Base_SetConfig+0xb2>
 8006b76:	687b      	ldr	r3, [r7, #4]
 8006b78:	4a27      	ldr	r2, [pc, #156]	; (8006c18 <TIM_Base_SetConfig+0x12c>)
 8006b7a:	4293      	cmp	r3, r2
 8006b7c:	d00f      	beq.n	8006b9e <TIM_Base_SetConfig+0xb2>
 8006b7e:	687b      	ldr	r3, [r7, #4]
 8006b80:	4a26      	ldr	r2, [pc, #152]	; (8006c1c <TIM_Base_SetConfig+0x130>)
 8006b82:	4293      	cmp	r3, r2
 8006b84:	d00b      	beq.n	8006b9e <TIM_Base_SetConfig+0xb2>
 8006b86:	687b      	ldr	r3, [r7, #4]
 8006b88:	4a25      	ldr	r2, [pc, #148]	; (8006c20 <TIM_Base_SetConfig+0x134>)
 8006b8a:	4293      	cmp	r3, r2
 8006b8c:	d007      	beq.n	8006b9e <TIM_Base_SetConfig+0xb2>
 8006b8e:	687b      	ldr	r3, [r7, #4]
 8006b90:	4a24      	ldr	r2, [pc, #144]	; (8006c24 <TIM_Base_SetConfig+0x138>)
 8006b92:	4293      	cmp	r3, r2
 8006b94:	d003      	beq.n	8006b9e <TIM_Base_SetConfig+0xb2>
 8006b96:	687b      	ldr	r3, [r7, #4]
 8006b98:	4a23      	ldr	r2, [pc, #140]	; (8006c28 <TIM_Base_SetConfig+0x13c>)
 8006b9a:	4293      	cmp	r3, r2
 8006b9c:	d108      	bne.n	8006bb0 <TIM_Base_SetConfig+0xc4>
 8006b9e:	68fb      	ldr	r3, [r7, #12]
 8006ba0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006ba4:	60fb      	str	r3, [r7, #12]
 8006ba6:	683b      	ldr	r3, [r7, #0]
 8006ba8:	68db      	ldr	r3, [r3, #12]
 8006baa:	68fa      	ldr	r2, [r7, #12]
 8006bac:	4313      	orrs	r3, r2
 8006bae:	60fb      	str	r3, [r7, #12]
 8006bb0:	68fb      	ldr	r3, [r7, #12]
 8006bb2:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8006bb6:	683b      	ldr	r3, [r7, #0]
 8006bb8:	695b      	ldr	r3, [r3, #20]
 8006bba:	4313      	orrs	r3, r2
 8006bbc:	60fb      	str	r3, [r7, #12]
 8006bbe:	687b      	ldr	r3, [r7, #4]
 8006bc0:	68fa      	ldr	r2, [r7, #12]
 8006bc2:	601a      	str	r2, [r3, #0]
 8006bc4:	683b      	ldr	r3, [r7, #0]
 8006bc6:	689a      	ldr	r2, [r3, #8]
 8006bc8:	687b      	ldr	r3, [r7, #4]
 8006bca:	62da      	str	r2, [r3, #44]	; 0x2c
 8006bcc:	683b      	ldr	r3, [r7, #0]
 8006bce:	681a      	ldr	r2, [r3, #0]
 8006bd0:	687b      	ldr	r3, [r7, #4]
 8006bd2:	629a      	str	r2, [r3, #40]	; 0x28
 8006bd4:	687b      	ldr	r3, [r7, #4]
 8006bd6:	4a0a      	ldr	r2, [pc, #40]	; (8006c00 <TIM_Base_SetConfig+0x114>)
 8006bd8:	4293      	cmp	r3, r2
 8006bda:	d003      	beq.n	8006be4 <TIM_Base_SetConfig+0xf8>
 8006bdc:	687b      	ldr	r3, [r7, #4]
 8006bde:	4a0c      	ldr	r2, [pc, #48]	; (8006c10 <TIM_Base_SetConfig+0x124>)
 8006be0:	4293      	cmp	r3, r2
 8006be2:	d103      	bne.n	8006bec <TIM_Base_SetConfig+0x100>
 8006be4:	683b      	ldr	r3, [r7, #0]
 8006be6:	691a      	ldr	r2, [r3, #16]
 8006be8:	687b      	ldr	r3, [r7, #4]
 8006bea:	631a      	str	r2, [r3, #48]	; 0x30
 8006bec:	687b      	ldr	r3, [r7, #4]
 8006bee:	2201      	movs	r2, #1
 8006bf0:	615a      	str	r2, [r3, #20]
 8006bf2:	bf00      	nop
 8006bf4:	3714      	adds	r7, #20
 8006bf6:	46bd      	mov	sp, r7
 8006bf8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006bfc:	4770      	bx	lr
 8006bfe:	bf00      	nop
 8006c00:	40010000 	.word	0x40010000
 8006c04:	40000400 	.word	0x40000400
 8006c08:	40000800 	.word	0x40000800
 8006c0c:	40000c00 	.word	0x40000c00
 8006c10:	40010400 	.word	0x40010400
 8006c14:	40014000 	.word	0x40014000
 8006c18:	40014400 	.word	0x40014400
 8006c1c:	40014800 	.word	0x40014800
 8006c20:	40001800 	.word	0x40001800
 8006c24:	40001c00 	.word	0x40001c00
 8006c28:	40002000 	.word	0x40002000

08006c2c <TIM_OC1_SetConfig>:
 8006c2c:	b480      	push	{r7}
 8006c2e:	b087      	sub	sp, #28
 8006c30:	af00      	add	r7, sp, #0
 8006c32:	6078      	str	r0, [r7, #4]
 8006c34:	6039      	str	r1, [r7, #0]
 8006c36:	687b      	ldr	r3, [r7, #4]
 8006c38:	6a1b      	ldr	r3, [r3, #32]
 8006c3a:	f023 0201 	bic.w	r2, r3, #1
 8006c3e:	687b      	ldr	r3, [r7, #4]
 8006c40:	621a      	str	r2, [r3, #32]
 8006c42:	687b      	ldr	r3, [r7, #4]
 8006c44:	6a1b      	ldr	r3, [r3, #32]
 8006c46:	617b      	str	r3, [r7, #20]
 8006c48:	687b      	ldr	r3, [r7, #4]
 8006c4a:	685b      	ldr	r3, [r3, #4]
 8006c4c:	613b      	str	r3, [r7, #16]
 8006c4e:	687b      	ldr	r3, [r7, #4]
 8006c50:	699b      	ldr	r3, [r3, #24]
 8006c52:	60fb      	str	r3, [r7, #12]
 8006c54:	68fb      	ldr	r3, [r7, #12]
 8006c56:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006c5a:	60fb      	str	r3, [r7, #12]
 8006c5c:	68fb      	ldr	r3, [r7, #12]
 8006c5e:	f023 0303 	bic.w	r3, r3, #3
 8006c62:	60fb      	str	r3, [r7, #12]
 8006c64:	683b      	ldr	r3, [r7, #0]
 8006c66:	681b      	ldr	r3, [r3, #0]
 8006c68:	68fa      	ldr	r2, [r7, #12]
 8006c6a:	4313      	orrs	r3, r2
 8006c6c:	60fb      	str	r3, [r7, #12]
 8006c6e:	697b      	ldr	r3, [r7, #20]
 8006c70:	f023 0302 	bic.w	r3, r3, #2
 8006c74:	617b      	str	r3, [r7, #20]
 8006c76:	683b      	ldr	r3, [r7, #0]
 8006c78:	689b      	ldr	r3, [r3, #8]
 8006c7a:	697a      	ldr	r2, [r7, #20]
 8006c7c:	4313      	orrs	r3, r2
 8006c7e:	617b      	str	r3, [r7, #20]
 8006c80:	687b      	ldr	r3, [r7, #4]
 8006c82:	4a20      	ldr	r2, [pc, #128]	; (8006d04 <TIM_OC1_SetConfig+0xd8>)
 8006c84:	4293      	cmp	r3, r2
 8006c86:	d003      	beq.n	8006c90 <TIM_OC1_SetConfig+0x64>
 8006c88:	687b      	ldr	r3, [r7, #4]
 8006c8a:	4a1f      	ldr	r2, [pc, #124]	; (8006d08 <TIM_OC1_SetConfig+0xdc>)
 8006c8c:	4293      	cmp	r3, r2
 8006c8e:	d10c      	bne.n	8006caa <TIM_OC1_SetConfig+0x7e>
 8006c90:	697b      	ldr	r3, [r7, #20]
 8006c92:	f023 0308 	bic.w	r3, r3, #8
 8006c96:	617b      	str	r3, [r7, #20]
 8006c98:	683b      	ldr	r3, [r7, #0]
 8006c9a:	68db      	ldr	r3, [r3, #12]
 8006c9c:	697a      	ldr	r2, [r7, #20]
 8006c9e:	4313      	orrs	r3, r2
 8006ca0:	617b      	str	r3, [r7, #20]
 8006ca2:	697b      	ldr	r3, [r7, #20]
 8006ca4:	f023 0304 	bic.w	r3, r3, #4
 8006ca8:	617b      	str	r3, [r7, #20]
 8006caa:	687b      	ldr	r3, [r7, #4]
 8006cac:	4a15      	ldr	r2, [pc, #84]	; (8006d04 <TIM_OC1_SetConfig+0xd8>)
 8006cae:	4293      	cmp	r3, r2
 8006cb0:	d003      	beq.n	8006cba <TIM_OC1_SetConfig+0x8e>
 8006cb2:	687b      	ldr	r3, [r7, #4]
 8006cb4:	4a14      	ldr	r2, [pc, #80]	; (8006d08 <TIM_OC1_SetConfig+0xdc>)
 8006cb6:	4293      	cmp	r3, r2
 8006cb8:	d111      	bne.n	8006cde <TIM_OC1_SetConfig+0xb2>
 8006cba:	693b      	ldr	r3, [r7, #16]
 8006cbc:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8006cc0:	613b      	str	r3, [r7, #16]
 8006cc2:	693b      	ldr	r3, [r7, #16]
 8006cc4:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8006cc8:	613b      	str	r3, [r7, #16]
 8006cca:	683b      	ldr	r3, [r7, #0]
 8006ccc:	695b      	ldr	r3, [r3, #20]
 8006cce:	693a      	ldr	r2, [r7, #16]
 8006cd0:	4313      	orrs	r3, r2
 8006cd2:	613b      	str	r3, [r7, #16]
 8006cd4:	683b      	ldr	r3, [r7, #0]
 8006cd6:	699b      	ldr	r3, [r3, #24]
 8006cd8:	693a      	ldr	r2, [r7, #16]
 8006cda:	4313      	orrs	r3, r2
 8006cdc:	613b      	str	r3, [r7, #16]
 8006cde:	687b      	ldr	r3, [r7, #4]
 8006ce0:	693a      	ldr	r2, [r7, #16]
 8006ce2:	605a      	str	r2, [r3, #4]
 8006ce4:	687b      	ldr	r3, [r7, #4]
 8006ce6:	68fa      	ldr	r2, [r7, #12]
 8006ce8:	619a      	str	r2, [r3, #24]
 8006cea:	683b      	ldr	r3, [r7, #0]
 8006cec:	685a      	ldr	r2, [r3, #4]
 8006cee:	687b      	ldr	r3, [r7, #4]
 8006cf0:	635a      	str	r2, [r3, #52]	; 0x34
 8006cf2:	687b      	ldr	r3, [r7, #4]
 8006cf4:	697a      	ldr	r2, [r7, #20]
 8006cf6:	621a      	str	r2, [r3, #32]
 8006cf8:	bf00      	nop
 8006cfa:	371c      	adds	r7, #28
 8006cfc:	46bd      	mov	sp, r7
 8006cfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d02:	4770      	bx	lr
 8006d04:	40010000 	.word	0x40010000
 8006d08:	40010400 	.word	0x40010400

08006d0c <TIM_OC2_SetConfig>:
 8006d0c:	b480      	push	{r7}
 8006d0e:	b087      	sub	sp, #28
 8006d10:	af00      	add	r7, sp, #0
 8006d12:	6078      	str	r0, [r7, #4]
 8006d14:	6039      	str	r1, [r7, #0]
 8006d16:	687b      	ldr	r3, [r7, #4]
 8006d18:	6a1b      	ldr	r3, [r3, #32]
 8006d1a:	f023 0210 	bic.w	r2, r3, #16
 8006d1e:	687b      	ldr	r3, [r7, #4]
 8006d20:	621a      	str	r2, [r3, #32]
 8006d22:	687b      	ldr	r3, [r7, #4]
 8006d24:	6a1b      	ldr	r3, [r3, #32]
 8006d26:	617b      	str	r3, [r7, #20]
 8006d28:	687b      	ldr	r3, [r7, #4]
 8006d2a:	685b      	ldr	r3, [r3, #4]
 8006d2c:	613b      	str	r3, [r7, #16]
 8006d2e:	687b      	ldr	r3, [r7, #4]
 8006d30:	699b      	ldr	r3, [r3, #24]
 8006d32:	60fb      	str	r3, [r7, #12]
 8006d34:	68fb      	ldr	r3, [r7, #12]
 8006d36:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8006d3a:	60fb      	str	r3, [r7, #12]
 8006d3c:	68fb      	ldr	r3, [r7, #12]
 8006d3e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006d42:	60fb      	str	r3, [r7, #12]
 8006d44:	683b      	ldr	r3, [r7, #0]
 8006d46:	681b      	ldr	r3, [r3, #0]
 8006d48:	021b      	lsls	r3, r3, #8
 8006d4a:	68fa      	ldr	r2, [r7, #12]
 8006d4c:	4313      	orrs	r3, r2
 8006d4e:	60fb      	str	r3, [r7, #12]
 8006d50:	697b      	ldr	r3, [r7, #20]
 8006d52:	f023 0320 	bic.w	r3, r3, #32
 8006d56:	617b      	str	r3, [r7, #20]
 8006d58:	683b      	ldr	r3, [r7, #0]
 8006d5a:	689b      	ldr	r3, [r3, #8]
 8006d5c:	011b      	lsls	r3, r3, #4
 8006d5e:	697a      	ldr	r2, [r7, #20]
 8006d60:	4313      	orrs	r3, r2
 8006d62:	617b      	str	r3, [r7, #20]
 8006d64:	687b      	ldr	r3, [r7, #4]
 8006d66:	4a22      	ldr	r2, [pc, #136]	; (8006df0 <TIM_OC2_SetConfig+0xe4>)
 8006d68:	4293      	cmp	r3, r2
 8006d6a:	d003      	beq.n	8006d74 <TIM_OC2_SetConfig+0x68>
 8006d6c:	687b      	ldr	r3, [r7, #4]
 8006d6e:	4a21      	ldr	r2, [pc, #132]	; (8006df4 <TIM_OC2_SetConfig+0xe8>)
 8006d70:	4293      	cmp	r3, r2
 8006d72:	d10d      	bne.n	8006d90 <TIM_OC2_SetConfig+0x84>
 8006d74:	697b      	ldr	r3, [r7, #20]
 8006d76:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8006d7a:	617b      	str	r3, [r7, #20]
 8006d7c:	683b      	ldr	r3, [r7, #0]
 8006d7e:	68db      	ldr	r3, [r3, #12]
 8006d80:	011b      	lsls	r3, r3, #4
 8006d82:	697a      	ldr	r2, [r7, #20]
 8006d84:	4313      	orrs	r3, r2
 8006d86:	617b      	str	r3, [r7, #20]
 8006d88:	697b      	ldr	r3, [r7, #20]
 8006d8a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8006d8e:	617b      	str	r3, [r7, #20]
 8006d90:	687b      	ldr	r3, [r7, #4]
 8006d92:	4a17      	ldr	r2, [pc, #92]	; (8006df0 <TIM_OC2_SetConfig+0xe4>)
 8006d94:	4293      	cmp	r3, r2
 8006d96:	d003      	beq.n	8006da0 <TIM_OC2_SetConfig+0x94>
 8006d98:	687b      	ldr	r3, [r7, #4]
 8006d9a:	4a16      	ldr	r2, [pc, #88]	; (8006df4 <TIM_OC2_SetConfig+0xe8>)
 8006d9c:	4293      	cmp	r3, r2
 8006d9e:	d113      	bne.n	8006dc8 <TIM_OC2_SetConfig+0xbc>
 8006da0:	693b      	ldr	r3, [r7, #16]
 8006da2:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8006da6:	613b      	str	r3, [r7, #16]
 8006da8:	693b      	ldr	r3, [r7, #16]
 8006daa:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006dae:	613b      	str	r3, [r7, #16]
 8006db0:	683b      	ldr	r3, [r7, #0]
 8006db2:	695b      	ldr	r3, [r3, #20]
 8006db4:	009b      	lsls	r3, r3, #2
 8006db6:	693a      	ldr	r2, [r7, #16]
 8006db8:	4313      	orrs	r3, r2
 8006dba:	613b      	str	r3, [r7, #16]
 8006dbc:	683b      	ldr	r3, [r7, #0]
 8006dbe:	699b      	ldr	r3, [r3, #24]
 8006dc0:	009b      	lsls	r3, r3, #2
 8006dc2:	693a      	ldr	r2, [r7, #16]
 8006dc4:	4313      	orrs	r3, r2
 8006dc6:	613b      	str	r3, [r7, #16]
 8006dc8:	687b      	ldr	r3, [r7, #4]
 8006dca:	693a      	ldr	r2, [r7, #16]
 8006dcc:	605a      	str	r2, [r3, #4]
 8006dce:	687b      	ldr	r3, [r7, #4]
 8006dd0:	68fa      	ldr	r2, [r7, #12]
 8006dd2:	619a      	str	r2, [r3, #24]
 8006dd4:	683b      	ldr	r3, [r7, #0]
 8006dd6:	685a      	ldr	r2, [r3, #4]
 8006dd8:	687b      	ldr	r3, [r7, #4]
 8006dda:	639a      	str	r2, [r3, #56]	; 0x38
 8006ddc:	687b      	ldr	r3, [r7, #4]
 8006dde:	697a      	ldr	r2, [r7, #20]
 8006de0:	621a      	str	r2, [r3, #32]
 8006de2:	bf00      	nop
 8006de4:	371c      	adds	r7, #28
 8006de6:	46bd      	mov	sp, r7
 8006de8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006dec:	4770      	bx	lr
 8006dee:	bf00      	nop
 8006df0:	40010000 	.word	0x40010000
 8006df4:	40010400 	.word	0x40010400

08006df8 <TIM_OC3_SetConfig>:
 8006df8:	b480      	push	{r7}
 8006dfa:	b087      	sub	sp, #28
 8006dfc:	af00      	add	r7, sp, #0
 8006dfe:	6078      	str	r0, [r7, #4]
 8006e00:	6039      	str	r1, [r7, #0]
 8006e02:	687b      	ldr	r3, [r7, #4]
 8006e04:	6a1b      	ldr	r3, [r3, #32]
 8006e06:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8006e0a:	687b      	ldr	r3, [r7, #4]
 8006e0c:	621a      	str	r2, [r3, #32]
 8006e0e:	687b      	ldr	r3, [r7, #4]
 8006e10:	6a1b      	ldr	r3, [r3, #32]
 8006e12:	617b      	str	r3, [r7, #20]
 8006e14:	687b      	ldr	r3, [r7, #4]
 8006e16:	685b      	ldr	r3, [r3, #4]
 8006e18:	613b      	str	r3, [r7, #16]
 8006e1a:	687b      	ldr	r3, [r7, #4]
 8006e1c:	69db      	ldr	r3, [r3, #28]
 8006e1e:	60fb      	str	r3, [r7, #12]
 8006e20:	68fb      	ldr	r3, [r7, #12]
 8006e22:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006e26:	60fb      	str	r3, [r7, #12]
 8006e28:	68fb      	ldr	r3, [r7, #12]
 8006e2a:	f023 0303 	bic.w	r3, r3, #3
 8006e2e:	60fb      	str	r3, [r7, #12]
 8006e30:	683b      	ldr	r3, [r7, #0]
 8006e32:	681b      	ldr	r3, [r3, #0]
 8006e34:	68fa      	ldr	r2, [r7, #12]
 8006e36:	4313      	orrs	r3, r2
 8006e38:	60fb      	str	r3, [r7, #12]
 8006e3a:	697b      	ldr	r3, [r7, #20]
 8006e3c:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8006e40:	617b      	str	r3, [r7, #20]
 8006e42:	683b      	ldr	r3, [r7, #0]
 8006e44:	689b      	ldr	r3, [r3, #8]
 8006e46:	021b      	lsls	r3, r3, #8
 8006e48:	697a      	ldr	r2, [r7, #20]
 8006e4a:	4313      	orrs	r3, r2
 8006e4c:	617b      	str	r3, [r7, #20]
 8006e4e:	687b      	ldr	r3, [r7, #4]
 8006e50:	4a21      	ldr	r2, [pc, #132]	; (8006ed8 <TIM_OC3_SetConfig+0xe0>)
 8006e52:	4293      	cmp	r3, r2
 8006e54:	d003      	beq.n	8006e5e <TIM_OC3_SetConfig+0x66>
 8006e56:	687b      	ldr	r3, [r7, #4]
 8006e58:	4a20      	ldr	r2, [pc, #128]	; (8006edc <TIM_OC3_SetConfig+0xe4>)
 8006e5a:	4293      	cmp	r3, r2
 8006e5c:	d10d      	bne.n	8006e7a <TIM_OC3_SetConfig+0x82>
 8006e5e:	697b      	ldr	r3, [r7, #20]
 8006e60:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006e64:	617b      	str	r3, [r7, #20]
 8006e66:	683b      	ldr	r3, [r7, #0]
 8006e68:	68db      	ldr	r3, [r3, #12]
 8006e6a:	021b      	lsls	r3, r3, #8
 8006e6c:	697a      	ldr	r2, [r7, #20]
 8006e6e:	4313      	orrs	r3, r2
 8006e70:	617b      	str	r3, [r7, #20]
 8006e72:	697b      	ldr	r3, [r7, #20]
 8006e74:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8006e78:	617b      	str	r3, [r7, #20]
 8006e7a:	687b      	ldr	r3, [r7, #4]
 8006e7c:	4a16      	ldr	r2, [pc, #88]	; (8006ed8 <TIM_OC3_SetConfig+0xe0>)
 8006e7e:	4293      	cmp	r3, r2
 8006e80:	d003      	beq.n	8006e8a <TIM_OC3_SetConfig+0x92>
 8006e82:	687b      	ldr	r3, [r7, #4]
 8006e84:	4a15      	ldr	r2, [pc, #84]	; (8006edc <TIM_OC3_SetConfig+0xe4>)
 8006e86:	4293      	cmp	r3, r2
 8006e88:	d113      	bne.n	8006eb2 <TIM_OC3_SetConfig+0xba>
 8006e8a:	693b      	ldr	r3, [r7, #16]
 8006e8c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8006e90:	613b      	str	r3, [r7, #16]
 8006e92:	693b      	ldr	r3, [r7, #16]
 8006e94:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8006e98:	613b      	str	r3, [r7, #16]
 8006e9a:	683b      	ldr	r3, [r7, #0]
 8006e9c:	695b      	ldr	r3, [r3, #20]
 8006e9e:	011b      	lsls	r3, r3, #4
 8006ea0:	693a      	ldr	r2, [r7, #16]
 8006ea2:	4313      	orrs	r3, r2
 8006ea4:	613b      	str	r3, [r7, #16]
 8006ea6:	683b      	ldr	r3, [r7, #0]
 8006ea8:	699b      	ldr	r3, [r3, #24]
 8006eaa:	011b      	lsls	r3, r3, #4
 8006eac:	693a      	ldr	r2, [r7, #16]
 8006eae:	4313      	orrs	r3, r2
 8006eb0:	613b      	str	r3, [r7, #16]
 8006eb2:	687b      	ldr	r3, [r7, #4]
 8006eb4:	693a      	ldr	r2, [r7, #16]
 8006eb6:	605a      	str	r2, [r3, #4]
 8006eb8:	687b      	ldr	r3, [r7, #4]
 8006eba:	68fa      	ldr	r2, [r7, #12]
 8006ebc:	61da      	str	r2, [r3, #28]
 8006ebe:	683b      	ldr	r3, [r7, #0]
 8006ec0:	685a      	ldr	r2, [r3, #4]
 8006ec2:	687b      	ldr	r3, [r7, #4]
 8006ec4:	63da      	str	r2, [r3, #60]	; 0x3c
 8006ec6:	687b      	ldr	r3, [r7, #4]
 8006ec8:	697a      	ldr	r2, [r7, #20]
 8006eca:	621a      	str	r2, [r3, #32]
 8006ecc:	bf00      	nop
 8006ece:	371c      	adds	r7, #28
 8006ed0:	46bd      	mov	sp, r7
 8006ed2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ed6:	4770      	bx	lr
 8006ed8:	40010000 	.word	0x40010000
 8006edc:	40010400 	.word	0x40010400

08006ee0 <TIM_OC4_SetConfig>:
 8006ee0:	b480      	push	{r7}
 8006ee2:	b087      	sub	sp, #28
 8006ee4:	af00      	add	r7, sp, #0
 8006ee6:	6078      	str	r0, [r7, #4]
 8006ee8:	6039      	str	r1, [r7, #0]
 8006eea:	687b      	ldr	r3, [r7, #4]
 8006eec:	6a1b      	ldr	r3, [r3, #32]
 8006eee:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8006ef2:	687b      	ldr	r3, [r7, #4]
 8006ef4:	621a      	str	r2, [r3, #32]
 8006ef6:	687b      	ldr	r3, [r7, #4]
 8006ef8:	6a1b      	ldr	r3, [r3, #32]
 8006efa:	613b      	str	r3, [r7, #16]
 8006efc:	687b      	ldr	r3, [r7, #4]
 8006efe:	685b      	ldr	r3, [r3, #4]
 8006f00:	617b      	str	r3, [r7, #20]
 8006f02:	687b      	ldr	r3, [r7, #4]
 8006f04:	69db      	ldr	r3, [r3, #28]
 8006f06:	60fb      	str	r3, [r7, #12]
 8006f08:	68fb      	ldr	r3, [r7, #12]
 8006f0a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8006f0e:	60fb      	str	r3, [r7, #12]
 8006f10:	68fb      	ldr	r3, [r7, #12]
 8006f12:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006f16:	60fb      	str	r3, [r7, #12]
 8006f18:	683b      	ldr	r3, [r7, #0]
 8006f1a:	681b      	ldr	r3, [r3, #0]
 8006f1c:	021b      	lsls	r3, r3, #8
 8006f1e:	68fa      	ldr	r2, [r7, #12]
 8006f20:	4313      	orrs	r3, r2
 8006f22:	60fb      	str	r3, [r7, #12]
 8006f24:	693b      	ldr	r3, [r7, #16]
 8006f26:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8006f2a:	613b      	str	r3, [r7, #16]
 8006f2c:	683b      	ldr	r3, [r7, #0]
 8006f2e:	689b      	ldr	r3, [r3, #8]
 8006f30:	031b      	lsls	r3, r3, #12
 8006f32:	693a      	ldr	r2, [r7, #16]
 8006f34:	4313      	orrs	r3, r2
 8006f36:	613b      	str	r3, [r7, #16]
 8006f38:	687b      	ldr	r3, [r7, #4]
 8006f3a:	4a12      	ldr	r2, [pc, #72]	; (8006f84 <TIM_OC4_SetConfig+0xa4>)
 8006f3c:	4293      	cmp	r3, r2
 8006f3e:	d003      	beq.n	8006f48 <TIM_OC4_SetConfig+0x68>
 8006f40:	687b      	ldr	r3, [r7, #4]
 8006f42:	4a11      	ldr	r2, [pc, #68]	; (8006f88 <TIM_OC4_SetConfig+0xa8>)
 8006f44:	4293      	cmp	r3, r2
 8006f46:	d109      	bne.n	8006f5c <TIM_OC4_SetConfig+0x7c>
 8006f48:	697b      	ldr	r3, [r7, #20]
 8006f4a:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8006f4e:	617b      	str	r3, [r7, #20]
 8006f50:	683b      	ldr	r3, [r7, #0]
 8006f52:	695b      	ldr	r3, [r3, #20]
 8006f54:	019b      	lsls	r3, r3, #6
 8006f56:	697a      	ldr	r2, [r7, #20]
 8006f58:	4313      	orrs	r3, r2
 8006f5a:	617b      	str	r3, [r7, #20]
 8006f5c:	687b      	ldr	r3, [r7, #4]
 8006f5e:	697a      	ldr	r2, [r7, #20]
 8006f60:	605a      	str	r2, [r3, #4]
 8006f62:	687b      	ldr	r3, [r7, #4]
 8006f64:	68fa      	ldr	r2, [r7, #12]
 8006f66:	61da      	str	r2, [r3, #28]
 8006f68:	683b      	ldr	r3, [r7, #0]
 8006f6a:	685a      	ldr	r2, [r3, #4]
 8006f6c:	687b      	ldr	r3, [r7, #4]
 8006f6e:	641a      	str	r2, [r3, #64]	; 0x40
 8006f70:	687b      	ldr	r3, [r7, #4]
 8006f72:	693a      	ldr	r2, [r7, #16]
 8006f74:	621a      	str	r2, [r3, #32]
 8006f76:	bf00      	nop
 8006f78:	371c      	adds	r7, #28
 8006f7a:	46bd      	mov	sp, r7
 8006f7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f80:	4770      	bx	lr
 8006f82:	bf00      	nop
 8006f84:	40010000 	.word	0x40010000
 8006f88:	40010400 	.word	0x40010400

08006f8c <TIM_TI1_ConfigInputStage>:
 8006f8c:	b480      	push	{r7}
 8006f8e:	b087      	sub	sp, #28
 8006f90:	af00      	add	r7, sp, #0
 8006f92:	60f8      	str	r0, [r7, #12]
 8006f94:	60b9      	str	r1, [r7, #8]
 8006f96:	607a      	str	r2, [r7, #4]
 8006f98:	68fb      	ldr	r3, [r7, #12]
 8006f9a:	6a1b      	ldr	r3, [r3, #32]
 8006f9c:	617b      	str	r3, [r7, #20]
 8006f9e:	68fb      	ldr	r3, [r7, #12]
 8006fa0:	6a1b      	ldr	r3, [r3, #32]
 8006fa2:	f023 0201 	bic.w	r2, r3, #1
 8006fa6:	68fb      	ldr	r3, [r7, #12]
 8006fa8:	621a      	str	r2, [r3, #32]
 8006faa:	68fb      	ldr	r3, [r7, #12]
 8006fac:	699b      	ldr	r3, [r3, #24]
 8006fae:	613b      	str	r3, [r7, #16]
 8006fb0:	693b      	ldr	r3, [r7, #16]
 8006fb2:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8006fb6:	613b      	str	r3, [r7, #16]
 8006fb8:	687b      	ldr	r3, [r7, #4]
 8006fba:	011b      	lsls	r3, r3, #4
 8006fbc:	693a      	ldr	r2, [r7, #16]
 8006fbe:	4313      	orrs	r3, r2
 8006fc0:	613b      	str	r3, [r7, #16]
 8006fc2:	697b      	ldr	r3, [r7, #20]
 8006fc4:	f023 030a 	bic.w	r3, r3, #10
 8006fc8:	617b      	str	r3, [r7, #20]
 8006fca:	697a      	ldr	r2, [r7, #20]
 8006fcc:	68bb      	ldr	r3, [r7, #8]
 8006fce:	4313      	orrs	r3, r2
 8006fd0:	617b      	str	r3, [r7, #20]
 8006fd2:	68fb      	ldr	r3, [r7, #12]
 8006fd4:	693a      	ldr	r2, [r7, #16]
 8006fd6:	619a      	str	r2, [r3, #24]
 8006fd8:	68fb      	ldr	r3, [r7, #12]
 8006fda:	697a      	ldr	r2, [r7, #20]
 8006fdc:	621a      	str	r2, [r3, #32]
 8006fde:	bf00      	nop
 8006fe0:	371c      	adds	r7, #28
 8006fe2:	46bd      	mov	sp, r7
 8006fe4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006fe8:	4770      	bx	lr

08006fea <TIM_TI2_ConfigInputStage>:
 8006fea:	b480      	push	{r7}
 8006fec:	b087      	sub	sp, #28
 8006fee:	af00      	add	r7, sp, #0
 8006ff0:	60f8      	str	r0, [r7, #12]
 8006ff2:	60b9      	str	r1, [r7, #8]
 8006ff4:	607a      	str	r2, [r7, #4]
 8006ff6:	68fb      	ldr	r3, [r7, #12]
 8006ff8:	6a1b      	ldr	r3, [r3, #32]
 8006ffa:	f023 0210 	bic.w	r2, r3, #16
 8006ffe:	68fb      	ldr	r3, [r7, #12]
 8007000:	621a      	str	r2, [r3, #32]
 8007002:	68fb      	ldr	r3, [r7, #12]
 8007004:	699b      	ldr	r3, [r3, #24]
 8007006:	617b      	str	r3, [r7, #20]
 8007008:	68fb      	ldr	r3, [r7, #12]
 800700a:	6a1b      	ldr	r3, [r3, #32]
 800700c:	613b      	str	r3, [r7, #16]
 800700e:	697b      	ldr	r3, [r7, #20]
 8007010:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8007014:	617b      	str	r3, [r7, #20]
 8007016:	687b      	ldr	r3, [r7, #4]
 8007018:	031b      	lsls	r3, r3, #12
 800701a:	697a      	ldr	r2, [r7, #20]
 800701c:	4313      	orrs	r3, r2
 800701e:	617b      	str	r3, [r7, #20]
 8007020:	693b      	ldr	r3, [r7, #16]
 8007022:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8007026:	613b      	str	r3, [r7, #16]
 8007028:	68bb      	ldr	r3, [r7, #8]
 800702a:	011b      	lsls	r3, r3, #4
 800702c:	693a      	ldr	r2, [r7, #16]
 800702e:	4313      	orrs	r3, r2
 8007030:	613b      	str	r3, [r7, #16]
 8007032:	68fb      	ldr	r3, [r7, #12]
 8007034:	697a      	ldr	r2, [r7, #20]
 8007036:	619a      	str	r2, [r3, #24]
 8007038:	68fb      	ldr	r3, [r7, #12]
 800703a:	693a      	ldr	r2, [r7, #16]
 800703c:	621a      	str	r2, [r3, #32]
 800703e:	bf00      	nop
 8007040:	371c      	adds	r7, #28
 8007042:	46bd      	mov	sp, r7
 8007044:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007048:	4770      	bx	lr

0800704a <TIM_ITRx_SetConfig>:
 800704a:	b480      	push	{r7}
 800704c:	b085      	sub	sp, #20
 800704e:	af00      	add	r7, sp, #0
 8007050:	6078      	str	r0, [r7, #4]
 8007052:	6039      	str	r1, [r7, #0]
 8007054:	687b      	ldr	r3, [r7, #4]
 8007056:	689b      	ldr	r3, [r3, #8]
 8007058:	60fb      	str	r3, [r7, #12]
 800705a:	68fb      	ldr	r3, [r7, #12]
 800705c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007060:	60fb      	str	r3, [r7, #12]
 8007062:	683a      	ldr	r2, [r7, #0]
 8007064:	68fb      	ldr	r3, [r7, #12]
 8007066:	4313      	orrs	r3, r2
 8007068:	f043 0307 	orr.w	r3, r3, #7
 800706c:	60fb      	str	r3, [r7, #12]
 800706e:	687b      	ldr	r3, [r7, #4]
 8007070:	68fa      	ldr	r2, [r7, #12]
 8007072:	609a      	str	r2, [r3, #8]
 8007074:	bf00      	nop
 8007076:	3714      	adds	r7, #20
 8007078:	46bd      	mov	sp, r7
 800707a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800707e:	4770      	bx	lr

08007080 <TIM_ETR_SetConfig>:
 8007080:	b480      	push	{r7}
 8007082:	b087      	sub	sp, #28
 8007084:	af00      	add	r7, sp, #0
 8007086:	60f8      	str	r0, [r7, #12]
 8007088:	60b9      	str	r1, [r7, #8]
 800708a:	607a      	str	r2, [r7, #4]
 800708c:	603b      	str	r3, [r7, #0]
 800708e:	68fb      	ldr	r3, [r7, #12]
 8007090:	689b      	ldr	r3, [r3, #8]
 8007092:	617b      	str	r3, [r7, #20]
 8007094:	697b      	ldr	r3, [r7, #20]
 8007096:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800709a:	617b      	str	r3, [r7, #20]
 800709c:	683b      	ldr	r3, [r7, #0]
 800709e:	021a      	lsls	r2, r3, #8
 80070a0:	687b      	ldr	r3, [r7, #4]
 80070a2:	431a      	orrs	r2, r3
 80070a4:	68bb      	ldr	r3, [r7, #8]
 80070a6:	4313      	orrs	r3, r2
 80070a8:	697a      	ldr	r2, [r7, #20]
 80070aa:	4313      	orrs	r3, r2
 80070ac:	617b      	str	r3, [r7, #20]
 80070ae:	68fb      	ldr	r3, [r7, #12]
 80070b0:	697a      	ldr	r2, [r7, #20]
 80070b2:	609a      	str	r2, [r3, #8]
 80070b4:	bf00      	nop
 80070b6:	371c      	adds	r7, #28
 80070b8:	46bd      	mov	sp, r7
 80070ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80070be:	4770      	bx	lr

080070c0 <TIM_CCxChannelCmd>:
 80070c0:	b480      	push	{r7}
 80070c2:	b087      	sub	sp, #28
 80070c4:	af00      	add	r7, sp, #0
 80070c6:	60f8      	str	r0, [r7, #12]
 80070c8:	60b9      	str	r1, [r7, #8]
 80070ca:	607a      	str	r2, [r7, #4]
 80070cc:	68bb      	ldr	r3, [r7, #8]
 80070ce:	f003 031f 	and.w	r3, r3, #31
 80070d2:	2201      	movs	r2, #1
 80070d4:	fa02 f303 	lsl.w	r3, r2, r3
 80070d8:	617b      	str	r3, [r7, #20]
 80070da:	68fb      	ldr	r3, [r7, #12]
 80070dc:	6a1a      	ldr	r2, [r3, #32]
 80070de:	697b      	ldr	r3, [r7, #20]
 80070e0:	43db      	mvns	r3, r3
 80070e2:	401a      	ands	r2, r3
 80070e4:	68fb      	ldr	r3, [r7, #12]
 80070e6:	621a      	str	r2, [r3, #32]
 80070e8:	68fb      	ldr	r3, [r7, #12]
 80070ea:	6a1a      	ldr	r2, [r3, #32]
 80070ec:	68bb      	ldr	r3, [r7, #8]
 80070ee:	f003 031f 	and.w	r3, r3, #31
 80070f2:	6879      	ldr	r1, [r7, #4]
 80070f4:	fa01 f303 	lsl.w	r3, r1, r3
 80070f8:	431a      	orrs	r2, r3
 80070fa:	68fb      	ldr	r3, [r7, #12]
 80070fc:	621a      	str	r2, [r3, #32]
 80070fe:	bf00      	nop
 8007100:	371c      	adds	r7, #28
 8007102:	46bd      	mov	sp, r7
 8007104:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007108:	4770      	bx	lr
	...

0800710c <HAL_TIMEx_MasterConfigSynchronization>:
 800710c:	b480      	push	{r7}
 800710e:	b085      	sub	sp, #20
 8007110:	af00      	add	r7, sp, #0
 8007112:	6078      	str	r0, [r7, #4]
 8007114:	6039      	str	r1, [r7, #0]
 8007116:	687b      	ldr	r3, [r7, #4]
 8007118:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800711c:	2b01      	cmp	r3, #1
 800711e:	d101      	bne.n	8007124 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8007120:	2302      	movs	r3, #2
 8007122:	e05a      	b.n	80071da <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8007124:	687b      	ldr	r3, [r7, #4]
 8007126:	2201      	movs	r2, #1
 8007128:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800712c:	687b      	ldr	r3, [r7, #4]
 800712e:	2202      	movs	r2, #2
 8007130:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007134:	687b      	ldr	r3, [r7, #4]
 8007136:	681b      	ldr	r3, [r3, #0]
 8007138:	685b      	ldr	r3, [r3, #4]
 800713a:	60fb      	str	r3, [r7, #12]
 800713c:	687b      	ldr	r3, [r7, #4]
 800713e:	681b      	ldr	r3, [r3, #0]
 8007140:	689b      	ldr	r3, [r3, #8]
 8007142:	60bb      	str	r3, [r7, #8]
 8007144:	68fb      	ldr	r3, [r7, #12]
 8007146:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800714a:	60fb      	str	r3, [r7, #12]
 800714c:	683b      	ldr	r3, [r7, #0]
 800714e:	681b      	ldr	r3, [r3, #0]
 8007150:	68fa      	ldr	r2, [r7, #12]
 8007152:	4313      	orrs	r3, r2
 8007154:	60fb      	str	r3, [r7, #12]
 8007156:	687b      	ldr	r3, [r7, #4]
 8007158:	681b      	ldr	r3, [r3, #0]
 800715a:	68fa      	ldr	r2, [r7, #12]
 800715c:	605a      	str	r2, [r3, #4]
 800715e:	687b      	ldr	r3, [r7, #4]
 8007160:	681b      	ldr	r3, [r3, #0]
 8007162:	4a21      	ldr	r2, [pc, #132]	; (80071e8 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8007164:	4293      	cmp	r3, r2
 8007166:	d022      	beq.n	80071ae <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007168:	687b      	ldr	r3, [r7, #4]
 800716a:	681b      	ldr	r3, [r3, #0]
 800716c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007170:	d01d      	beq.n	80071ae <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007172:	687b      	ldr	r3, [r7, #4]
 8007174:	681b      	ldr	r3, [r3, #0]
 8007176:	4a1d      	ldr	r2, [pc, #116]	; (80071ec <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8007178:	4293      	cmp	r3, r2
 800717a:	d018      	beq.n	80071ae <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800717c:	687b      	ldr	r3, [r7, #4]
 800717e:	681b      	ldr	r3, [r3, #0]
 8007180:	4a1b      	ldr	r2, [pc, #108]	; (80071f0 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8007182:	4293      	cmp	r3, r2
 8007184:	d013      	beq.n	80071ae <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007186:	687b      	ldr	r3, [r7, #4]
 8007188:	681b      	ldr	r3, [r3, #0]
 800718a:	4a1a      	ldr	r2, [pc, #104]	; (80071f4 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 800718c:	4293      	cmp	r3, r2
 800718e:	d00e      	beq.n	80071ae <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007190:	687b      	ldr	r3, [r7, #4]
 8007192:	681b      	ldr	r3, [r3, #0]
 8007194:	4a18      	ldr	r2, [pc, #96]	; (80071f8 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8007196:	4293      	cmp	r3, r2
 8007198:	d009      	beq.n	80071ae <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800719a:	687b      	ldr	r3, [r7, #4]
 800719c:	681b      	ldr	r3, [r3, #0]
 800719e:	4a17      	ldr	r2, [pc, #92]	; (80071fc <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 80071a0:	4293      	cmp	r3, r2
 80071a2:	d004      	beq.n	80071ae <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80071a4:	687b      	ldr	r3, [r7, #4]
 80071a6:	681b      	ldr	r3, [r3, #0]
 80071a8:	4a15      	ldr	r2, [pc, #84]	; (8007200 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 80071aa:	4293      	cmp	r3, r2
 80071ac:	d10c      	bne.n	80071c8 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 80071ae:	68bb      	ldr	r3, [r7, #8]
 80071b0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80071b4:	60bb      	str	r3, [r7, #8]
 80071b6:	683b      	ldr	r3, [r7, #0]
 80071b8:	685b      	ldr	r3, [r3, #4]
 80071ba:	68ba      	ldr	r2, [r7, #8]
 80071bc:	4313      	orrs	r3, r2
 80071be:	60bb      	str	r3, [r7, #8]
 80071c0:	687b      	ldr	r3, [r7, #4]
 80071c2:	681b      	ldr	r3, [r3, #0]
 80071c4:	68ba      	ldr	r2, [r7, #8]
 80071c6:	609a      	str	r2, [r3, #8]
 80071c8:	687b      	ldr	r3, [r7, #4]
 80071ca:	2201      	movs	r2, #1
 80071cc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80071d0:	687b      	ldr	r3, [r7, #4]
 80071d2:	2200      	movs	r2, #0
 80071d4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80071d8:	2300      	movs	r3, #0
 80071da:	4618      	mov	r0, r3
 80071dc:	3714      	adds	r7, #20
 80071de:	46bd      	mov	sp, r7
 80071e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071e4:	4770      	bx	lr
 80071e6:	bf00      	nop
 80071e8:	40010000 	.word	0x40010000
 80071ec:	40000400 	.word	0x40000400
 80071f0:	40000800 	.word	0x40000800
 80071f4:	40000c00 	.word	0x40000c00
 80071f8:	40010400 	.word	0x40010400
 80071fc:	40014000 	.word	0x40014000
 8007200:	40001800 	.word	0x40001800

08007204 <HAL_UART_Init>:
 8007204:	b580      	push	{r7, lr}
 8007206:	b082      	sub	sp, #8
 8007208:	af00      	add	r7, sp, #0
 800720a:	6078      	str	r0, [r7, #4]
 800720c:	687b      	ldr	r3, [r7, #4]
 800720e:	2b00      	cmp	r3, #0
 8007210:	d101      	bne.n	8007216 <HAL_UART_Init+0x12>
 8007212:	2301      	movs	r3, #1
 8007214:	e03f      	b.n	8007296 <HAL_UART_Init+0x92>
 8007216:	687b      	ldr	r3, [r7, #4]
 8007218:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800721c:	b2db      	uxtb	r3, r3
 800721e:	2b00      	cmp	r3, #0
 8007220:	d106      	bne.n	8007230 <HAL_UART_Init+0x2c>
 8007222:	687b      	ldr	r3, [r7, #4]
 8007224:	2200      	movs	r2, #0
 8007226:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800722a:	6878      	ldr	r0, [r7, #4]
 800722c:	f7fc f812 	bl	8003254 <HAL_UART_MspInit>
 8007230:	687b      	ldr	r3, [r7, #4]
 8007232:	2224      	movs	r2, #36	; 0x24
 8007234:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007238:	687b      	ldr	r3, [r7, #4]
 800723a:	681b      	ldr	r3, [r3, #0]
 800723c:	68da      	ldr	r2, [r3, #12]
 800723e:	687b      	ldr	r3, [r7, #4]
 8007240:	681b      	ldr	r3, [r3, #0]
 8007242:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8007246:	60da      	str	r2, [r3, #12]
 8007248:	6878      	ldr	r0, [r7, #4]
 800724a:	f000 ff49 	bl	80080e0 <UART_SetConfig>
 800724e:	687b      	ldr	r3, [r7, #4]
 8007250:	681b      	ldr	r3, [r3, #0]
 8007252:	691a      	ldr	r2, [r3, #16]
 8007254:	687b      	ldr	r3, [r7, #4]
 8007256:	681b      	ldr	r3, [r3, #0]
 8007258:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800725c:	611a      	str	r2, [r3, #16]
 800725e:	687b      	ldr	r3, [r7, #4]
 8007260:	681b      	ldr	r3, [r3, #0]
 8007262:	695a      	ldr	r2, [r3, #20]
 8007264:	687b      	ldr	r3, [r7, #4]
 8007266:	681b      	ldr	r3, [r3, #0]
 8007268:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800726c:	615a      	str	r2, [r3, #20]
 800726e:	687b      	ldr	r3, [r7, #4]
 8007270:	681b      	ldr	r3, [r3, #0]
 8007272:	68da      	ldr	r2, [r3, #12]
 8007274:	687b      	ldr	r3, [r7, #4]
 8007276:	681b      	ldr	r3, [r3, #0]
 8007278:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800727c:	60da      	str	r2, [r3, #12]
 800727e:	687b      	ldr	r3, [r7, #4]
 8007280:	2200      	movs	r2, #0
 8007282:	641a      	str	r2, [r3, #64]	; 0x40
 8007284:	687b      	ldr	r3, [r7, #4]
 8007286:	2220      	movs	r2, #32
 8007288:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800728c:	687b      	ldr	r3, [r7, #4]
 800728e:	2220      	movs	r2, #32
 8007290:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007294:	2300      	movs	r3, #0
 8007296:	4618      	mov	r0, r3
 8007298:	3708      	adds	r7, #8
 800729a:	46bd      	mov	sp, r7
 800729c:	bd80      	pop	{r7, pc}
	...

080072a0 <HAL_UART_Transmit_DMA>:
 80072a0:	b580      	push	{r7, lr}
 80072a2:	b08c      	sub	sp, #48	; 0x30
 80072a4:	af00      	add	r7, sp, #0
 80072a6:	60f8      	str	r0, [r7, #12]
 80072a8:	60b9      	str	r1, [r7, #8]
 80072aa:	4613      	mov	r3, r2
 80072ac:	80fb      	strh	r3, [r7, #6]
 80072ae:	68fb      	ldr	r3, [r7, #12]
 80072b0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80072b4:	b2db      	uxtb	r3, r3
 80072b6:	2b20      	cmp	r3, #32
 80072b8:	d165      	bne.n	8007386 <HAL_UART_Transmit_DMA+0xe6>
 80072ba:	68bb      	ldr	r3, [r7, #8]
 80072bc:	2b00      	cmp	r3, #0
 80072be:	d002      	beq.n	80072c6 <HAL_UART_Transmit_DMA+0x26>
 80072c0:	88fb      	ldrh	r3, [r7, #6]
 80072c2:	2b00      	cmp	r3, #0
 80072c4:	d101      	bne.n	80072ca <HAL_UART_Transmit_DMA+0x2a>
 80072c6:	2301      	movs	r3, #1
 80072c8:	e05e      	b.n	8007388 <HAL_UART_Transmit_DMA+0xe8>
 80072ca:	68fb      	ldr	r3, [r7, #12]
 80072cc:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80072d0:	2b01      	cmp	r3, #1
 80072d2:	d101      	bne.n	80072d8 <HAL_UART_Transmit_DMA+0x38>
 80072d4:	2302      	movs	r3, #2
 80072d6:	e057      	b.n	8007388 <HAL_UART_Transmit_DMA+0xe8>
 80072d8:	68fb      	ldr	r3, [r7, #12]
 80072da:	2201      	movs	r2, #1
 80072dc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80072e0:	68ba      	ldr	r2, [r7, #8]
 80072e2:	68fb      	ldr	r3, [r7, #12]
 80072e4:	621a      	str	r2, [r3, #32]
 80072e6:	68fb      	ldr	r3, [r7, #12]
 80072e8:	88fa      	ldrh	r2, [r7, #6]
 80072ea:	849a      	strh	r2, [r3, #36]	; 0x24
 80072ec:	68fb      	ldr	r3, [r7, #12]
 80072ee:	88fa      	ldrh	r2, [r7, #6]
 80072f0:	84da      	strh	r2, [r3, #38]	; 0x26
 80072f2:	68fb      	ldr	r3, [r7, #12]
 80072f4:	2200      	movs	r2, #0
 80072f6:	641a      	str	r2, [r3, #64]	; 0x40
 80072f8:	68fb      	ldr	r3, [r7, #12]
 80072fa:	2221      	movs	r2, #33	; 0x21
 80072fc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007300:	68fb      	ldr	r3, [r7, #12]
 8007302:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007304:	4a22      	ldr	r2, [pc, #136]	; (8007390 <HAL_UART_Transmit_DMA+0xf0>)
 8007306:	63da      	str	r2, [r3, #60]	; 0x3c
 8007308:	68fb      	ldr	r3, [r7, #12]
 800730a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800730c:	4a21      	ldr	r2, [pc, #132]	; (8007394 <HAL_UART_Transmit_DMA+0xf4>)
 800730e:	641a      	str	r2, [r3, #64]	; 0x40
 8007310:	68fb      	ldr	r3, [r7, #12]
 8007312:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007314:	4a20      	ldr	r2, [pc, #128]	; (8007398 <HAL_UART_Transmit_DMA+0xf8>)
 8007316:	64da      	str	r2, [r3, #76]	; 0x4c
 8007318:	68fb      	ldr	r3, [r7, #12]
 800731a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800731c:	2200      	movs	r2, #0
 800731e:	651a      	str	r2, [r3, #80]	; 0x50
 8007320:	f107 0308 	add.w	r3, r7, #8
 8007324:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007326:	68fb      	ldr	r3, [r7, #12]
 8007328:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800732a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800732c:	6819      	ldr	r1, [r3, #0]
 800732e:	68fb      	ldr	r3, [r7, #12]
 8007330:	681b      	ldr	r3, [r3, #0]
 8007332:	3304      	adds	r3, #4
 8007334:	461a      	mov	r2, r3
 8007336:	88fb      	ldrh	r3, [r7, #6]
 8007338:	f7fc fc82 	bl	8003c40 <HAL_DMA_Start_IT>
 800733c:	68fb      	ldr	r3, [r7, #12]
 800733e:	681b      	ldr	r3, [r3, #0]
 8007340:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8007344:	601a      	str	r2, [r3, #0]
 8007346:	68fb      	ldr	r3, [r7, #12]
 8007348:	2200      	movs	r2, #0
 800734a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800734e:	68fb      	ldr	r3, [r7, #12]
 8007350:	681b      	ldr	r3, [r3, #0]
 8007352:	3314      	adds	r3, #20
 8007354:	61bb      	str	r3, [r7, #24]
 8007356:	69bb      	ldr	r3, [r7, #24]
 8007358:	e853 3f00 	ldrex	r3, [r3]
 800735c:	617b      	str	r3, [r7, #20]
 800735e:	697b      	ldr	r3, [r7, #20]
 8007360:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8007364:	62bb      	str	r3, [r7, #40]	; 0x28
 8007366:	68fb      	ldr	r3, [r7, #12]
 8007368:	681b      	ldr	r3, [r3, #0]
 800736a:	3314      	adds	r3, #20
 800736c:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800736e:	627a      	str	r2, [r7, #36]	; 0x24
 8007370:	623b      	str	r3, [r7, #32]
 8007372:	6a39      	ldr	r1, [r7, #32]
 8007374:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8007376:	e841 2300 	strex	r3, r2, [r1]
 800737a:	61fb      	str	r3, [r7, #28]
 800737c:	69fb      	ldr	r3, [r7, #28]
 800737e:	2b00      	cmp	r3, #0
 8007380:	d1e5      	bne.n	800734e <HAL_UART_Transmit_DMA+0xae>
 8007382:	2300      	movs	r3, #0
 8007384:	e000      	b.n	8007388 <HAL_UART_Transmit_DMA+0xe8>
 8007386:	2302      	movs	r3, #2
 8007388:	4618      	mov	r0, r3
 800738a:	3730      	adds	r7, #48	; 0x30
 800738c:	46bd      	mov	sp, r7
 800738e:	bd80      	pop	{r7, pc}
 8007390:	08007981 	.word	0x08007981
 8007394:	08007a1b 	.word	0x08007a1b
 8007398:	08007b93 	.word	0x08007b93

0800739c <HAL_UART_Receive_DMA>:
 800739c:	b580      	push	{r7, lr}
 800739e:	b084      	sub	sp, #16
 80073a0:	af00      	add	r7, sp, #0
 80073a2:	60f8      	str	r0, [r7, #12]
 80073a4:	60b9      	str	r1, [r7, #8]
 80073a6:	4613      	mov	r3, r2
 80073a8:	80fb      	strh	r3, [r7, #6]
 80073aa:	68fb      	ldr	r3, [r7, #12]
 80073ac:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80073b0:	b2db      	uxtb	r3, r3
 80073b2:	2b20      	cmp	r3, #32
 80073b4:	d11d      	bne.n	80073f2 <HAL_UART_Receive_DMA+0x56>
 80073b6:	68bb      	ldr	r3, [r7, #8]
 80073b8:	2b00      	cmp	r3, #0
 80073ba:	d002      	beq.n	80073c2 <HAL_UART_Receive_DMA+0x26>
 80073bc:	88fb      	ldrh	r3, [r7, #6]
 80073be:	2b00      	cmp	r3, #0
 80073c0:	d101      	bne.n	80073c6 <HAL_UART_Receive_DMA+0x2a>
 80073c2:	2301      	movs	r3, #1
 80073c4:	e016      	b.n	80073f4 <HAL_UART_Receive_DMA+0x58>
 80073c6:	68fb      	ldr	r3, [r7, #12]
 80073c8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80073cc:	2b01      	cmp	r3, #1
 80073ce:	d101      	bne.n	80073d4 <HAL_UART_Receive_DMA+0x38>
 80073d0:	2302      	movs	r3, #2
 80073d2:	e00f      	b.n	80073f4 <HAL_UART_Receive_DMA+0x58>
 80073d4:	68fb      	ldr	r3, [r7, #12]
 80073d6:	2201      	movs	r2, #1
 80073d8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80073dc:	68fb      	ldr	r3, [r7, #12]
 80073de:	2200      	movs	r2, #0
 80073e0:	631a      	str	r2, [r3, #48]	; 0x30
 80073e2:	88fb      	ldrh	r3, [r7, #6]
 80073e4:	461a      	mov	r2, r3
 80073e6:	68b9      	ldr	r1, [r7, #8]
 80073e8:	68f8      	ldr	r0, [r7, #12]
 80073ea:	f000 fc1d 	bl	8007c28 <UART_Start_Receive_DMA>
 80073ee:	4603      	mov	r3, r0
 80073f0:	e000      	b.n	80073f4 <HAL_UART_Receive_DMA+0x58>
 80073f2:	2302      	movs	r3, #2
 80073f4:	4618      	mov	r0, r3
 80073f6:	3710      	adds	r7, #16
 80073f8:	46bd      	mov	sp, r7
 80073fa:	bd80      	pop	{r7, pc}

080073fc <HAL_UART_IRQHandler>:
 80073fc:	b580      	push	{r7, lr}
 80073fe:	b0ba      	sub	sp, #232	; 0xe8
 8007400:	af00      	add	r7, sp, #0
 8007402:	6078      	str	r0, [r7, #4]
 8007404:	687b      	ldr	r3, [r7, #4]
 8007406:	681b      	ldr	r3, [r3, #0]
 8007408:	681b      	ldr	r3, [r3, #0]
 800740a:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800740e:	687b      	ldr	r3, [r7, #4]
 8007410:	681b      	ldr	r3, [r3, #0]
 8007412:	68db      	ldr	r3, [r3, #12]
 8007414:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 8007418:	687b      	ldr	r3, [r7, #4]
 800741a:	681b      	ldr	r3, [r3, #0]
 800741c:	695b      	ldr	r3, [r3, #20]
 800741e:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 8007422:	2300      	movs	r3, #0
 8007424:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8007428:	2300      	movs	r3, #0
 800742a:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800742e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8007432:	f003 030f 	and.w	r3, r3, #15
 8007436:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800743a:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800743e:	2b00      	cmp	r3, #0
 8007440:	d10f      	bne.n	8007462 <HAL_UART_IRQHandler+0x66>
 8007442:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8007446:	f003 0320 	and.w	r3, r3, #32
 800744a:	2b00      	cmp	r3, #0
 800744c:	d009      	beq.n	8007462 <HAL_UART_IRQHandler+0x66>
 800744e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8007452:	f003 0320 	and.w	r3, r3, #32
 8007456:	2b00      	cmp	r3, #0
 8007458:	d003      	beq.n	8007462 <HAL_UART_IRQHandler+0x66>
 800745a:	6878      	ldr	r0, [r7, #4]
 800745c:	f000 fd85 	bl	8007f6a <UART_Receive_IT>
 8007460:	e256      	b.n	8007910 <HAL_UART_IRQHandler+0x514>
 8007462:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 8007466:	2b00      	cmp	r3, #0
 8007468:	f000 80de 	beq.w	8007628 <HAL_UART_IRQHandler+0x22c>
 800746c:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8007470:	f003 0301 	and.w	r3, r3, #1
 8007474:	2b00      	cmp	r3, #0
 8007476:	d106      	bne.n	8007486 <HAL_UART_IRQHandler+0x8a>
 8007478:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800747c:	f403 7390 	and.w	r3, r3, #288	; 0x120
 8007480:	2b00      	cmp	r3, #0
 8007482:	f000 80d1 	beq.w	8007628 <HAL_UART_IRQHandler+0x22c>
 8007486:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800748a:	f003 0301 	and.w	r3, r3, #1
 800748e:	2b00      	cmp	r3, #0
 8007490:	d00b      	beq.n	80074aa <HAL_UART_IRQHandler+0xae>
 8007492:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8007496:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800749a:	2b00      	cmp	r3, #0
 800749c:	d005      	beq.n	80074aa <HAL_UART_IRQHandler+0xae>
 800749e:	687b      	ldr	r3, [r7, #4]
 80074a0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80074a2:	f043 0201 	orr.w	r2, r3, #1
 80074a6:	687b      	ldr	r3, [r7, #4]
 80074a8:	641a      	str	r2, [r3, #64]	; 0x40
 80074aa:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80074ae:	f003 0304 	and.w	r3, r3, #4
 80074b2:	2b00      	cmp	r3, #0
 80074b4:	d00b      	beq.n	80074ce <HAL_UART_IRQHandler+0xd2>
 80074b6:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 80074ba:	f003 0301 	and.w	r3, r3, #1
 80074be:	2b00      	cmp	r3, #0
 80074c0:	d005      	beq.n	80074ce <HAL_UART_IRQHandler+0xd2>
 80074c2:	687b      	ldr	r3, [r7, #4]
 80074c4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80074c6:	f043 0202 	orr.w	r2, r3, #2
 80074ca:	687b      	ldr	r3, [r7, #4]
 80074cc:	641a      	str	r2, [r3, #64]	; 0x40
 80074ce:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80074d2:	f003 0302 	and.w	r3, r3, #2
 80074d6:	2b00      	cmp	r3, #0
 80074d8:	d00b      	beq.n	80074f2 <HAL_UART_IRQHandler+0xf6>
 80074da:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 80074de:	f003 0301 	and.w	r3, r3, #1
 80074e2:	2b00      	cmp	r3, #0
 80074e4:	d005      	beq.n	80074f2 <HAL_UART_IRQHandler+0xf6>
 80074e6:	687b      	ldr	r3, [r7, #4]
 80074e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80074ea:	f043 0204 	orr.w	r2, r3, #4
 80074ee:	687b      	ldr	r3, [r7, #4]
 80074f0:	641a      	str	r2, [r3, #64]	; 0x40
 80074f2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80074f6:	f003 0308 	and.w	r3, r3, #8
 80074fa:	2b00      	cmp	r3, #0
 80074fc:	d011      	beq.n	8007522 <HAL_UART_IRQHandler+0x126>
 80074fe:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8007502:	f003 0320 	and.w	r3, r3, #32
 8007506:	2b00      	cmp	r3, #0
 8007508:	d105      	bne.n	8007516 <HAL_UART_IRQHandler+0x11a>
 800750a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800750e:	f003 0301 	and.w	r3, r3, #1
 8007512:	2b00      	cmp	r3, #0
 8007514:	d005      	beq.n	8007522 <HAL_UART_IRQHandler+0x126>
 8007516:	687b      	ldr	r3, [r7, #4]
 8007518:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800751a:	f043 0208 	orr.w	r2, r3, #8
 800751e:	687b      	ldr	r3, [r7, #4]
 8007520:	641a      	str	r2, [r3, #64]	; 0x40
 8007522:	687b      	ldr	r3, [r7, #4]
 8007524:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007526:	2b00      	cmp	r3, #0
 8007528:	f000 81ed 	beq.w	8007906 <HAL_UART_IRQHandler+0x50a>
 800752c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8007530:	f003 0320 	and.w	r3, r3, #32
 8007534:	2b00      	cmp	r3, #0
 8007536:	d008      	beq.n	800754a <HAL_UART_IRQHandler+0x14e>
 8007538:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800753c:	f003 0320 	and.w	r3, r3, #32
 8007540:	2b00      	cmp	r3, #0
 8007542:	d002      	beq.n	800754a <HAL_UART_IRQHandler+0x14e>
 8007544:	6878      	ldr	r0, [r7, #4]
 8007546:	f000 fd10 	bl	8007f6a <UART_Receive_IT>
 800754a:	687b      	ldr	r3, [r7, #4]
 800754c:	681b      	ldr	r3, [r3, #0]
 800754e:	695b      	ldr	r3, [r3, #20]
 8007550:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007554:	2b40      	cmp	r3, #64	; 0x40
 8007556:	bf0c      	ite	eq
 8007558:	2301      	moveq	r3, #1
 800755a:	2300      	movne	r3, #0
 800755c:	b2db      	uxtb	r3, r3
 800755e:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 8007562:	687b      	ldr	r3, [r7, #4]
 8007564:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007566:	f003 0308 	and.w	r3, r3, #8
 800756a:	2b00      	cmp	r3, #0
 800756c:	d103      	bne.n	8007576 <HAL_UART_IRQHandler+0x17a>
 800756e:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 8007572:	2b00      	cmp	r3, #0
 8007574:	d04f      	beq.n	8007616 <HAL_UART_IRQHandler+0x21a>
 8007576:	6878      	ldr	r0, [r7, #4]
 8007578:	f000 fc18 	bl	8007dac <UART_EndRxTransfer>
 800757c:	687b      	ldr	r3, [r7, #4]
 800757e:	681b      	ldr	r3, [r3, #0]
 8007580:	695b      	ldr	r3, [r3, #20]
 8007582:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007586:	2b40      	cmp	r3, #64	; 0x40
 8007588:	d141      	bne.n	800760e <HAL_UART_IRQHandler+0x212>
 800758a:	687b      	ldr	r3, [r7, #4]
 800758c:	681b      	ldr	r3, [r3, #0]
 800758e:	3314      	adds	r3, #20
 8007590:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8007594:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 8007598:	e853 3f00 	ldrex	r3, [r3]
 800759c:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 80075a0:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 80075a4:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80075a8:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 80075ac:	687b      	ldr	r3, [r7, #4]
 80075ae:	681b      	ldr	r3, [r3, #0]
 80075b0:	3314      	adds	r3, #20
 80075b2:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 80075b6:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 80075ba:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 80075be:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 80075c2:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 80075c6:	e841 2300 	strex	r3, r2, [r1]
 80075ca:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 80075ce:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 80075d2:	2b00      	cmp	r3, #0
 80075d4:	d1d9      	bne.n	800758a <HAL_UART_IRQHandler+0x18e>
 80075d6:	687b      	ldr	r3, [r7, #4]
 80075d8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80075da:	2b00      	cmp	r3, #0
 80075dc:	d013      	beq.n	8007606 <HAL_UART_IRQHandler+0x20a>
 80075de:	687b      	ldr	r3, [r7, #4]
 80075e0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80075e2:	4a7d      	ldr	r2, [pc, #500]	; (80077d8 <HAL_UART_IRQHandler+0x3dc>)
 80075e4:	651a      	str	r2, [r3, #80]	; 0x50
 80075e6:	687b      	ldr	r3, [r7, #4]
 80075e8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80075ea:	4618      	mov	r0, r3
 80075ec:	f7fc fbf0 	bl	8003dd0 <HAL_DMA_Abort_IT>
 80075f0:	4603      	mov	r3, r0
 80075f2:	2b00      	cmp	r3, #0
 80075f4:	d016      	beq.n	8007624 <HAL_UART_IRQHandler+0x228>
 80075f6:	687b      	ldr	r3, [r7, #4]
 80075f8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80075fa:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80075fc:	687a      	ldr	r2, [r7, #4]
 80075fe:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8007600:	4610      	mov	r0, r2
 8007602:	4798      	blx	r3
 8007604:	e00e      	b.n	8007624 <HAL_UART_IRQHandler+0x228>
 8007606:	6878      	ldr	r0, [r7, #4]
 8007608:	f000 f9a4 	bl	8007954 <HAL_UART_ErrorCallback>
 800760c:	e00a      	b.n	8007624 <HAL_UART_IRQHandler+0x228>
 800760e:	6878      	ldr	r0, [r7, #4]
 8007610:	f000 f9a0 	bl	8007954 <HAL_UART_ErrorCallback>
 8007614:	e006      	b.n	8007624 <HAL_UART_IRQHandler+0x228>
 8007616:	6878      	ldr	r0, [r7, #4]
 8007618:	f000 f99c 	bl	8007954 <HAL_UART_ErrorCallback>
 800761c:	687b      	ldr	r3, [r7, #4]
 800761e:	2200      	movs	r2, #0
 8007620:	641a      	str	r2, [r3, #64]	; 0x40
 8007622:	e170      	b.n	8007906 <HAL_UART_IRQHandler+0x50a>
 8007624:	bf00      	nop
 8007626:	e16e      	b.n	8007906 <HAL_UART_IRQHandler+0x50a>
 8007628:	687b      	ldr	r3, [r7, #4]
 800762a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800762c:	2b01      	cmp	r3, #1
 800762e:	f040 814a 	bne.w	80078c6 <HAL_UART_IRQHandler+0x4ca>
 8007632:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8007636:	f003 0310 	and.w	r3, r3, #16
 800763a:	2b00      	cmp	r3, #0
 800763c:	f000 8143 	beq.w	80078c6 <HAL_UART_IRQHandler+0x4ca>
 8007640:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8007644:	f003 0310 	and.w	r3, r3, #16
 8007648:	2b00      	cmp	r3, #0
 800764a:	f000 813c 	beq.w	80078c6 <HAL_UART_IRQHandler+0x4ca>
 800764e:	2300      	movs	r3, #0
 8007650:	60bb      	str	r3, [r7, #8]
 8007652:	687b      	ldr	r3, [r7, #4]
 8007654:	681b      	ldr	r3, [r3, #0]
 8007656:	681b      	ldr	r3, [r3, #0]
 8007658:	60bb      	str	r3, [r7, #8]
 800765a:	687b      	ldr	r3, [r7, #4]
 800765c:	681b      	ldr	r3, [r3, #0]
 800765e:	685b      	ldr	r3, [r3, #4]
 8007660:	60bb      	str	r3, [r7, #8]
 8007662:	68bb      	ldr	r3, [r7, #8]
 8007664:	687b      	ldr	r3, [r7, #4]
 8007666:	681b      	ldr	r3, [r3, #0]
 8007668:	695b      	ldr	r3, [r3, #20]
 800766a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800766e:	2b40      	cmp	r3, #64	; 0x40
 8007670:	f040 80b4 	bne.w	80077dc <HAL_UART_IRQHandler+0x3e0>
 8007674:	687b      	ldr	r3, [r7, #4]
 8007676:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007678:	681b      	ldr	r3, [r3, #0]
 800767a:	685b      	ldr	r3, [r3, #4]
 800767c:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 8007680:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 8007684:	2b00      	cmp	r3, #0
 8007686:	f000 8140 	beq.w	800790a <HAL_UART_IRQHandler+0x50e>
 800768a:	687b      	ldr	r3, [r7, #4]
 800768c:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800768e:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 8007692:	429a      	cmp	r2, r3
 8007694:	f080 8139 	bcs.w	800790a <HAL_UART_IRQHandler+0x50e>
 8007698:	687b      	ldr	r3, [r7, #4]
 800769a:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800769e:	85da      	strh	r2, [r3, #46]	; 0x2e
 80076a0:	687b      	ldr	r3, [r7, #4]
 80076a2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80076a4:	69db      	ldr	r3, [r3, #28]
 80076a6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80076aa:	f000 8088 	beq.w	80077be <HAL_UART_IRQHandler+0x3c2>
 80076ae:	687b      	ldr	r3, [r7, #4]
 80076b0:	681b      	ldr	r3, [r3, #0]
 80076b2:	330c      	adds	r3, #12
 80076b4:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 80076b8:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 80076bc:	e853 3f00 	ldrex	r3, [r3]
 80076c0:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 80076c4:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 80076c8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80076cc:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 80076d0:	687b      	ldr	r3, [r7, #4]
 80076d2:	681b      	ldr	r3, [r3, #0]
 80076d4:	330c      	adds	r3, #12
 80076d6:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
 80076da:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 80076de:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 80076e2:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 80076e6:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 80076ea:	e841 2300 	strex	r3, r2, [r1]
 80076ee:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 80076f2:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 80076f6:	2b00      	cmp	r3, #0
 80076f8:	d1d9      	bne.n	80076ae <HAL_UART_IRQHandler+0x2b2>
 80076fa:	687b      	ldr	r3, [r7, #4]
 80076fc:	681b      	ldr	r3, [r3, #0]
 80076fe:	3314      	adds	r3, #20
 8007700:	677b      	str	r3, [r7, #116]	; 0x74
 8007702:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8007704:	e853 3f00 	ldrex	r3, [r3]
 8007708:	673b      	str	r3, [r7, #112]	; 0x70
 800770a:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800770c:	f023 0301 	bic.w	r3, r3, #1
 8007710:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8007714:	687b      	ldr	r3, [r7, #4]
 8007716:	681b      	ldr	r3, [r3, #0]
 8007718:	3314      	adds	r3, #20
 800771a:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 800771e:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 8007722:	67fb      	str	r3, [r7, #124]	; 0x7c
 8007724:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 8007726:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 800772a:	e841 2300 	strex	r3, r2, [r1]
 800772e:	67bb      	str	r3, [r7, #120]	; 0x78
 8007730:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8007732:	2b00      	cmp	r3, #0
 8007734:	d1e1      	bne.n	80076fa <HAL_UART_IRQHandler+0x2fe>
 8007736:	687b      	ldr	r3, [r7, #4]
 8007738:	681b      	ldr	r3, [r3, #0]
 800773a:	3314      	adds	r3, #20
 800773c:	663b      	str	r3, [r7, #96]	; 0x60
 800773e:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8007740:	e853 3f00 	ldrex	r3, [r3]
 8007744:	65fb      	str	r3, [r7, #92]	; 0x5c
 8007746:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8007748:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800774c:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8007750:	687b      	ldr	r3, [r7, #4]
 8007752:	681b      	ldr	r3, [r3, #0]
 8007754:	3314      	adds	r3, #20
 8007756:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 800775a:	66fa      	str	r2, [r7, #108]	; 0x6c
 800775c:	66bb      	str	r3, [r7, #104]	; 0x68
 800775e:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 8007760:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8007762:	e841 2300 	strex	r3, r2, [r1]
 8007766:	667b      	str	r3, [r7, #100]	; 0x64
 8007768:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800776a:	2b00      	cmp	r3, #0
 800776c:	d1e3      	bne.n	8007736 <HAL_UART_IRQHandler+0x33a>
 800776e:	687b      	ldr	r3, [r7, #4]
 8007770:	2220      	movs	r2, #32
 8007772:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007776:	687b      	ldr	r3, [r7, #4]
 8007778:	2200      	movs	r2, #0
 800777a:	631a      	str	r2, [r3, #48]	; 0x30
 800777c:	687b      	ldr	r3, [r7, #4]
 800777e:	681b      	ldr	r3, [r3, #0]
 8007780:	330c      	adds	r3, #12
 8007782:	64fb      	str	r3, [r7, #76]	; 0x4c
 8007784:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8007786:	e853 3f00 	ldrex	r3, [r3]
 800778a:	64bb      	str	r3, [r7, #72]	; 0x48
 800778c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800778e:	f023 0310 	bic.w	r3, r3, #16
 8007792:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8007796:	687b      	ldr	r3, [r7, #4]
 8007798:	681b      	ldr	r3, [r3, #0]
 800779a:	330c      	adds	r3, #12
 800779c:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 80077a0:	65ba      	str	r2, [r7, #88]	; 0x58
 80077a2:	657b      	str	r3, [r7, #84]	; 0x54
 80077a4:	6d79      	ldr	r1, [r7, #84]	; 0x54
 80077a6:	6dba      	ldr	r2, [r7, #88]	; 0x58
 80077a8:	e841 2300 	strex	r3, r2, [r1]
 80077ac:	653b      	str	r3, [r7, #80]	; 0x50
 80077ae:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80077b0:	2b00      	cmp	r3, #0
 80077b2:	d1e3      	bne.n	800777c <HAL_UART_IRQHandler+0x380>
 80077b4:	687b      	ldr	r3, [r7, #4]
 80077b6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80077b8:	4618      	mov	r0, r3
 80077ba:	f7fc fa99 	bl	8003cf0 <HAL_DMA_Abort>
 80077be:	687b      	ldr	r3, [r7, #4]
 80077c0:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 80077c2:	687b      	ldr	r3, [r7, #4]
 80077c4:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80077c6:	b29b      	uxth	r3, r3
 80077c8:	1ad3      	subs	r3, r2, r3
 80077ca:	b29b      	uxth	r3, r3
 80077cc:	4619      	mov	r1, r3
 80077ce:	6878      	ldr	r0, [r7, #4]
 80077d0:	f000 f8ca 	bl	8007968 <HAL_UARTEx_RxEventCallback>
 80077d4:	e099      	b.n	800790a <HAL_UART_IRQHandler+0x50e>
 80077d6:	bf00      	nop
 80077d8:	08007e73 	.word	0x08007e73
 80077dc:	687b      	ldr	r3, [r7, #4]
 80077de:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 80077e0:	687b      	ldr	r3, [r7, #4]
 80077e2:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80077e4:	b29b      	uxth	r3, r3
 80077e6:	1ad3      	subs	r3, r2, r3
 80077e8:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 80077ec:	687b      	ldr	r3, [r7, #4]
 80077ee:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80077f0:	b29b      	uxth	r3, r3
 80077f2:	2b00      	cmp	r3, #0
 80077f4:	f000 808b 	beq.w	800790e <HAL_UART_IRQHandler+0x512>
 80077f8:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 80077fc:	2b00      	cmp	r3, #0
 80077fe:	f000 8086 	beq.w	800790e <HAL_UART_IRQHandler+0x512>
 8007802:	687b      	ldr	r3, [r7, #4]
 8007804:	681b      	ldr	r3, [r3, #0]
 8007806:	330c      	adds	r3, #12
 8007808:	63bb      	str	r3, [r7, #56]	; 0x38
 800780a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800780c:	e853 3f00 	ldrex	r3, [r3]
 8007810:	637b      	str	r3, [r7, #52]	; 0x34
 8007812:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8007814:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8007818:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 800781c:	687b      	ldr	r3, [r7, #4]
 800781e:	681b      	ldr	r3, [r3, #0]
 8007820:	330c      	adds	r3, #12
 8007822:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 8007826:	647a      	str	r2, [r7, #68]	; 0x44
 8007828:	643b      	str	r3, [r7, #64]	; 0x40
 800782a:	6c39      	ldr	r1, [r7, #64]	; 0x40
 800782c:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800782e:	e841 2300 	strex	r3, r2, [r1]
 8007832:	63fb      	str	r3, [r7, #60]	; 0x3c
 8007834:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8007836:	2b00      	cmp	r3, #0
 8007838:	d1e3      	bne.n	8007802 <HAL_UART_IRQHandler+0x406>
 800783a:	687b      	ldr	r3, [r7, #4]
 800783c:	681b      	ldr	r3, [r3, #0]
 800783e:	3314      	adds	r3, #20
 8007840:	627b      	str	r3, [r7, #36]	; 0x24
 8007842:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007844:	e853 3f00 	ldrex	r3, [r3]
 8007848:	623b      	str	r3, [r7, #32]
 800784a:	6a3b      	ldr	r3, [r7, #32]
 800784c:	f023 0301 	bic.w	r3, r3, #1
 8007850:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 8007854:	687b      	ldr	r3, [r7, #4]
 8007856:	681b      	ldr	r3, [r3, #0]
 8007858:	3314      	adds	r3, #20
 800785a:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 800785e:	633a      	str	r2, [r7, #48]	; 0x30
 8007860:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007862:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8007864:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8007866:	e841 2300 	strex	r3, r2, [r1]
 800786a:	62bb      	str	r3, [r7, #40]	; 0x28
 800786c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800786e:	2b00      	cmp	r3, #0
 8007870:	d1e3      	bne.n	800783a <HAL_UART_IRQHandler+0x43e>
 8007872:	687b      	ldr	r3, [r7, #4]
 8007874:	2220      	movs	r2, #32
 8007876:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800787a:	687b      	ldr	r3, [r7, #4]
 800787c:	2200      	movs	r2, #0
 800787e:	631a      	str	r2, [r3, #48]	; 0x30
 8007880:	687b      	ldr	r3, [r7, #4]
 8007882:	681b      	ldr	r3, [r3, #0]
 8007884:	330c      	adds	r3, #12
 8007886:	613b      	str	r3, [r7, #16]
 8007888:	693b      	ldr	r3, [r7, #16]
 800788a:	e853 3f00 	ldrex	r3, [r3]
 800788e:	60fb      	str	r3, [r7, #12]
 8007890:	68fb      	ldr	r3, [r7, #12]
 8007892:	f023 0310 	bic.w	r3, r3, #16
 8007896:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800789a:	687b      	ldr	r3, [r7, #4]
 800789c:	681b      	ldr	r3, [r3, #0]
 800789e:	330c      	adds	r3, #12
 80078a0:	f8d7 20c0 	ldr.w	r2, [r7, #192]	; 0xc0
 80078a4:	61fa      	str	r2, [r7, #28]
 80078a6:	61bb      	str	r3, [r7, #24]
 80078a8:	69b9      	ldr	r1, [r7, #24]
 80078aa:	69fa      	ldr	r2, [r7, #28]
 80078ac:	e841 2300 	strex	r3, r2, [r1]
 80078b0:	617b      	str	r3, [r7, #20]
 80078b2:	697b      	ldr	r3, [r7, #20]
 80078b4:	2b00      	cmp	r3, #0
 80078b6:	d1e3      	bne.n	8007880 <HAL_UART_IRQHandler+0x484>
 80078b8:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 80078bc:	4619      	mov	r1, r3
 80078be:	6878      	ldr	r0, [r7, #4]
 80078c0:	f000 f852 	bl	8007968 <HAL_UARTEx_RxEventCallback>
 80078c4:	e023      	b.n	800790e <HAL_UART_IRQHandler+0x512>
 80078c6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80078ca:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80078ce:	2b00      	cmp	r3, #0
 80078d0:	d009      	beq.n	80078e6 <HAL_UART_IRQHandler+0x4ea>
 80078d2:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80078d6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80078da:	2b00      	cmp	r3, #0
 80078dc:	d003      	beq.n	80078e6 <HAL_UART_IRQHandler+0x4ea>
 80078de:	6878      	ldr	r0, [r7, #4]
 80078e0:	f000 fadb 	bl	8007e9a <UART_Transmit_IT>
 80078e4:	e014      	b.n	8007910 <HAL_UART_IRQHandler+0x514>
 80078e6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80078ea:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80078ee:	2b00      	cmp	r3, #0
 80078f0:	d00e      	beq.n	8007910 <HAL_UART_IRQHandler+0x514>
 80078f2:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80078f6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80078fa:	2b00      	cmp	r3, #0
 80078fc:	d008      	beq.n	8007910 <HAL_UART_IRQHandler+0x514>
 80078fe:	6878      	ldr	r0, [r7, #4]
 8007900:	f000 fb1b 	bl	8007f3a <UART_EndTransmit_IT>
 8007904:	e004      	b.n	8007910 <HAL_UART_IRQHandler+0x514>
 8007906:	bf00      	nop
 8007908:	e002      	b.n	8007910 <HAL_UART_IRQHandler+0x514>
 800790a:	bf00      	nop
 800790c:	e000      	b.n	8007910 <HAL_UART_IRQHandler+0x514>
 800790e:	bf00      	nop
 8007910:	37e8      	adds	r7, #232	; 0xe8
 8007912:	46bd      	mov	sp, r7
 8007914:	bd80      	pop	{r7, pc}
 8007916:	bf00      	nop

08007918 <HAL_UART_TxHalfCpltCallback>:
 8007918:	b480      	push	{r7}
 800791a:	b083      	sub	sp, #12
 800791c:	af00      	add	r7, sp, #0
 800791e:	6078      	str	r0, [r7, #4]
 8007920:	bf00      	nop
 8007922:	370c      	adds	r7, #12
 8007924:	46bd      	mov	sp, r7
 8007926:	f85d 7b04 	ldr.w	r7, [sp], #4
 800792a:	4770      	bx	lr

0800792c <HAL_UART_RxCpltCallback>:
 800792c:	b480      	push	{r7}
 800792e:	b083      	sub	sp, #12
 8007930:	af00      	add	r7, sp, #0
 8007932:	6078      	str	r0, [r7, #4]
 8007934:	bf00      	nop
 8007936:	370c      	adds	r7, #12
 8007938:	46bd      	mov	sp, r7
 800793a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800793e:	4770      	bx	lr

08007940 <HAL_UART_RxHalfCpltCallback>:
 8007940:	b480      	push	{r7}
 8007942:	b083      	sub	sp, #12
 8007944:	af00      	add	r7, sp, #0
 8007946:	6078      	str	r0, [r7, #4]
 8007948:	bf00      	nop
 800794a:	370c      	adds	r7, #12
 800794c:	46bd      	mov	sp, r7
 800794e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007952:	4770      	bx	lr

08007954 <HAL_UART_ErrorCallback>:
 8007954:	b480      	push	{r7}
 8007956:	b083      	sub	sp, #12
 8007958:	af00      	add	r7, sp, #0
 800795a:	6078      	str	r0, [r7, #4]
 800795c:	bf00      	nop
 800795e:	370c      	adds	r7, #12
 8007960:	46bd      	mov	sp, r7
 8007962:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007966:	4770      	bx	lr

08007968 <HAL_UARTEx_RxEventCallback>:
 8007968:	b480      	push	{r7}
 800796a:	b083      	sub	sp, #12
 800796c:	af00      	add	r7, sp, #0
 800796e:	6078      	str	r0, [r7, #4]
 8007970:	460b      	mov	r3, r1
 8007972:	807b      	strh	r3, [r7, #2]
 8007974:	bf00      	nop
 8007976:	370c      	adds	r7, #12
 8007978:	46bd      	mov	sp, r7
 800797a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800797e:	4770      	bx	lr

08007980 <UART_DMATransmitCplt>:
 8007980:	b580      	push	{r7, lr}
 8007982:	b090      	sub	sp, #64	; 0x40
 8007984:	af00      	add	r7, sp, #0
 8007986:	6078      	str	r0, [r7, #4]
 8007988:	687b      	ldr	r3, [r7, #4]
 800798a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800798c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800798e:	687b      	ldr	r3, [r7, #4]
 8007990:	681b      	ldr	r3, [r3, #0]
 8007992:	681b      	ldr	r3, [r3, #0]
 8007994:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007998:	2b00      	cmp	r3, #0
 800799a:	d137      	bne.n	8007a0c <UART_DMATransmitCplt+0x8c>
 800799c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800799e:	2200      	movs	r2, #0
 80079a0:	84da      	strh	r2, [r3, #38]	; 0x26
 80079a2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80079a4:	681b      	ldr	r3, [r3, #0]
 80079a6:	3314      	adds	r3, #20
 80079a8:	627b      	str	r3, [r7, #36]	; 0x24
 80079aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80079ac:	e853 3f00 	ldrex	r3, [r3]
 80079b0:	623b      	str	r3, [r7, #32]
 80079b2:	6a3b      	ldr	r3, [r7, #32]
 80079b4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80079b8:	63bb      	str	r3, [r7, #56]	; 0x38
 80079ba:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80079bc:	681b      	ldr	r3, [r3, #0]
 80079be:	3314      	adds	r3, #20
 80079c0:	6bba      	ldr	r2, [r7, #56]	; 0x38
 80079c2:	633a      	str	r2, [r7, #48]	; 0x30
 80079c4:	62fb      	str	r3, [r7, #44]	; 0x2c
 80079c6:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 80079c8:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80079ca:	e841 2300 	strex	r3, r2, [r1]
 80079ce:	62bb      	str	r3, [r7, #40]	; 0x28
 80079d0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80079d2:	2b00      	cmp	r3, #0
 80079d4:	d1e5      	bne.n	80079a2 <UART_DMATransmitCplt+0x22>
 80079d6:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80079d8:	681b      	ldr	r3, [r3, #0]
 80079da:	330c      	adds	r3, #12
 80079dc:	613b      	str	r3, [r7, #16]
 80079de:	693b      	ldr	r3, [r7, #16]
 80079e0:	e853 3f00 	ldrex	r3, [r3]
 80079e4:	60fb      	str	r3, [r7, #12]
 80079e6:	68fb      	ldr	r3, [r7, #12]
 80079e8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80079ec:	637b      	str	r3, [r7, #52]	; 0x34
 80079ee:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80079f0:	681b      	ldr	r3, [r3, #0]
 80079f2:	330c      	adds	r3, #12
 80079f4:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80079f6:	61fa      	str	r2, [r7, #28]
 80079f8:	61bb      	str	r3, [r7, #24]
 80079fa:	69b9      	ldr	r1, [r7, #24]
 80079fc:	69fa      	ldr	r2, [r7, #28]
 80079fe:	e841 2300 	strex	r3, r2, [r1]
 8007a02:	617b      	str	r3, [r7, #20]
 8007a04:	697b      	ldr	r3, [r7, #20]
 8007a06:	2b00      	cmp	r3, #0
 8007a08:	d1e5      	bne.n	80079d6 <UART_DMATransmitCplt+0x56>
 8007a0a:	e002      	b.n	8007a12 <UART_DMATransmitCplt+0x92>
 8007a0c:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
 8007a0e:	f7fb fa7b 	bl	8002f08 <HAL_UART_TxCpltCallback>
 8007a12:	bf00      	nop
 8007a14:	3740      	adds	r7, #64	; 0x40
 8007a16:	46bd      	mov	sp, r7
 8007a18:	bd80      	pop	{r7, pc}

08007a1a <UART_DMATxHalfCplt>:
 8007a1a:	b580      	push	{r7, lr}
 8007a1c:	b084      	sub	sp, #16
 8007a1e:	af00      	add	r7, sp, #0
 8007a20:	6078      	str	r0, [r7, #4]
 8007a22:	687b      	ldr	r3, [r7, #4]
 8007a24:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007a26:	60fb      	str	r3, [r7, #12]
 8007a28:	68f8      	ldr	r0, [r7, #12]
 8007a2a:	f7ff ff75 	bl	8007918 <HAL_UART_TxHalfCpltCallback>
 8007a2e:	bf00      	nop
 8007a30:	3710      	adds	r7, #16
 8007a32:	46bd      	mov	sp, r7
 8007a34:	bd80      	pop	{r7, pc}

08007a36 <UART_DMAReceiveCplt>:
 8007a36:	b580      	push	{r7, lr}
 8007a38:	b09c      	sub	sp, #112	; 0x70
 8007a3a:	af00      	add	r7, sp, #0
 8007a3c:	6078      	str	r0, [r7, #4]
 8007a3e:	687b      	ldr	r3, [r7, #4]
 8007a40:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007a42:	66fb      	str	r3, [r7, #108]	; 0x6c
 8007a44:	687b      	ldr	r3, [r7, #4]
 8007a46:	681b      	ldr	r3, [r3, #0]
 8007a48:	681b      	ldr	r3, [r3, #0]
 8007a4a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007a4e:	2b00      	cmp	r3, #0
 8007a50:	d172      	bne.n	8007b38 <UART_DMAReceiveCplt+0x102>
 8007a52:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8007a54:	2200      	movs	r2, #0
 8007a56:	85da      	strh	r2, [r3, #46]	; 0x2e
 8007a58:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8007a5a:	681b      	ldr	r3, [r3, #0]
 8007a5c:	330c      	adds	r3, #12
 8007a5e:	64fb      	str	r3, [r7, #76]	; 0x4c
 8007a60:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8007a62:	e853 3f00 	ldrex	r3, [r3]
 8007a66:	64bb      	str	r3, [r7, #72]	; 0x48
 8007a68:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8007a6a:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8007a6e:	66bb      	str	r3, [r7, #104]	; 0x68
 8007a70:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8007a72:	681b      	ldr	r3, [r3, #0]
 8007a74:	330c      	adds	r3, #12
 8007a76:	6eba      	ldr	r2, [r7, #104]	; 0x68
 8007a78:	65ba      	str	r2, [r7, #88]	; 0x58
 8007a7a:	657b      	str	r3, [r7, #84]	; 0x54
 8007a7c:	6d79      	ldr	r1, [r7, #84]	; 0x54
 8007a7e:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8007a80:	e841 2300 	strex	r3, r2, [r1]
 8007a84:	653b      	str	r3, [r7, #80]	; 0x50
 8007a86:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8007a88:	2b00      	cmp	r3, #0
 8007a8a:	d1e5      	bne.n	8007a58 <UART_DMAReceiveCplt+0x22>
 8007a8c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8007a8e:	681b      	ldr	r3, [r3, #0]
 8007a90:	3314      	adds	r3, #20
 8007a92:	63bb      	str	r3, [r7, #56]	; 0x38
 8007a94:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007a96:	e853 3f00 	ldrex	r3, [r3]
 8007a9a:	637b      	str	r3, [r7, #52]	; 0x34
 8007a9c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8007a9e:	f023 0301 	bic.w	r3, r3, #1
 8007aa2:	667b      	str	r3, [r7, #100]	; 0x64
 8007aa4:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8007aa6:	681b      	ldr	r3, [r3, #0]
 8007aa8:	3314      	adds	r3, #20
 8007aaa:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 8007aac:	647a      	str	r2, [r7, #68]	; 0x44
 8007aae:	643b      	str	r3, [r7, #64]	; 0x40
 8007ab0:	6c39      	ldr	r1, [r7, #64]	; 0x40
 8007ab2:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8007ab4:	e841 2300 	strex	r3, r2, [r1]
 8007ab8:	63fb      	str	r3, [r7, #60]	; 0x3c
 8007aba:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8007abc:	2b00      	cmp	r3, #0
 8007abe:	d1e5      	bne.n	8007a8c <UART_DMAReceiveCplt+0x56>
 8007ac0:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8007ac2:	681b      	ldr	r3, [r3, #0]
 8007ac4:	3314      	adds	r3, #20
 8007ac6:	627b      	str	r3, [r7, #36]	; 0x24
 8007ac8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007aca:	e853 3f00 	ldrex	r3, [r3]
 8007ace:	623b      	str	r3, [r7, #32]
 8007ad0:	6a3b      	ldr	r3, [r7, #32]
 8007ad2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8007ad6:	663b      	str	r3, [r7, #96]	; 0x60
 8007ad8:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8007ada:	681b      	ldr	r3, [r3, #0]
 8007adc:	3314      	adds	r3, #20
 8007ade:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 8007ae0:	633a      	str	r2, [r7, #48]	; 0x30
 8007ae2:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007ae4:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8007ae6:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8007ae8:	e841 2300 	strex	r3, r2, [r1]
 8007aec:	62bb      	str	r3, [r7, #40]	; 0x28
 8007aee:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007af0:	2b00      	cmp	r3, #0
 8007af2:	d1e5      	bne.n	8007ac0 <UART_DMAReceiveCplt+0x8a>
 8007af4:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8007af6:	2220      	movs	r2, #32
 8007af8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007afc:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8007afe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007b00:	2b01      	cmp	r3, #1
 8007b02:	d119      	bne.n	8007b38 <UART_DMAReceiveCplt+0x102>
 8007b04:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8007b06:	681b      	ldr	r3, [r3, #0]
 8007b08:	330c      	adds	r3, #12
 8007b0a:	613b      	str	r3, [r7, #16]
 8007b0c:	693b      	ldr	r3, [r7, #16]
 8007b0e:	e853 3f00 	ldrex	r3, [r3]
 8007b12:	60fb      	str	r3, [r7, #12]
 8007b14:	68fb      	ldr	r3, [r7, #12]
 8007b16:	f023 0310 	bic.w	r3, r3, #16
 8007b1a:	65fb      	str	r3, [r7, #92]	; 0x5c
 8007b1c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8007b1e:	681b      	ldr	r3, [r3, #0]
 8007b20:	330c      	adds	r3, #12
 8007b22:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 8007b24:	61fa      	str	r2, [r7, #28]
 8007b26:	61bb      	str	r3, [r7, #24]
 8007b28:	69b9      	ldr	r1, [r7, #24]
 8007b2a:	69fa      	ldr	r2, [r7, #28]
 8007b2c:	e841 2300 	strex	r3, r2, [r1]
 8007b30:	617b      	str	r3, [r7, #20]
 8007b32:	697b      	ldr	r3, [r7, #20]
 8007b34:	2b00      	cmp	r3, #0
 8007b36:	d1e5      	bne.n	8007b04 <UART_DMAReceiveCplt+0xce>
 8007b38:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8007b3a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007b3c:	2b01      	cmp	r3, #1
 8007b3e:	d106      	bne.n	8007b4e <UART_DMAReceiveCplt+0x118>
 8007b40:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8007b42:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8007b44:	4619      	mov	r1, r3
 8007b46:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 8007b48:	f7ff ff0e 	bl	8007968 <HAL_UARTEx_RxEventCallback>
 8007b4c:	e002      	b.n	8007b54 <UART_DMAReceiveCplt+0x11e>
 8007b4e:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 8007b50:	f7ff feec 	bl	800792c <HAL_UART_RxCpltCallback>
 8007b54:	bf00      	nop
 8007b56:	3770      	adds	r7, #112	; 0x70
 8007b58:	46bd      	mov	sp, r7
 8007b5a:	bd80      	pop	{r7, pc}

08007b5c <UART_DMARxHalfCplt>:
 8007b5c:	b580      	push	{r7, lr}
 8007b5e:	b084      	sub	sp, #16
 8007b60:	af00      	add	r7, sp, #0
 8007b62:	6078      	str	r0, [r7, #4]
 8007b64:	687b      	ldr	r3, [r7, #4]
 8007b66:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007b68:	60fb      	str	r3, [r7, #12]
 8007b6a:	68fb      	ldr	r3, [r7, #12]
 8007b6c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007b6e:	2b01      	cmp	r3, #1
 8007b70:	d108      	bne.n	8007b84 <UART_DMARxHalfCplt+0x28>
 8007b72:	68fb      	ldr	r3, [r7, #12]
 8007b74:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8007b76:	085b      	lsrs	r3, r3, #1
 8007b78:	b29b      	uxth	r3, r3
 8007b7a:	4619      	mov	r1, r3
 8007b7c:	68f8      	ldr	r0, [r7, #12]
 8007b7e:	f7ff fef3 	bl	8007968 <HAL_UARTEx_RxEventCallback>
 8007b82:	e002      	b.n	8007b8a <UART_DMARxHalfCplt+0x2e>
 8007b84:	68f8      	ldr	r0, [r7, #12]
 8007b86:	f7ff fedb 	bl	8007940 <HAL_UART_RxHalfCpltCallback>
 8007b8a:	bf00      	nop
 8007b8c:	3710      	adds	r7, #16
 8007b8e:	46bd      	mov	sp, r7
 8007b90:	bd80      	pop	{r7, pc}

08007b92 <UART_DMAError>:
 8007b92:	b580      	push	{r7, lr}
 8007b94:	b084      	sub	sp, #16
 8007b96:	af00      	add	r7, sp, #0
 8007b98:	6078      	str	r0, [r7, #4]
 8007b9a:	2300      	movs	r3, #0
 8007b9c:	60fb      	str	r3, [r7, #12]
 8007b9e:	687b      	ldr	r3, [r7, #4]
 8007ba0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007ba2:	60bb      	str	r3, [r7, #8]
 8007ba4:	68bb      	ldr	r3, [r7, #8]
 8007ba6:	681b      	ldr	r3, [r3, #0]
 8007ba8:	695b      	ldr	r3, [r3, #20]
 8007baa:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8007bae:	2b80      	cmp	r3, #128	; 0x80
 8007bb0:	bf0c      	ite	eq
 8007bb2:	2301      	moveq	r3, #1
 8007bb4:	2300      	movne	r3, #0
 8007bb6:	b2db      	uxtb	r3, r3
 8007bb8:	60fb      	str	r3, [r7, #12]
 8007bba:	68bb      	ldr	r3, [r7, #8]
 8007bbc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007bc0:	b2db      	uxtb	r3, r3
 8007bc2:	2b21      	cmp	r3, #33	; 0x21
 8007bc4:	d108      	bne.n	8007bd8 <UART_DMAError+0x46>
 8007bc6:	68fb      	ldr	r3, [r7, #12]
 8007bc8:	2b00      	cmp	r3, #0
 8007bca:	d005      	beq.n	8007bd8 <UART_DMAError+0x46>
 8007bcc:	68bb      	ldr	r3, [r7, #8]
 8007bce:	2200      	movs	r2, #0
 8007bd0:	84da      	strh	r2, [r3, #38]	; 0x26
 8007bd2:	68b8      	ldr	r0, [r7, #8]
 8007bd4:	f000 f8c2 	bl	8007d5c <UART_EndTxTransfer>
 8007bd8:	68bb      	ldr	r3, [r7, #8]
 8007bda:	681b      	ldr	r3, [r3, #0]
 8007bdc:	695b      	ldr	r3, [r3, #20]
 8007bde:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007be2:	2b40      	cmp	r3, #64	; 0x40
 8007be4:	bf0c      	ite	eq
 8007be6:	2301      	moveq	r3, #1
 8007be8:	2300      	movne	r3, #0
 8007bea:	b2db      	uxtb	r3, r3
 8007bec:	60fb      	str	r3, [r7, #12]
 8007bee:	68bb      	ldr	r3, [r7, #8]
 8007bf0:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8007bf4:	b2db      	uxtb	r3, r3
 8007bf6:	2b22      	cmp	r3, #34	; 0x22
 8007bf8:	d108      	bne.n	8007c0c <UART_DMAError+0x7a>
 8007bfa:	68fb      	ldr	r3, [r7, #12]
 8007bfc:	2b00      	cmp	r3, #0
 8007bfe:	d005      	beq.n	8007c0c <UART_DMAError+0x7a>
 8007c00:	68bb      	ldr	r3, [r7, #8]
 8007c02:	2200      	movs	r2, #0
 8007c04:	85da      	strh	r2, [r3, #46]	; 0x2e
 8007c06:	68b8      	ldr	r0, [r7, #8]
 8007c08:	f000 f8d0 	bl	8007dac <UART_EndRxTransfer>
 8007c0c:	68bb      	ldr	r3, [r7, #8]
 8007c0e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007c10:	f043 0210 	orr.w	r2, r3, #16
 8007c14:	68bb      	ldr	r3, [r7, #8]
 8007c16:	641a      	str	r2, [r3, #64]	; 0x40
 8007c18:	68b8      	ldr	r0, [r7, #8]
 8007c1a:	f7ff fe9b 	bl	8007954 <HAL_UART_ErrorCallback>
 8007c1e:	bf00      	nop
 8007c20:	3710      	adds	r7, #16
 8007c22:	46bd      	mov	sp, r7
 8007c24:	bd80      	pop	{r7, pc}
	...

08007c28 <UART_Start_Receive_DMA>:
 8007c28:	b580      	push	{r7, lr}
 8007c2a:	b098      	sub	sp, #96	; 0x60
 8007c2c:	af00      	add	r7, sp, #0
 8007c2e:	60f8      	str	r0, [r7, #12]
 8007c30:	60b9      	str	r1, [r7, #8]
 8007c32:	4613      	mov	r3, r2
 8007c34:	80fb      	strh	r3, [r7, #6]
 8007c36:	68ba      	ldr	r2, [r7, #8]
 8007c38:	68fb      	ldr	r3, [r7, #12]
 8007c3a:	629a      	str	r2, [r3, #40]	; 0x28
 8007c3c:	68fb      	ldr	r3, [r7, #12]
 8007c3e:	88fa      	ldrh	r2, [r7, #6]
 8007c40:	859a      	strh	r2, [r3, #44]	; 0x2c
 8007c42:	68fb      	ldr	r3, [r7, #12]
 8007c44:	2200      	movs	r2, #0
 8007c46:	641a      	str	r2, [r3, #64]	; 0x40
 8007c48:	68fb      	ldr	r3, [r7, #12]
 8007c4a:	2222      	movs	r2, #34	; 0x22
 8007c4c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007c50:	68fb      	ldr	r3, [r7, #12]
 8007c52:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007c54:	4a3e      	ldr	r2, [pc, #248]	; (8007d50 <UART_Start_Receive_DMA+0x128>)
 8007c56:	63da      	str	r2, [r3, #60]	; 0x3c
 8007c58:	68fb      	ldr	r3, [r7, #12]
 8007c5a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007c5c:	4a3d      	ldr	r2, [pc, #244]	; (8007d54 <UART_Start_Receive_DMA+0x12c>)
 8007c5e:	641a      	str	r2, [r3, #64]	; 0x40
 8007c60:	68fb      	ldr	r3, [r7, #12]
 8007c62:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007c64:	4a3c      	ldr	r2, [pc, #240]	; (8007d58 <UART_Start_Receive_DMA+0x130>)
 8007c66:	64da      	str	r2, [r3, #76]	; 0x4c
 8007c68:	68fb      	ldr	r3, [r7, #12]
 8007c6a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007c6c:	2200      	movs	r2, #0
 8007c6e:	651a      	str	r2, [r3, #80]	; 0x50
 8007c70:	f107 0308 	add.w	r3, r7, #8
 8007c74:	65fb      	str	r3, [r7, #92]	; 0x5c
 8007c76:	68fb      	ldr	r3, [r7, #12]
 8007c78:	6b98      	ldr	r0, [r3, #56]	; 0x38
 8007c7a:	68fb      	ldr	r3, [r7, #12]
 8007c7c:	681b      	ldr	r3, [r3, #0]
 8007c7e:	3304      	adds	r3, #4
 8007c80:	4619      	mov	r1, r3
 8007c82:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8007c84:	681a      	ldr	r2, [r3, #0]
 8007c86:	88fb      	ldrh	r3, [r7, #6]
 8007c88:	f7fb ffda 	bl	8003c40 <HAL_DMA_Start_IT>
 8007c8c:	2300      	movs	r3, #0
 8007c8e:	613b      	str	r3, [r7, #16]
 8007c90:	68fb      	ldr	r3, [r7, #12]
 8007c92:	681b      	ldr	r3, [r3, #0]
 8007c94:	681b      	ldr	r3, [r3, #0]
 8007c96:	613b      	str	r3, [r7, #16]
 8007c98:	68fb      	ldr	r3, [r7, #12]
 8007c9a:	681b      	ldr	r3, [r3, #0]
 8007c9c:	685b      	ldr	r3, [r3, #4]
 8007c9e:	613b      	str	r3, [r7, #16]
 8007ca0:	693b      	ldr	r3, [r7, #16]
 8007ca2:	68fb      	ldr	r3, [r7, #12]
 8007ca4:	2200      	movs	r2, #0
 8007ca6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007caa:	68fb      	ldr	r3, [r7, #12]
 8007cac:	681b      	ldr	r3, [r3, #0]
 8007cae:	330c      	adds	r3, #12
 8007cb0:	643b      	str	r3, [r7, #64]	; 0x40
 8007cb2:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8007cb4:	e853 3f00 	ldrex	r3, [r3]
 8007cb8:	63fb      	str	r3, [r7, #60]	; 0x3c
 8007cba:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8007cbc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007cc0:	65bb      	str	r3, [r7, #88]	; 0x58
 8007cc2:	68fb      	ldr	r3, [r7, #12]
 8007cc4:	681b      	ldr	r3, [r3, #0]
 8007cc6:	330c      	adds	r3, #12
 8007cc8:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8007cca:	64fa      	str	r2, [r7, #76]	; 0x4c
 8007ccc:	64bb      	str	r3, [r7, #72]	; 0x48
 8007cce:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 8007cd0:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8007cd2:	e841 2300 	strex	r3, r2, [r1]
 8007cd6:	647b      	str	r3, [r7, #68]	; 0x44
 8007cd8:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8007cda:	2b00      	cmp	r3, #0
 8007cdc:	d1e5      	bne.n	8007caa <UART_Start_Receive_DMA+0x82>
 8007cde:	68fb      	ldr	r3, [r7, #12]
 8007ce0:	681b      	ldr	r3, [r3, #0]
 8007ce2:	3314      	adds	r3, #20
 8007ce4:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007ce6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007ce8:	e853 3f00 	ldrex	r3, [r3]
 8007cec:	62bb      	str	r3, [r7, #40]	; 0x28
 8007cee:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007cf0:	f043 0301 	orr.w	r3, r3, #1
 8007cf4:	657b      	str	r3, [r7, #84]	; 0x54
 8007cf6:	68fb      	ldr	r3, [r7, #12]
 8007cf8:	681b      	ldr	r3, [r3, #0]
 8007cfa:	3314      	adds	r3, #20
 8007cfc:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 8007cfe:	63ba      	str	r2, [r7, #56]	; 0x38
 8007d00:	637b      	str	r3, [r7, #52]	; 0x34
 8007d02:	6b79      	ldr	r1, [r7, #52]	; 0x34
 8007d04:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8007d06:	e841 2300 	strex	r3, r2, [r1]
 8007d0a:	633b      	str	r3, [r7, #48]	; 0x30
 8007d0c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007d0e:	2b00      	cmp	r3, #0
 8007d10:	d1e5      	bne.n	8007cde <UART_Start_Receive_DMA+0xb6>
 8007d12:	68fb      	ldr	r3, [r7, #12]
 8007d14:	681b      	ldr	r3, [r3, #0]
 8007d16:	3314      	adds	r3, #20
 8007d18:	61bb      	str	r3, [r7, #24]
 8007d1a:	69bb      	ldr	r3, [r7, #24]
 8007d1c:	e853 3f00 	ldrex	r3, [r3]
 8007d20:	617b      	str	r3, [r7, #20]
 8007d22:	697b      	ldr	r3, [r7, #20]
 8007d24:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8007d28:	653b      	str	r3, [r7, #80]	; 0x50
 8007d2a:	68fb      	ldr	r3, [r7, #12]
 8007d2c:	681b      	ldr	r3, [r3, #0]
 8007d2e:	3314      	adds	r3, #20
 8007d30:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 8007d32:	627a      	str	r2, [r7, #36]	; 0x24
 8007d34:	623b      	str	r3, [r7, #32]
 8007d36:	6a39      	ldr	r1, [r7, #32]
 8007d38:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8007d3a:	e841 2300 	strex	r3, r2, [r1]
 8007d3e:	61fb      	str	r3, [r7, #28]
 8007d40:	69fb      	ldr	r3, [r7, #28]
 8007d42:	2b00      	cmp	r3, #0
 8007d44:	d1e5      	bne.n	8007d12 <UART_Start_Receive_DMA+0xea>
 8007d46:	2300      	movs	r3, #0
 8007d48:	4618      	mov	r0, r3
 8007d4a:	3760      	adds	r7, #96	; 0x60
 8007d4c:	46bd      	mov	sp, r7
 8007d4e:	bd80      	pop	{r7, pc}
 8007d50:	08007a37 	.word	0x08007a37
 8007d54:	08007b5d 	.word	0x08007b5d
 8007d58:	08007b93 	.word	0x08007b93

08007d5c <UART_EndTxTransfer>:
 8007d5c:	b480      	push	{r7}
 8007d5e:	b089      	sub	sp, #36	; 0x24
 8007d60:	af00      	add	r7, sp, #0
 8007d62:	6078      	str	r0, [r7, #4]
 8007d64:	687b      	ldr	r3, [r7, #4]
 8007d66:	681b      	ldr	r3, [r3, #0]
 8007d68:	330c      	adds	r3, #12
 8007d6a:	60fb      	str	r3, [r7, #12]
 8007d6c:	68fb      	ldr	r3, [r7, #12]
 8007d6e:	e853 3f00 	ldrex	r3, [r3]
 8007d72:	60bb      	str	r3, [r7, #8]
 8007d74:	68bb      	ldr	r3, [r7, #8]
 8007d76:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 8007d7a:	61fb      	str	r3, [r7, #28]
 8007d7c:	687b      	ldr	r3, [r7, #4]
 8007d7e:	681b      	ldr	r3, [r3, #0]
 8007d80:	330c      	adds	r3, #12
 8007d82:	69fa      	ldr	r2, [r7, #28]
 8007d84:	61ba      	str	r2, [r7, #24]
 8007d86:	617b      	str	r3, [r7, #20]
 8007d88:	6979      	ldr	r1, [r7, #20]
 8007d8a:	69ba      	ldr	r2, [r7, #24]
 8007d8c:	e841 2300 	strex	r3, r2, [r1]
 8007d90:	613b      	str	r3, [r7, #16]
 8007d92:	693b      	ldr	r3, [r7, #16]
 8007d94:	2b00      	cmp	r3, #0
 8007d96:	d1e5      	bne.n	8007d64 <UART_EndTxTransfer+0x8>
 8007d98:	687b      	ldr	r3, [r7, #4]
 8007d9a:	2220      	movs	r2, #32
 8007d9c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007da0:	bf00      	nop
 8007da2:	3724      	adds	r7, #36	; 0x24
 8007da4:	46bd      	mov	sp, r7
 8007da6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007daa:	4770      	bx	lr

08007dac <UART_EndRxTransfer>:
 8007dac:	b480      	push	{r7}
 8007dae:	b095      	sub	sp, #84	; 0x54
 8007db0:	af00      	add	r7, sp, #0
 8007db2:	6078      	str	r0, [r7, #4]
 8007db4:	687b      	ldr	r3, [r7, #4]
 8007db6:	681b      	ldr	r3, [r3, #0]
 8007db8:	330c      	adds	r3, #12
 8007dba:	637b      	str	r3, [r7, #52]	; 0x34
 8007dbc:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8007dbe:	e853 3f00 	ldrex	r3, [r3]
 8007dc2:	633b      	str	r3, [r7, #48]	; 0x30
 8007dc4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007dc6:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8007dca:	64fb      	str	r3, [r7, #76]	; 0x4c
 8007dcc:	687b      	ldr	r3, [r7, #4]
 8007dce:	681b      	ldr	r3, [r3, #0]
 8007dd0:	330c      	adds	r3, #12
 8007dd2:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8007dd4:	643a      	str	r2, [r7, #64]	; 0x40
 8007dd6:	63fb      	str	r3, [r7, #60]	; 0x3c
 8007dd8:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8007dda:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8007ddc:	e841 2300 	strex	r3, r2, [r1]
 8007de0:	63bb      	str	r3, [r7, #56]	; 0x38
 8007de2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007de4:	2b00      	cmp	r3, #0
 8007de6:	d1e5      	bne.n	8007db4 <UART_EndRxTransfer+0x8>
 8007de8:	687b      	ldr	r3, [r7, #4]
 8007dea:	681b      	ldr	r3, [r3, #0]
 8007dec:	3314      	adds	r3, #20
 8007dee:	623b      	str	r3, [r7, #32]
 8007df0:	6a3b      	ldr	r3, [r7, #32]
 8007df2:	e853 3f00 	ldrex	r3, [r3]
 8007df6:	61fb      	str	r3, [r7, #28]
 8007df8:	69fb      	ldr	r3, [r7, #28]
 8007dfa:	f023 0301 	bic.w	r3, r3, #1
 8007dfe:	64bb      	str	r3, [r7, #72]	; 0x48
 8007e00:	687b      	ldr	r3, [r7, #4]
 8007e02:	681b      	ldr	r3, [r3, #0]
 8007e04:	3314      	adds	r3, #20
 8007e06:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8007e08:	62fa      	str	r2, [r7, #44]	; 0x2c
 8007e0a:	62bb      	str	r3, [r7, #40]	; 0x28
 8007e0c:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8007e0e:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8007e10:	e841 2300 	strex	r3, r2, [r1]
 8007e14:	627b      	str	r3, [r7, #36]	; 0x24
 8007e16:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007e18:	2b00      	cmp	r3, #0
 8007e1a:	d1e5      	bne.n	8007de8 <UART_EndRxTransfer+0x3c>
 8007e1c:	687b      	ldr	r3, [r7, #4]
 8007e1e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007e20:	2b01      	cmp	r3, #1
 8007e22:	d119      	bne.n	8007e58 <UART_EndRxTransfer+0xac>
 8007e24:	687b      	ldr	r3, [r7, #4]
 8007e26:	681b      	ldr	r3, [r3, #0]
 8007e28:	330c      	adds	r3, #12
 8007e2a:	60fb      	str	r3, [r7, #12]
 8007e2c:	68fb      	ldr	r3, [r7, #12]
 8007e2e:	e853 3f00 	ldrex	r3, [r3]
 8007e32:	60bb      	str	r3, [r7, #8]
 8007e34:	68bb      	ldr	r3, [r7, #8]
 8007e36:	f023 0310 	bic.w	r3, r3, #16
 8007e3a:	647b      	str	r3, [r7, #68]	; 0x44
 8007e3c:	687b      	ldr	r3, [r7, #4]
 8007e3e:	681b      	ldr	r3, [r3, #0]
 8007e40:	330c      	adds	r3, #12
 8007e42:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8007e44:	61ba      	str	r2, [r7, #24]
 8007e46:	617b      	str	r3, [r7, #20]
 8007e48:	6979      	ldr	r1, [r7, #20]
 8007e4a:	69ba      	ldr	r2, [r7, #24]
 8007e4c:	e841 2300 	strex	r3, r2, [r1]
 8007e50:	613b      	str	r3, [r7, #16]
 8007e52:	693b      	ldr	r3, [r7, #16]
 8007e54:	2b00      	cmp	r3, #0
 8007e56:	d1e5      	bne.n	8007e24 <UART_EndRxTransfer+0x78>
 8007e58:	687b      	ldr	r3, [r7, #4]
 8007e5a:	2220      	movs	r2, #32
 8007e5c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007e60:	687b      	ldr	r3, [r7, #4]
 8007e62:	2200      	movs	r2, #0
 8007e64:	631a      	str	r2, [r3, #48]	; 0x30
 8007e66:	bf00      	nop
 8007e68:	3754      	adds	r7, #84	; 0x54
 8007e6a:	46bd      	mov	sp, r7
 8007e6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e70:	4770      	bx	lr

08007e72 <UART_DMAAbortOnError>:
 8007e72:	b580      	push	{r7, lr}
 8007e74:	b084      	sub	sp, #16
 8007e76:	af00      	add	r7, sp, #0
 8007e78:	6078      	str	r0, [r7, #4]
 8007e7a:	687b      	ldr	r3, [r7, #4]
 8007e7c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007e7e:	60fb      	str	r3, [r7, #12]
 8007e80:	68fb      	ldr	r3, [r7, #12]
 8007e82:	2200      	movs	r2, #0
 8007e84:	85da      	strh	r2, [r3, #46]	; 0x2e
 8007e86:	68fb      	ldr	r3, [r7, #12]
 8007e88:	2200      	movs	r2, #0
 8007e8a:	84da      	strh	r2, [r3, #38]	; 0x26
 8007e8c:	68f8      	ldr	r0, [r7, #12]
 8007e8e:	f7ff fd61 	bl	8007954 <HAL_UART_ErrorCallback>
 8007e92:	bf00      	nop
 8007e94:	3710      	adds	r7, #16
 8007e96:	46bd      	mov	sp, r7
 8007e98:	bd80      	pop	{r7, pc}

08007e9a <UART_Transmit_IT>:
 8007e9a:	b480      	push	{r7}
 8007e9c:	b085      	sub	sp, #20
 8007e9e:	af00      	add	r7, sp, #0
 8007ea0:	6078      	str	r0, [r7, #4]
 8007ea2:	687b      	ldr	r3, [r7, #4]
 8007ea4:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007ea8:	b2db      	uxtb	r3, r3
 8007eaa:	2b21      	cmp	r3, #33	; 0x21
 8007eac:	d13e      	bne.n	8007f2c <UART_Transmit_IT+0x92>
 8007eae:	687b      	ldr	r3, [r7, #4]
 8007eb0:	689b      	ldr	r3, [r3, #8]
 8007eb2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8007eb6:	d114      	bne.n	8007ee2 <UART_Transmit_IT+0x48>
 8007eb8:	687b      	ldr	r3, [r7, #4]
 8007eba:	691b      	ldr	r3, [r3, #16]
 8007ebc:	2b00      	cmp	r3, #0
 8007ebe:	d110      	bne.n	8007ee2 <UART_Transmit_IT+0x48>
 8007ec0:	687b      	ldr	r3, [r7, #4]
 8007ec2:	6a1b      	ldr	r3, [r3, #32]
 8007ec4:	60fb      	str	r3, [r7, #12]
 8007ec6:	68fb      	ldr	r3, [r7, #12]
 8007ec8:	881b      	ldrh	r3, [r3, #0]
 8007eca:	461a      	mov	r2, r3
 8007ecc:	687b      	ldr	r3, [r7, #4]
 8007ece:	681b      	ldr	r3, [r3, #0]
 8007ed0:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8007ed4:	605a      	str	r2, [r3, #4]
 8007ed6:	687b      	ldr	r3, [r7, #4]
 8007ed8:	6a1b      	ldr	r3, [r3, #32]
 8007eda:	1c9a      	adds	r2, r3, #2
 8007edc:	687b      	ldr	r3, [r7, #4]
 8007ede:	621a      	str	r2, [r3, #32]
 8007ee0:	e008      	b.n	8007ef4 <UART_Transmit_IT+0x5a>
 8007ee2:	687b      	ldr	r3, [r7, #4]
 8007ee4:	6a1b      	ldr	r3, [r3, #32]
 8007ee6:	1c59      	adds	r1, r3, #1
 8007ee8:	687a      	ldr	r2, [r7, #4]
 8007eea:	6211      	str	r1, [r2, #32]
 8007eec:	781a      	ldrb	r2, [r3, #0]
 8007eee:	687b      	ldr	r3, [r7, #4]
 8007ef0:	681b      	ldr	r3, [r3, #0]
 8007ef2:	605a      	str	r2, [r3, #4]
 8007ef4:	687b      	ldr	r3, [r7, #4]
 8007ef6:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8007ef8:	b29b      	uxth	r3, r3
 8007efa:	3b01      	subs	r3, #1
 8007efc:	b29b      	uxth	r3, r3
 8007efe:	687a      	ldr	r2, [r7, #4]
 8007f00:	4619      	mov	r1, r3
 8007f02:	84d1      	strh	r1, [r2, #38]	; 0x26
 8007f04:	2b00      	cmp	r3, #0
 8007f06:	d10f      	bne.n	8007f28 <UART_Transmit_IT+0x8e>
 8007f08:	687b      	ldr	r3, [r7, #4]
 8007f0a:	681b      	ldr	r3, [r3, #0]
 8007f0c:	68da      	ldr	r2, [r3, #12]
 8007f0e:	687b      	ldr	r3, [r7, #4]
 8007f10:	681b      	ldr	r3, [r3, #0]
 8007f12:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8007f16:	60da      	str	r2, [r3, #12]
 8007f18:	687b      	ldr	r3, [r7, #4]
 8007f1a:	681b      	ldr	r3, [r3, #0]
 8007f1c:	68da      	ldr	r2, [r3, #12]
 8007f1e:	687b      	ldr	r3, [r7, #4]
 8007f20:	681b      	ldr	r3, [r3, #0]
 8007f22:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8007f26:	60da      	str	r2, [r3, #12]
 8007f28:	2300      	movs	r3, #0
 8007f2a:	e000      	b.n	8007f2e <UART_Transmit_IT+0x94>
 8007f2c:	2302      	movs	r3, #2
 8007f2e:	4618      	mov	r0, r3
 8007f30:	3714      	adds	r7, #20
 8007f32:	46bd      	mov	sp, r7
 8007f34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f38:	4770      	bx	lr

08007f3a <UART_EndTransmit_IT>:
 8007f3a:	b580      	push	{r7, lr}
 8007f3c:	b082      	sub	sp, #8
 8007f3e:	af00      	add	r7, sp, #0
 8007f40:	6078      	str	r0, [r7, #4]
 8007f42:	687b      	ldr	r3, [r7, #4]
 8007f44:	681b      	ldr	r3, [r3, #0]
 8007f46:	68da      	ldr	r2, [r3, #12]
 8007f48:	687b      	ldr	r3, [r7, #4]
 8007f4a:	681b      	ldr	r3, [r3, #0]
 8007f4c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007f50:	60da      	str	r2, [r3, #12]
 8007f52:	687b      	ldr	r3, [r7, #4]
 8007f54:	2220      	movs	r2, #32
 8007f56:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007f5a:	6878      	ldr	r0, [r7, #4]
 8007f5c:	f7fa ffd4 	bl	8002f08 <HAL_UART_TxCpltCallback>
 8007f60:	2300      	movs	r3, #0
 8007f62:	4618      	mov	r0, r3
 8007f64:	3708      	adds	r7, #8
 8007f66:	46bd      	mov	sp, r7
 8007f68:	bd80      	pop	{r7, pc}

08007f6a <UART_Receive_IT>:
 8007f6a:	b580      	push	{r7, lr}
 8007f6c:	b08c      	sub	sp, #48	; 0x30
 8007f6e:	af00      	add	r7, sp, #0
 8007f70:	6078      	str	r0, [r7, #4]
 8007f72:	687b      	ldr	r3, [r7, #4]
 8007f74:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8007f78:	b2db      	uxtb	r3, r3
 8007f7a:	2b22      	cmp	r3, #34	; 0x22
 8007f7c:	f040 80ab 	bne.w	80080d6 <UART_Receive_IT+0x16c>
 8007f80:	687b      	ldr	r3, [r7, #4]
 8007f82:	689b      	ldr	r3, [r3, #8]
 8007f84:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8007f88:	d117      	bne.n	8007fba <UART_Receive_IT+0x50>
 8007f8a:	687b      	ldr	r3, [r7, #4]
 8007f8c:	691b      	ldr	r3, [r3, #16]
 8007f8e:	2b00      	cmp	r3, #0
 8007f90:	d113      	bne.n	8007fba <UART_Receive_IT+0x50>
 8007f92:	2300      	movs	r3, #0
 8007f94:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007f96:	687b      	ldr	r3, [r7, #4]
 8007f98:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007f9a:	62bb      	str	r3, [r7, #40]	; 0x28
 8007f9c:	687b      	ldr	r3, [r7, #4]
 8007f9e:	681b      	ldr	r3, [r3, #0]
 8007fa0:	685b      	ldr	r3, [r3, #4]
 8007fa2:	b29b      	uxth	r3, r3
 8007fa4:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007fa8:	b29a      	uxth	r2, r3
 8007faa:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007fac:	801a      	strh	r2, [r3, #0]
 8007fae:	687b      	ldr	r3, [r7, #4]
 8007fb0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007fb2:	1c9a      	adds	r2, r3, #2
 8007fb4:	687b      	ldr	r3, [r7, #4]
 8007fb6:	629a      	str	r2, [r3, #40]	; 0x28
 8007fb8:	e026      	b.n	8008008 <UART_Receive_IT+0x9e>
 8007fba:	687b      	ldr	r3, [r7, #4]
 8007fbc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007fbe:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007fc0:	2300      	movs	r3, #0
 8007fc2:	62bb      	str	r3, [r7, #40]	; 0x28
 8007fc4:	687b      	ldr	r3, [r7, #4]
 8007fc6:	689b      	ldr	r3, [r3, #8]
 8007fc8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8007fcc:	d007      	beq.n	8007fde <UART_Receive_IT+0x74>
 8007fce:	687b      	ldr	r3, [r7, #4]
 8007fd0:	689b      	ldr	r3, [r3, #8]
 8007fd2:	2b00      	cmp	r3, #0
 8007fd4:	d10a      	bne.n	8007fec <UART_Receive_IT+0x82>
 8007fd6:	687b      	ldr	r3, [r7, #4]
 8007fd8:	691b      	ldr	r3, [r3, #16]
 8007fda:	2b00      	cmp	r3, #0
 8007fdc:	d106      	bne.n	8007fec <UART_Receive_IT+0x82>
 8007fde:	687b      	ldr	r3, [r7, #4]
 8007fe0:	681b      	ldr	r3, [r3, #0]
 8007fe2:	685b      	ldr	r3, [r3, #4]
 8007fe4:	b2da      	uxtb	r2, r3
 8007fe6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007fe8:	701a      	strb	r2, [r3, #0]
 8007fea:	e008      	b.n	8007ffe <UART_Receive_IT+0x94>
 8007fec:	687b      	ldr	r3, [r7, #4]
 8007fee:	681b      	ldr	r3, [r3, #0]
 8007ff0:	685b      	ldr	r3, [r3, #4]
 8007ff2:	b2db      	uxtb	r3, r3
 8007ff4:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8007ff8:	b2da      	uxtb	r2, r3
 8007ffa:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007ffc:	701a      	strb	r2, [r3, #0]
 8007ffe:	687b      	ldr	r3, [r7, #4]
 8008000:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008002:	1c5a      	adds	r2, r3, #1
 8008004:	687b      	ldr	r3, [r7, #4]
 8008006:	629a      	str	r2, [r3, #40]	; 0x28
 8008008:	687b      	ldr	r3, [r7, #4]
 800800a:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800800c:	b29b      	uxth	r3, r3
 800800e:	3b01      	subs	r3, #1
 8008010:	b29b      	uxth	r3, r3
 8008012:	687a      	ldr	r2, [r7, #4]
 8008014:	4619      	mov	r1, r3
 8008016:	85d1      	strh	r1, [r2, #46]	; 0x2e
 8008018:	2b00      	cmp	r3, #0
 800801a:	d15a      	bne.n	80080d2 <UART_Receive_IT+0x168>
 800801c:	687b      	ldr	r3, [r7, #4]
 800801e:	681b      	ldr	r3, [r3, #0]
 8008020:	68da      	ldr	r2, [r3, #12]
 8008022:	687b      	ldr	r3, [r7, #4]
 8008024:	681b      	ldr	r3, [r3, #0]
 8008026:	f022 0220 	bic.w	r2, r2, #32
 800802a:	60da      	str	r2, [r3, #12]
 800802c:	687b      	ldr	r3, [r7, #4]
 800802e:	681b      	ldr	r3, [r3, #0]
 8008030:	68da      	ldr	r2, [r3, #12]
 8008032:	687b      	ldr	r3, [r7, #4]
 8008034:	681b      	ldr	r3, [r3, #0]
 8008036:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800803a:	60da      	str	r2, [r3, #12]
 800803c:	687b      	ldr	r3, [r7, #4]
 800803e:	681b      	ldr	r3, [r3, #0]
 8008040:	695a      	ldr	r2, [r3, #20]
 8008042:	687b      	ldr	r3, [r7, #4]
 8008044:	681b      	ldr	r3, [r3, #0]
 8008046:	f022 0201 	bic.w	r2, r2, #1
 800804a:	615a      	str	r2, [r3, #20]
 800804c:	687b      	ldr	r3, [r7, #4]
 800804e:	2220      	movs	r2, #32
 8008050:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8008054:	687b      	ldr	r3, [r7, #4]
 8008056:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008058:	2b01      	cmp	r3, #1
 800805a:	d135      	bne.n	80080c8 <UART_Receive_IT+0x15e>
 800805c:	687b      	ldr	r3, [r7, #4]
 800805e:	2200      	movs	r2, #0
 8008060:	631a      	str	r2, [r3, #48]	; 0x30
 8008062:	687b      	ldr	r3, [r7, #4]
 8008064:	681b      	ldr	r3, [r3, #0]
 8008066:	330c      	adds	r3, #12
 8008068:	617b      	str	r3, [r7, #20]
 800806a:	697b      	ldr	r3, [r7, #20]
 800806c:	e853 3f00 	ldrex	r3, [r3]
 8008070:	613b      	str	r3, [r7, #16]
 8008072:	693b      	ldr	r3, [r7, #16]
 8008074:	f023 0310 	bic.w	r3, r3, #16
 8008078:	627b      	str	r3, [r7, #36]	; 0x24
 800807a:	687b      	ldr	r3, [r7, #4]
 800807c:	681b      	ldr	r3, [r3, #0]
 800807e:	330c      	adds	r3, #12
 8008080:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8008082:	623a      	str	r2, [r7, #32]
 8008084:	61fb      	str	r3, [r7, #28]
 8008086:	69f9      	ldr	r1, [r7, #28]
 8008088:	6a3a      	ldr	r2, [r7, #32]
 800808a:	e841 2300 	strex	r3, r2, [r1]
 800808e:	61bb      	str	r3, [r7, #24]
 8008090:	69bb      	ldr	r3, [r7, #24]
 8008092:	2b00      	cmp	r3, #0
 8008094:	d1e5      	bne.n	8008062 <UART_Receive_IT+0xf8>
 8008096:	687b      	ldr	r3, [r7, #4]
 8008098:	681b      	ldr	r3, [r3, #0]
 800809a:	681b      	ldr	r3, [r3, #0]
 800809c:	f003 0310 	and.w	r3, r3, #16
 80080a0:	2b10      	cmp	r3, #16
 80080a2:	d10a      	bne.n	80080ba <UART_Receive_IT+0x150>
 80080a4:	2300      	movs	r3, #0
 80080a6:	60fb      	str	r3, [r7, #12]
 80080a8:	687b      	ldr	r3, [r7, #4]
 80080aa:	681b      	ldr	r3, [r3, #0]
 80080ac:	681b      	ldr	r3, [r3, #0]
 80080ae:	60fb      	str	r3, [r7, #12]
 80080b0:	687b      	ldr	r3, [r7, #4]
 80080b2:	681b      	ldr	r3, [r3, #0]
 80080b4:	685b      	ldr	r3, [r3, #4]
 80080b6:	60fb      	str	r3, [r7, #12]
 80080b8:	68fb      	ldr	r3, [r7, #12]
 80080ba:	687b      	ldr	r3, [r7, #4]
 80080bc:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 80080be:	4619      	mov	r1, r3
 80080c0:	6878      	ldr	r0, [r7, #4]
 80080c2:	f7ff fc51 	bl	8007968 <HAL_UARTEx_RxEventCallback>
 80080c6:	e002      	b.n	80080ce <UART_Receive_IT+0x164>
 80080c8:	6878      	ldr	r0, [r7, #4]
 80080ca:	f7ff fc2f 	bl	800792c <HAL_UART_RxCpltCallback>
 80080ce:	2300      	movs	r3, #0
 80080d0:	e002      	b.n	80080d8 <UART_Receive_IT+0x16e>
 80080d2:	2300      	movs	r3, #0
 80080d4:	e000      	b.n	80080d8 <UART_Receive_IT+0x16e>
 80080d6:	2302      	movs	r3, #2
 80080d8:	4618      	mov	r0, r3
 80080da:	3730      	adds	r7, #48	; 0x30
 80080dc:	46bd      	mov	sp, r7
 80080de:	bd80      	pop	{r7, pc}

080080e0 <UART_SetConfig>:
 80080e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80080e4:	b09f      	sub	sp, #124	; 0x7c
 80080e6:	af00      	add	r7, sp, #0
 80080e8:	66f8      	str	r0, [r7, #108]	; 0x6c
 80080ea:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80080ec:	681b      	ldr	r3, [r3, #0]
 80080ee:	691b      	ldr	r3, [r3, #16]
 80080f0:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 80080f4:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80080f6:	68d9      	ldr	r1, [r3, #12]
 80080f8:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80080fa:	681a      	ldr	r2, [r3, #0]
 80080fc:	ea40 0301 	orr.w	r3, r0, r1
 8008100:	6113      	str	r3, [r2, #16]
 8008102:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8008104:	689a      	ldr	r2, [r3, #8]
 8008106:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8008108:	691b      	ldr	r3, [r3, #16]
 800810a:	431a      	orrs	r2, r3
 800810c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800810e:	695b      	ldr	r3, [r3, #20]
 8008110:	431a      	orrs	r2, r3
 8008112:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8008114:	69db      	ldr	r3, [r3, #28]
 8008116:	4313      	orrs	r3, r2
 8008118:	673b      	str	r3, [r7, #112]	; 0x70
 800811a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800811c:	681b      	ldr	r3, [r3, #0]
 800811e:	68db      	ldr	r3, [r3, #12]
 8008120:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 8008124:	f021 010c 	bic.w	r1, r1, #12
 8008128:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800812a:	681a      	ldr	r2, [r3, #0]
 800812c:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800812e:	430b      	orrs	r3, r1
 8008130:	60d3      	str	r3, [r2, #12]
 8008132:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8008134:	681b      	ldr	r3, [r3, #0]
 8008136:	695b      	ldr	r3, [r3, #20]
 8008138:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 800813c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800813e:	6999      	ldr	r1, [r3, #24]
 8008140:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8008142:	681a      	ldr	r2, [r3, #0]
 8008144:	ea40 0301 	orr.w	r3, r0, r1
 8008148:	6153      	str	r3, [r2, #20]
 800814a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800814c:	681a      	ldr	r2, [r3, #0]
 800814e:	4bc5      	ldr	r3, [pc, #788]	; (8008464 <UART_SetConfig+0x384>)
 8008150:	429a      	cmp	r2, r3
 8008152:	d004      	beq.n	800815e <UART_SetConfig+0x7e>
 8008154:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8008156:	681a      	ldr	r2, [r3, #0]
 8008158:	4bc3      	ldr	r3, [pc, #780]	; (8008468 <UART_SetConfig+0x388>)
 800815a:	429a      	cmp	r2, r3
 800815c:	d103      	bne.n	8008166 <UART_SetConfig+0x86>
 800815e:	f7fe f947 	bl	80063f0 <HAL_RCC_GetPCLK2Freq>
 8008162:	6778      	str	r0, [r7, #116]	; 0x74
 8008164:	e002      	b.n	800816c <UART_SetConfig+0x8c>
 8008166:	f7fe f92f 	bl	80063c8 <HAL_RCC_GetPCLK1Freq>
 800816a:	6778      	str	r0, [r7, #116]	; 0x74
 800816c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800816e:	69db      	ldr	r3, [r3, #28]
 8008170:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8008174:	f040 80b6 	bne.w	80082e4 <UART_SetConfig+0x204>
 8008178:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800817a:	461c      	mov	r4, r3
 800817c:	f04f 0500 	mov.w	r5, #0
 8008180:	4622      	mov	r2, r4
 8008182:	462b      	mov	r3, r5
 8008184:	1891      	adds	r1, r2, r2
 8008186:	6439      	str	r1, [r7, #64]	; 0x40
 8008188:	415b      	adcs	r3, r3
 800818a:	647b      	str	r3, [r7, #68]	; 0x44
 800818c:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 8008190:	1912      	adds	r2, r2, r4
 8008192:	eb45 0303 	adc.w	r3, r5, r3
 8008196:	f04f 0000 	mov.w	r0, #0
 800819a:	f04f 0100 	mov.w	r1, #0
 800819e:	00d9      	lsls	r1, r3, #3
 80081a0:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 80081a4:	00d0      	lsls	r0, r2, #3
 80081a6:	4602      	mov	r2, r0
 80081a8:	460b      	mov	r3, r1
 80081aa:	1911      	adds	r1, r2, r4
 80081ac:	6639      	str	r1, [r7, #96]	; 0x60
 80081ae:	416b      	adcs	r3, r5
 80081b0:	667b      	str	r3, [r7, #100]	; 0x64
 80081b2:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80081b4:	685b      	ldr	r3, [r3, #4]
 80081b6:	461a      	mov	r2, r3
 80081b8:	f04f 0300 	mov.w	r3, #0
 80081bc:	1891      	adds	r1, r2, r2
 80081be:	63b9      	str	r1, [r7, #56]	; 0x38
 80081c0:	415b      	adcs	r3, r3
 80081c2:	63fb      	str	r3, [r7, #60]	; 0x3c
 80081c4:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 80081c8:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	; 0x60
 80081cc:	f7f7 fffc 	bl	80001c8 <__aeabi_uldivmod>
 80081d0:	4602      	mov	r2, r0
 80081d2:	460b      	mov	r3, r1
 80081d4:	4ba5      	ldr	r3, [pc, #660]	; (800846c <UART_SetConfig+0x38c>)
 80081d6:	fba3 2302 	umull	r2, r3, r3, r2
 80081da:	095b      	lsrs	r3, r3, #5
 80081dc:	011e      	lsls	r6, r3, #4
 80081de:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80081e0:	461c      	mov	r4, r3
 80081e2:	f04f 0500 	mov.w	r5, #0
 80081e6:	4622      	mov	r2, r4
 80081e8:	462b      	mov	r3, r5
 80081ea:	1891      	adds	r1, r2, r2
 80081ec:	6339      	str	r1, [r7, #48]	; 0x30
 80081ee:	415b      	adcs	r3, r3
 80081f0:	637b      	str	r3, [r7, #52]	; 0x34
 80081f2:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 80081f6:	1912      	adds	r2, r2, r4
 80081f8:	eb45 0303 	adc.w	r3, r5, r3
 80081fc:	f04f 0000 	mov.w	r0, #0
 8008200:	f04f 0100 	mov.w	r1, #0
 8008204:	00d9      	lsls	r1, r3, #3
 8008206:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 800820a:	00d0      	lsls	r0, r2, #3
 800820c:	4602      	mov	r2, r0
 800820e:	460b      	mov	r3, r1
 8008210:	1911      	adds	r1, r2, r4
 8008212:	65b9      	str	r1, [r7, #88]	; 0x58
 8008214:	416b      	adcs	r3, r5
 8008216:	65fb      	str	r3, [r7, #92]	; 0x5c
 8008218:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800821a:	685b      	ldr	r3, [r3, #4]
 800821c:	461a      	mov	r2, r3
 800821e:	f04f 0300 	mov.w	r3, #0
 8008222:	1891      	adds	r1, r2, r2
 8008224:	62b9      	str	r1, [r7, #40]	; 0x28
 8008226:	415b      	adcs	r3, r3
 8008228:	62fb      	str	r3, [r7, #44]	; 0x2c
 800822a:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 800822e:	e9d7 0116 	ldrd	r0, r1, [r7, #88]	; 0x58
 8008232:	f7f7 ffc9 	bl	80001c8 <__aeabi_uldivmod>
 8008236:	4602      	mov	r2, r0
 8008238:	460b      	mov	r3, r1
 800823a:	4b8c      	ldr	r3, [pc, #560]	; (800846c <UART_SetConfig+0x38c>)
 800823c:	fba3 1302 	umull	r1, r3, r3, r2
 8008240:	095b      	lsrs	r3, r3, #5
 8008242:	2164      	movs	r1, #100	; 0x64
 8008244:	fb01 f303 	mul.w	r3, r1, r3
 8008248:	1ad3      	subs	r3, r2, r3
 800824a:	00db      	lsls	r3, r3, #3
 800824c:	3332      	adds	r3, #50	; 0x32
 800824e:	4a87      	ldr	r2, [pc, #540]	; (800846c <UART_SetConfig+0x38c>)
 8008250:	fba2 2303 	umull	r2, r3, r2, r3
 8008254:	095b      	lsrs	r3, r3, #5
 8008256:	005b      	lsls	r3, r3, #1
 8008258:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 800825c:	441e      	add	r6, r3
 800825e:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8008260:	4618      	mov	r0, r3
 8008262:	f04f 0100 	mov.w	r1, #0
 8008266:	4602      	mov	r2, r0
 8008268:	460b      	mov	r3, r1
 800826a:	1894      	adds	r4, r2, r2
 800826c:	623c      	str	r4, [r7, #32]
 800826e:	415b      	adcs	r3, r3
 8008270:	627b      	str	r3, [r7, #36]	; 0x24
 8008272:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8008276:	1812      	adds	r2, r2, r0
 8008278:	eb41 0303 	adc.w	r3, r1, r3
 800827c:	f04f 0400 	mov.w	r4, #0
 8008280:	f04f 0500 	mov.w	r5, #0
 8008284:	00dd      	lsls	r5, r3, #3
 8008286:	ea45 7552 	orr.w	r5, r5, r2, lsr #29
 800828a:	00d4      	lsls	r4, r2, #3
 800828c:	4622      	mov	r2, r4
 800828e:	462b      	mov	r3, r5
 8008290:	1814      	adds	r4, r2, r0
 8008292:	653c      	str	r4, [r7, #80]	; 0x50
 8008294:	414b      	adcs	r3, r1
 8008296:	657b      	str	r3, [r7, #84]	; 0x54
 8008298:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800829a:	685b      	ldr	r3, [r3, #4]
 800829c:	461a      	mov	r2, r3
 800829e:	f04f 0300 	mov.w	r3, #0
 80082a2:	1891      	adds	r1, r2, r2
 80082a4:	61b9      	str	r1, [r7, #24]
 80082a6:	415b      	adcs	r3, r3
 80082a8:	61fb      	str	r3, [r7, #28]
 80082aa:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80082ae:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 80082b2:	f7f7 ff89 	bl	80001c8 <__aeabi_uldivmod>
 80082b6:	4602      	mov	r2, r0
 80082b8:	460b      	mov	r3, r1
 80082ba:	4b6c      	ldr	r3, [pc, #432]	; (800846c <UART_SetConfig+0x38c>)
 80082bc:	fba3 1302 	umull	r1, r3, r3, r2
 80082c0:	095b      	lsrs	r3, r3, #5
 80082c2:	2164      	movs	r1, #100	; 0x64
 80082c4:	fb01 f303 	mul.w	r3, r1, r3
 80082c8:	1ad3      	subs	r3, r2, r3
 80082ca:	00db      	lsls	r3, r3, #3
 80082cc:	3332      	adds	r3, #50	; 0x32
 80082ce:	4a67      	ldr	r2, [pc, #412]	; (800846c <UART_SetConfig+0x38c>)
 80082d0:	fba2 2303 	umull	r2, r3, r2, r3
 80082d4:	095b      	lsrs	r3, r3, #5
 80082d6:	f003 0207 	and.w	r2, r3, #7
 80082da:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80082dc:	681b      	ldr	r3, [r3, #0]
 80082de:	4432      	add	r2, r6
 80082e0:	609a      	str	r2, [r3, #8]
 80082e2:	e0b9      	b.n	8008458 <UART_SetConfig+0x378>
 80082e4:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80082e6:	461c      	mov	r4, r3
 80082e8:	f04f 0500 	mov.w	r5, #0
 80082ec:	4622      	mov	r2, r4
 80082ee:	462b      	mov	r3, r5
 80082f0:	1891      	adds	r1, r2, r2
 80082f2:	6139      	str	r1, [r7, #16]
 80082f4:	415b      	adcs	r3, r3
 80082f6:	617b      	str	r3, [r7, #20]
 80082f8:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 80082fc:	1912      	adds	r2, r2, r4
 80082fe:	eb45 0303 	adc.w	r3, r5, r3
 8008302:	f04f 0000 	mov.w	r0, #0
 8008306:	f04f 0100 	mov.w	r1, #0
 800830a:	00d9      	lsls	r1, r3, #3
 800830c:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 8008310:	00d0      	lsls	r0, r2, #3
 8008312:	4602      	mov	r2, r0
 8008314:	460b      	mov	r3, r1
 8008316:	eb12 0804 	adds.w	r8, r2, r4
 800831a:	eb43 0905 	adc.w	r9, r3, r5
 800831e:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8008320:	685b      	ldr	r3, [r3, #4]
 8008322:	4618      	mov	r0, r3
 8008324:	f04f 0100 	mov.w	r1, #0
 8008328:	f04f 0200 	mov.w	r2, #0
 800832c:	f04f 0300 	mov.w	r3, #0
 8008330:	008b      	lsls	r3, r1, #2
 8008332:	ea43 7390 	orr.w	r3, r3, r0, lsr #30
 8008336:	0082      	lsls	r2, r0, #2
 8008338:	4640      	mov	r0, r8
 800833a:	4649      	mov	r1, r9
 800833c:	f7f7 ff44 	bl	80001c8 <__aeabi_uldivmod>
 8008340:	4602      	mov	r2, r0
 8008342:	460b      	mov	r3, r1
 8008344:	4b49      	ldr	r3, [pc, #292]	; (800846c <UART_SetConfig+0x38c>)
 8008346:	fba3 2302 	umull	r2, r3, r3, r2
 800834a:	095b      	lsrs	r3, r3, #5
 800834c:	011e      	lsls	r6, r3, #4
 800834e:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8008350:	4618      	mov	r0, r3
 8008352:	f04f 0100 	mov.w	r1, #0
 8008356:	4602      	mov	r2, r0
 8008358:	460b      	mov	r3, r1
 800835a:	1894      	adds	r4, r2, r2
 800835c:	60bc      	str	r4, [r7, #8]
 800835e:	415b      	adcs	r3, r3
 8008360:	60fb      	str	r3, [r7, #12]
 8008362:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8008366:	1812      	adds	r2, r2, r0
 8008368:	eb41 0303 	adc.w	r3, r1, r3
 800836c:	f04f 0400 	mov.w	r4, #0
 8008370:	f04f 0500 	mov.w	r5, #0
 8008374:	00dd      	lsls	r5, r3, #3
 8008376:	ea45 7552 	orr.w	r5, r5, r2, lsr #29
 800837a:	00d4      	lsls	r4, r2, #3
 800837c:	4622      	mov	r2, r4
 800837e:	462b      	mov	r3, r5
 8008380:	1814      	adds	r4, r2, r0
 8008382:	64bc      	str	r4, [r7, #72]	; 0x48
 8008384:	414b      	adcs	r3, r1
 8008386:	64fb      	str	r3, [r7, #76]	; 0x4c
 8008388:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800838a:	685b      	ldr	r3, [r3, #4]
 800838c:	4618      	mov	r0, r3
 800838e:	f04f 0100 	mov.w	r1, #0
 8008392:	f04f 0200 	mov.w	r2, #0
 8008396:	f04f 0300 	mov.w	r3, #0
 800839a:	008b      	lsls	r3, r1, #2
 800839c:	ea43 7390 	orr.w	r3, r3, r0, lsr #30
 80083a0:	0082      	lsls	r2, r0, #2
 80083a2:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	; 0x48
 80083a6:	f7f7 ff0f 	bl	80001c8 <__aeabi_uldivmod>
 80083aa:	4602      	mov	r2, r0
 80083ac:	460b      	mov	r3, r1
 80083ae:	4b2f      	ldr	r3, [pc, #188]	; (800846c <UART_SetConfig+0x38c>)
 80083b0:	fba3 1302 	umull	r1, r3, r3, r2
 80083b4:	095b      	lsrs	r3, r3, #5
 80083b6:	2164      	movs	r1, #100	; 0x64
 80083b8:	fb01 f303 	mul.w	r3, r1, r3
 80083bc:	1ad3      	subs	r3, r2, r3
 80083be:	011b      	lsls	r3, r3, #4
 80083c0:	3332      	adds	r3, #50	; 0x32
 80083c2:	4a2a      	ldr	r2, [pc, #168]	; (800846c <UART_SetConfig+0x38c>)
 80083c4:	fba2 2303 	umull	r2, r3, r2, r3
 80083c8:	095b      	lsrs	r3, r3, #5
 80083ca:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80083ce:	441e      	add	r6, r3
 80083d0:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80083d2:	4618      	mov	r0, r3
 80083d4:	f04f 0100 	mov.w	r1, #0
 80083d8:	4602      	mov	r2, r0
 80083da:	460b      	mov	r3, r1
 80083dc:	1894      	adds	r4, r2, r2
 80083de:	603c      	str	r4, [r7, #0]
 80083e0:	415b      	adcs	r3, r3
 80083e2:	607b      	str	r3, [r7, #4]
 80083e4:	e9d7 2300 	ldrd	r2, r3, [r7]
 80083e8:	1812      	adds	r2, r2, r0
 80083ea:	eb41 0303 	adc.w	r3, r1, r3
 80083ee:	f04f 0400 	mov.w	r4, #0
 80083f2:	f04f 0500 	mov.w	r5, #0
 80083f6:	00dd      	lsls	r5, r3, #3
 80083f8:	ea45 7552 	orr.w	r5, r5, r2, lsr #29
 80083fc:	00d4      	lsls	r4, r2, #3
 80083fe:	4622      	mov	r2, r4
 8008400:	462b      	mov	r3, r5
 8008402:	eb12 0a00 	adds.w	sl, r2, r0
 8008406:	eb43 0b01 	adc.w	fp, r3, r1
 800840a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800840c:	685b      	ldr	r3, [r3, #4]
 800840e:	4618      	mov	r0, r3
 8008410:	f04f 0100 	mov.w	r1, #0
 8008414:	f04f 0200 	mov.w	r2, #0
 8008418:	f04f 0300 	mov.w	r3, #0
 800841c:	008b      	lsls	r3, r1, #2
 800841e:	ea43 7390 	orr.w	r3, r3, r0, lsr #30
 8008422:	0082      	lsls	r2, r0, #2
 8008424:	4650      	mov	r0, sl
 8008426:	4659      	mov	r1, fp
 8008428:	f7f7 fece 	bl	80001c8 <__aeabi_uldivmod>
 800842c:	4602      	mov	r2, r0
 800842e:	460b      	mov	r3, r1
 8008430:	4b0e      	ldr	r3, [pc, #56]	; (800846c <UART_SetConfig+0x38c>)
 8008432:	fba3 1302 	umull	r1, r3, r3, r2
 8008436:	095b      	lsrs	r3, r3, #5
 8008438:	2164      	movs	r1, #100	; 0x64
 800843a:	fb01 f303 	mul.w	r3, r1, r3
 800843e:	1ad3      	subs	r3, r2, r3
 8008440:	011b      	lsls	r3, r3, #4
 8008442:	3332      	adds	r3, #50	; 0x32
 8008444:	4a09      	ldr	r2, [pc, #36]	; (800846c <UART_SetConfig+0x38c>)
 8008446:	fba2 2303 	umull	r2, r3, r2, r3
 800844a:	095b      	lsrs	r3, r3, #5
 800844c:	f003 020f 	and.w	r2, r3, #15
 8008450:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8008452:	681b      	ldr	r3, [r3, #0]
 8008454:	4432      	add	r2, r6
 8008456:	609a      	str	r2, [r3, #8]
 8008458:	bf00      	nop
 800845a:	377c      	adds	r7, #124	; 0x7c
 800845c:	46bd      	mov	sp, r7
 800845e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008462:	bf00      	nop
 8008464:	40011000 	.word	0x40011000
 8008468:	40011400 	.word	0x40011400
 800846c:	51eb851f 	.word	0x51eb851f

08008470 <__errno>:
 8008470:	4b01      	ldr	r3, [pc, #4]	; (8008478 <__errno+0x8>)
 8008472:	6818      	ldr	r0, [r3, #0]
 8008474:	4770      	bx	lr
 8008476:	bf00      	nop
 8008478:	200000f0 	.word	0x200000f0

0800847c <__libc_init_array>:
 800847c:	b570      	push	{r4, r5, r6, lr}
 800847e:	4d0d      	ldr	r5, [pc, #52]	; (80084b4 <__libc_init_array+0x38>)
 8008480:	4c0d      	ldr	r4, [pc, #52]	; (80084b8 <__libc_init_array+0x3c>)
 8008482:	1b64      	subs	r4, r4, r5
 8008484:	10a4      	asrs	r4, r4, #2
 8008486:	2600      	movs	r6, #0
 8008488:	42a6      	cmp	r6, r4
 800848a:	d109      	bne.n	80084a0 <__libc_init_array+0x24>
 800848c:	4d0b      	ldr	r5, [pc, #44]	; (80084bc <__libc_init_array+0x40>)
 800848e:	4c0c      	ldr	r4, [pc, #48]	; (80084c0 <__libc_init_array+0x44>)
 8008490:	f000 fee2 	bl	8009258 <_init>
 8008494:	1b64      	subs	r4, r4, r5
 8008496:	10a4      	asrs	r4, r4, #2
 8008498:	2600      	movs	r6, #0
 800849a:	42a6      	cmp	r6, r4
 800849c:	d105      	bne.n	80084aa <__libc_init_array+0x2e>
 800849e:	bd70      	pop	{r4, r5, r6, pc}
 80084a0:	f855 3b04 	ldr.w	r3, [r5], #4
 80084a4:	4798      	blx	r3
 80084a6:	3601      	adds	r6, #1
 80084a8:	e7ee      	b.n	8008488 <__libc_init_array+0xc>
 80084aa:	f855 3b04 	ldr.w	r3, [r5], #4
 80084ae:	4798      	blx	r3
 80084b0:	3601      	adds	r6, #1
 80084b2:	e7f2      	b.n	800849a <__libc_init_array+0x1e>
 80084b4:	08009748 	.word	0x08009748
 80084b8:	08009748 	.word	0x08009748
 80084bc:	08009748 	.word	0x08009748
 80084c0:	0800974c 	.word	0x0800974c

080084c4 <memcpy>:
 80084c4:	440a      	add	r2, r1
 80084c6:	4291      	cmp	r1, r2
 80084c8:	f100 33ff 	add.w	r3, r0, #4294967295
 80084cc:	d100      	bne.n	80084d0 <memcpy+0xc>
 80084ce:	4770      	bx	lr
 80084d0:	b510      	push	{r4, lr}
 80084d2:	f811 4b01 	ldrb.w	r4, [r1], #1
 80084d6:	f803 4f01 	strb.w	r4, [r3, #1]!
 80084da:	4291      	cmp	r1, r2
 80084dc:	d1f9      	bne.n	80084d2 <memcpy+0xe>
 80084de:	bd10      	pop	{r4, pc}

080084e0 <memset>:
 80084e0:	4402      	add	r2, r0
 80084e2:	4603      	mov	r3, r0
 80084e4:	4293      	cmp	r3, r2
 80084e6:	d100      	bne.n	80084ea <memset+0xa>
 80084e8:	4770      	bx	lr
 80084ea:	f803 1b01 	strb.w	r1, [r3], #1
 80084ee:	e7f9      	b.n	80084e4 <memset+0x4>

080084f0 <sinf>:
 80084f0:	ee10 3a10 	vmov	r3, s0
 80084f4:	b507      	push	{r0, r1, r2, lr}
 80084f6:	4a1d      	ldr	r2, [pc, #116]	; (800856c <sinf+0x7c>)
 80084f8:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80084fc:	4293      	cmp	r3, r2
 80084fe:	dc05      	bgt.n	800850c <sinf+0x1c>
 8008500:	eddf 0a1b 	vldr	s1, [pc, #108]	; 8008570 <sinf+0x80>
 8008504:	2000      	movs	r0, #0
 8008506:	f000 fd9d 	bl	8009044 <__kernel_sinf>
 800850a:	e004      	b.n	8008516 <sinf+0x26>
 800850c:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8008510:	db04      	blt.n	800851c <sinf+0x2c>
 8008512:	ee30 0a40 	vsub.f32	s0, s0, s0
 8008516:	b003      	add	sp, #12
 8008518:	f85d fb04 	ldr.w	pc, [sp], #4
 800851c:	4668      	mov	r0, sp
 800851e:	f000 f967 	bl	80087f0 <__ieee754_rem_pio2f>
 8008522:	f000 0003 	and.w	r0, r0, #3
 8008526:	2801      	cmp	r0, #1
 8008528:	d008      	beq.n	800853c <sinf+0x4c>
 800852a:	2802      	cmp	r0, #2
 800852c:	d00d      	beq.n	800854a <sinf+0x5a>
 800852e:	b9b0      	cbnz	r0, 800855e <sinf+0x6e>
 8008530:	eddd 0a01 	vldr	s1, [sp, #4]
 8008534:	ed9d 0a00 	vldr	s0, [sp]
 8008538:	2001      	movs	r0, #1
 800853a:	e7e4      	b.n	8008506 <sinf+0x16>
 800853c:	eddd 0a01 	vldr	s1, [sp, #4]
 8008540:	ed9d 0a00 	vldr	s0, [sp]
 8008544:	f000 fa94 	bl	8008a70 <__kernel_cosf>
 8008548:	e7e5      	b.n	8008516 <sinf+0x26>
 800854a:	eddd 0a01 	vldr	s1, [sp, #4]
 800854e:	ed9d 0a00 	vldr	s0, [sp]
 8008552:	2001      	movs	r0, #1
 8008554:	f000 fd76 	bl	8009044 <__kernel_sinf>
 8008558:	eeb1 0a40 	vneg.f32	s0, s0
 800855c:	e7db      	b.n	8008516 <sinf+0x26>
 800855e:	eddd 0a01 	vldr	s1, [sp, #4]
 8008562:	ed9d 0a00 	vldr	s0, [sp]
 8008566:	f000 fa83 	bl	8008a70 <__kernel_cosf>
 800856a:	e7f5      	b.n	8008558 <sinf+0x68>
 800856c:	3f490fd8 	.word	0x3f490fd8
 8008570:	00000000 	.word	0x00000000

08008574 <asinf>:
 8008574:	b508      	push	{r3, lr}
 8008576:	ed2d 8b02 	vpush	{d8}
 800857a:	eeb0 8a40 	vmov.f32	s16, s0
 800857e:	f000 f851 	bl	8008624 <__ieee754_asinf>
 8008582:	4b13      	ldr	r3, [pc, #76]	; (80085d0 <asinf+0x5c>)
 8008584:	f993 3000 	ldrsb.w	r3, [r3]
 8008588:	3301      	adds	r3, #1
 800858a:	eef0 8a40 	vmov.f32	s17, s0
 800858e:	d01a      	beq.n	80085c6 <asinf+0x52>
 8008590:	eeb4 8a48 	vcmp.f32	s16, s16
 8008594:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008598:	d615      	bvs.n	80085c6 <asinf+0x52>
 800859a:	eeb0 0a48 	vmov.f32	s0, s16
 800859e:	f000 fd99 	bl	80090d4 <fabsf>
 80085a2:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80085a6:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80085aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80085ae:	dd0a      	ble.n	80085c6 <asinf+0x52>
 80085b0:	f7ff ff5e 	bl	8008470 <__errno>
 80085b4:	ecbd 8b02 	vpop	{d8}
 80085b8:	2321      	movs	r3, #33	; 0x21
 80085ba:	6003      	str	r3, [r0, #0]
 80085bc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80085c0:	4804      	ldr	r0, [pc, #16]	; (80085d4 <asinf+0x60>)
 80085c2:	f000 bdd1 	b.w	8009168 <nanf>
 80085c6:	eeb0 0a68 	vmov.f32	s0, s17
 80085ca:	ecbd 8b02 	vpop	{d8}
 80085ce:	bd08      	pop	{r3, pc}
 80085d0:	20000154 	.word	0x20000154
 80085d4:	0800936c 	.word	0x0800936c

080085d8 <sqrtf>:
 80085d8:	b508      	push	{r3, lr}
 80085da:	ed2d 8b02 	vpush	{d8}
 80085de:	eeb0 8a40 	vmov.f32	s16, s0
 80085e2:	f000 fa41 	bl	8008a68 <__ieee754_sqrtf>
 80085e6:	4b0d      	ldr	r3, [pc, #52]	; (800861c <sqrtf+0x44>)
 80085e8:	f993 3000 	ldrsb.w	r3, [r3]
 80085ec:	3301      	adds	r3, #1
 80085ee:	d011      	beq.n	8008614 <sqrtf+0x3c>
 80085f0:	eeb4 8a48 	vcmp.f32	s16, s16
 80085f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80085f8:	d60c      	bvs.n	8008614 <sqrtf+0x3c>
 80085fa:	eddf 8a09 	vldr	s17, [pc, #36]	; 8008620 <sqrtf+0x48>
 80085fe:	eeb4 8ae8 	vcmpe.f32	s16, s17
 8008602:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008606:	d505      	bpl.n	8008614 <sqrtf+0x3c>
 8008608:	f7ff ff32 	bl	8008470 <__errno>
 800860c:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 8008610:	2321      	movs	r3, #33	; 0x21
 8008612:	6003      	str	r3, [r0, #0]
 8008614:	ecbd 8b02 	vpop	{d8}
 8008618:	bd08      	pop	{r3, pc}
 800861a:	bf00      	nop
 800861c:	20000154 	.word	0x20000154
 8008620:	00000000 	.word	0x00000000

08008624 <__ieee754_asinf>:
 8008624:	b538      	push	{r3, r4, r5, lr}
 8008626:	ee10 5a10 	vmov	r5, s0
 800862a:	f025 4400 	bic.w	r4, r5, #2147483648	; 0x80000000
 800862e:	f1b4 5f7e 	cmp.w	r4, #1065353216	; 0x3f800000
 8008632:	ed2d 8b04 	vpush	{d8-d9}
 8008636:	d10c      	bne.n	8008652 <__ieee754_asinf+0x2e>
 8008638:	eddf 7a5d 	vldr	s15, [pc, #372]	; 80087b0 <__ieee754_asinf+0x18c>
 800863c:	ed9f 7a5d 	vldr	s14, [pc, #372]	; 80087b4 <__ieee754_asinf+0x190>
 8008640:	ee60 7a27 	vmul.f32	s15, s0, s15
 8008644:	eee0 7a07 	vfma.f32	s15, s0, s14
 8008648:	eeb0 0a67 	vmov.f32	s0, s15
 800864c:	ecbd 8b04 	vpop	{d8-d9}
 8008650:	bd38      	pop	{r3, r4, r5, pc}
 8008652:	dd04      	ble.n	800865e <__ieee754_asinf+0x3a>
 8008654:	ee70 7a40 	vsub.f32	s15, s0, s0
 8008658:	ee87 0aa7 	vdiv.f32	s0, s15, s15
 800865c:	e7f6      	b.n	800864c <__ieee754_asinf+0x28>
 800865e:	f1b4 5f7c 	cmp.w	r4, #1056964608	; 0x3f000000
 8008662:	eef7 8a00 	vmov.f32	s17, #112	; 0x3f800000  1.0
 8008666:	da0b      	bge.n	8008680 <__ieee754_asinf+0x5c>
 8008668:	f1b4 5f48 	cmp.w	r4, #838860800	; 0x32000000
 800866c:	da52      	bge.n	8008714 <__ieee754_asinf+0xf0>
 800866e:	eddf 7a52 	vldr	s15, [pc, #328]	; 80087b8 <__ieee754_asinf+0x194>
 8008672:	ee70 7a27 	vadd.f32	s15, s0, s15
 8008676:	eef4 7ae8 	vcmpe.f32	s15, s17
 800867a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800867e:	dce5      	bgt.n	800864c <__ieee754_asinf+0x28>
 8008680:	f000 fd28 	bl	80090d4 <fabsf>
 8008684:	ee38 0ac0 	vsub.f32	s0, s17, s0
 8008688:	eeb6 8a00 	vmov.f32	s16, #96	; 0x3f000000  0.5
 800868c:	ee20 8a08 	vmul.f32	s16, s0, s16
 8008690:	eddf 7a4a 	vldr	s15, [pc, #296]	; 80087bc <__ieee754_asinf+0x198>
 8008694:	ed9f 7a4a 	vldr	s14, [pc, #296]	; 80087c0 <__ieee754_asinf+0x19c>
 8008698:	ed9f 9a4a 	vldr	s18, [pc, #296]	; 80087c4 <__ieee754_asinf+0x1a0>
 800869c:	eea8 7a27 	vfma.f32	s14, s16, s15
 80086a0:	eddf 7a49 	vldr	s15, [pc, #292]	; 80087c8 <__ieee754_asinf+0x1a4>
 80086a4:	eee7 7a08 	vfma.f32	s15, s14, s16
 80086a8:	ed9f 7a48 	vldr	s14, [pc, #288]	; 80087cc <__ieee754_asinf+0x1a8>
 80086ac:	eea7 7a88 	vfma.f32	s14, s15, s16
 80086b0:	eddf 7a47 	vldr	s15, [pc, #284]	; 80087d0 <__ieee754_asinf+0x1ac>
 80086b4:	eee7 7a08 	vfma.f32	s15, s14, s16
 80086b8:	ed9f 7a46 	vldr	s14, [pc, #280]	; 80087d4 <__ieee754_asinf+0x1b0>
 80086bc:	eea7 9a88 	vfma.f32	s18, s15, s16
 80086c0:	eddf 7a45 	vldr	s15, [pc, #276]	; 80087d8 <__ieee754_asinf+0x1b4>
 80086c4:	eee8 7a07 	vfma.f32	s15, s16, s14
 80086c8:	ed9f 7a44 	vldr	s14, [pc, #272]	; 80087dc <__ieee754_asinf+0x1b8>
 80086cc:	eea7 7a88 	vfma.f32	s14, s15, s16
 80086d0:	eddf 7a43 	vldr	s15, [pc, #268]	; 80087e0 <__ieee754_asinf+0x1bc>
 80086d4:	eee7 7a08 	vfma.f32	s15, s14, s16
 80086d8:	eeb0 0a48 	vmov.f32	s0, s16
 80086dc:	eee7 8a88 	vfma.f32	s17, s15, s16
 80086e0:	f000 f9c2 	bl	8008a68 <__ieee754_sqrtf>
 80086e4:	4b3f      	ldr	r3, [pc, #252]	; (80087e4 <__ieee754_asinf+0x1c0>)
 80086e6:	ee29 9a08 	vmul.f32	s18, s18, s16
 80086ea:	429c      	cmp	r4, r3
 80086ec:	ee89 6a28 	vdiv.f32	s12, s18, s17
 80086f0:	eef0 6a00 	vmov.f32	s13, #0	; 0x40000000  2.0
 80086f4:	dd3d      	ble.n	8008772 <__ieee754_asinf+0x14e>
 80086f6:	eea0 0a06 	vfma.f32	s0, s0, s12
 80086fa:	eddf 7a3b 	vldr	s15, [pc, #236]	; 80087e8 <__ieee754_asinf+0x1c4>
 80086fe:	eee0 7a26 	vfma.f32	s15, s0, s13
 8008702:	ed9f 0a2c 	vldr	s0, [pc, #176]	; 80087b4 <__ieee754_asinf+0x190>
 8008706:	ee30 0a67 	vsub.f32	s0, s0, s15
 800870a:	2d00      	cmp	r5, #0
 800870c:	bfd8      	it	le
 800870e:	eeb1 0a40 	vnegle.f32	s0, s0
 8008712:	e79b      	b.n	800864c <__ieee754_asinf+0x28>
 8008714:	ee60 7a00 	vmul.f32	s15, s0, s0
 8008718:	eddf 6a28 	vldr	s13, [pc, #160]	; 80087bc <__ieee754_asinf+0x198>
 800871c:	ed9f 7a28 	vldr	s14, [pc, #160]	; 80087c0 <__ieee754_asinf+0x19c>
 8008720:	ed9f 6a2c 	vldr	s12, [pc, #176]	; 80087d4 <__ieee754_asinf+0x1b0>
 8008724:	eea7 7aa6 	vfma.f32	s14, s15, s13
 8008728:	eddf 6a27 	vldr	s13, [pc, #156]	; 80087c8 <__ieee754_asinf+0x1a4>
 800872c:	eee7 6a27 	vfma.f32	s13, s14, s15
 8008730:	ed9f 7a26 	vldr	s14, [pc, #152]	; 80087cc <__ieee754_asinf+0x1a8>
 8008734:	eea6 7aa7 	vfma.f32	s14, s13, s15
 8008738:	eddf 6a25 	vldr	s13, [pc, #148]	; 80087d0 <__ieee754_asinf+0x1ac>
 800873c:	eee7 6a27 	vfma.f32	s13, s14, s15
 8008740:	ed9f 7a20 	vldr	s14, [pc, #128]	; 80087c4 <__ieee754_asinf+0x1a0>
 8008744:	eea6 7aa7 	vfma.f32	s14, s13, s15
 8008748:	eddf 6a23 	vldr	s13, [pc, #140]	; 80087d8 <__ieee754_asinf+0x1b4>
 800874c:	eee7 6a86 	vfma.f32	s13, s15, s12
 8008750:	ed9f 6a22 	vldr	s12, [pc, #136]	; 80087dc <__ieee754_asinf+0x1b8>
 8008754:	eea6 6aa7 	vfma.f32	s12, s13, s15
 8008758:	eddf 6a21 	vldr	s13, [pc, #132]	; 80087e0 <__ieee754_asinf+0x1bc>
 800875c:	eee6 6a27 	vfma.f32	s13, s12, s15
 8008760:	ee27 7a27 	vmul.f32	s14, s14, s15
 8008764:	eee6 8aa7 	vfma.f32	s17, s13, s15
 8008768:	eec7 7a28 	vdiv.f32	s15, s14, s17
 800876c:	eea0 0a27 	vfma.f32	s0, s0, s15
 8008770:	e76c      	b.n	800864c <__ieee754_asinf+0x28>
 8008772:	ee10 3a10 	vmov	r3, s0
 8008776:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 800877a:	f023 030f 	bic.w	r3, r3, #15
 800877e:	ee07 3a10 	vmov	s14, r3
 8008782:	eea7 8a47 	vfms.f32	s16, s14, s14
 8008786:	ee70 7a07 	vadd.f32	s15, s0, s14
 800878a:	ee30 0a00 	vadd.f32	s0, s0, s0
 800878e:	eec8 5a27 	vdiv.f32	s11, s16, s15
 8008792:	eddf 7a07 	vldr	s15, [pc, #28]	; 80087b0 <__ieee754_asinf+0x18c>
 8008796:	eee5 7ae6 	vfms.f32	s15, s11, s13
 800879a:	eed0 7a06 	vfnms.f32	s15, s0, s12
 800879e:	ed9f 0a13 	vldr	s0, [pc, #76]	; 80087ec <__ieee754_asinf+0x1c8>
 80087a2:	eeb0 6a40 	vmov.f32	s12, s0
 80087a6:	eea7 6a66 	vfms.f32	s12, s14, s13
 80087aa:	ee77 7ac6 	vsub.f32	s15, s15, s12
 80087ae:	e7aa      	b.n	8008706 <__ieee754_asinf+0xe2>
 80087b0:	b33bbd2e 	.word	0xb33bbd2e
 80087b4:	3fc90fdb 	.word	0x3fc90fdb
 80087b8:	7149f2ca 	.word	0x7149f2ca
 80087bc:	3811ef08 	.word	0x3811ef08
 80087c0:	3a4f7f04 	.word	0x3a4f7f04
 80087c4:	3e2aaaab 	.word	0x3e2aaaab
 80087c8:	bd241146 	.word	0xbd241146
 80087cc:	3e4e0aa8 	.word	0x3e4e0aa8
 80087d0:	bea6b090 	.word	0xbea6b090
 80087d4:	3d9dc62e 	.word	0x3d9dc62e
 80087d8:	bf303361 	.word	0xbf303361
 80087dc:	4001572d 	.word	0x4001572d
 80087e0:	c019d139 	.word	0xc019d139
 80087e4:	3f799999 	.word	0x3f799999
 80087e8:	333bbd2e 	.word	0x333bbd2e
 80087ec:	3f490fdb 	.word	0x3f490fdb

080087f0 <__ieee754_rem_pio2f>:
 80087f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80087f2:	ee10 6a10 	vmov	r6, s0
 80087f6:	4b8e      	ldr	r3, [pc, #568]	; (8008a30 <__ieee754_rem_pio2f+0x240>)
 80087f8:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 80087fc:	429d      	cmp	r5, r3
 80087fe:	b087      	sub	sp, #28
 8008800:	eef0 7a40 	vmov.f32	s15, s0
 8008804:	4604      	mov	r4, r0
 8008806:	dc05      	bgt.n	8008814 <__ieee754_rem_pio2f+0x24>
 8008808:	2300      	movs	r3, #0
 800880a:	ed80 0a00 	vstr	s0, [r0]
 800880e:	6043      	str	r3, [r0, #4]
 8008810:	2000      	movs	r0, #0
 8008812:	e01a      	b.n	800884a <__ieee754_rem_pio2f+0x5a>
 8008814:	4b87      	ldr	r3, [pc, #540]	; (8008a34 <__ieee754_rem_pio2f+0x244>)
 8008816:	429d      	cmp	r5, r3
 8008818:	dc46      	bgt.n	80088a8 <__ieee754_rem_pio2f+0xb8>
 800881a:	2e00      	cmp	r6, #0
 800881c:	ed9f 0a86 	vldr	s0, [pc, #536]	; 8008a38 <__ieee754_rem_pio2f+0x248>
 8008820:	4b86      	ldr	r3, [pc, #536]	; (8008a3c <__ieee754_rem_pio2f+0x24c>)
 8008822:	f025 050f 	bic.w	r5, r5, #15
 8008826:	dd1f      	ble.n	8008868 <__ieee754_rem_pio2f+0x78>
 8008828:	429d      	cmp	r5, r3
 800882a:	ee77 7ac0 	vsub.f32	s15, s15, s0
 800882e:	d00e      	beq.n	800884e <__ieee754_rem_pio2f+0x5e>
 8008830:	ed9f 7a83 	vldr	s14, [pc, #524]	; 8008a40 <__ieee754_rem_pio2f+0x250>
 8008834:	ee37 0ac7 	vsub.f32	s0, s15, s14
 8008838:	ee77 7ac0 	vsub.f32	s15, s15, s0
 800883c:	ed80 0a00 	vstr	s0, [r0]
 8008840:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008844:	2001      	movs	r0, #1
 8008846:	edc4 7a01 	vstr	s15, [r4, #4]
 800884a:	b007      	add	sp, #28
 800884c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800884e:	ed9f 0a7d 	vldr	s0, [pc, #500]	; 8008a44 <__ieee754_rem_pio2f+0x254>
 8008852:	ed9f 7a7d 	vldr	s14, [pc, #500]	; 8008a48 <__ieee754_rem_pio2f+0x258>
 8008856:	ee77 7ac0 	vsub.f32	s15, s15, s0
 800885a:	ee77 6ac7 	vsub.f32	s13, s15, s14
 800885e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008862:	edc0 6a00 	vstr	s13, [r0]
 8008866:	e7eb      	b.n	8008840 <__ieee754_rem_pio2f+0x50>
 8008868:	429d      	cmp	r5, r3
 800886a:	ee77 7a80 	vadd.f32	s15, s15, s0
 800886e:	d00e      	beq.n	800888e <__ieee754_rem_pio2f+0x9e>
 8008870:	ed9f 7a73 	vldr	s14, [pc, #460]	; 8008a40 <__ieee754_rem_pio2f+0x250>
 8008874:	ee37 0a87 	vadd.f32	s0, s15, s14
 8008878:	ee77 7ac0 	vsub.f32	s15, s15, s0
 800887c:	ed80 0a00 	vstr	s0, [r0]
 8008880:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008884:	f04f 30ff 	mov.w	r0, #4294967295
 8008888:	edc4 7a01 	vstr	s15, [r4, #4]
 800888c:	e7dd      	b.n	800884a <__ieee754_rem_pio2f+0x5a>
 800888e:	ed9f 0a6d 	vldr	s0, [pc, #436]	; 8008a44 <__ieee754_rem_pio2f+0x254>
 8008892:	ed9f 7a6d 	vldr	s14, [pc, #436]	; 8008a48 <__ieee754_rem_pio2f+0x258>
 8008896:	ee77 7a80 	vadd.f32	s15, s15, s0
 800889a:	ee77 6a87 	vadd.f32	s13, s15, s14
 800889e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80088a2:	edc0 6a00 	vstr	s13, [r0]
 80088a6:	e7eb      	b.n	8008880 <__ieee754_rem_pio2f+0x90>
 80088a8:	4b68      	ldr	r3, [pc, #416]	; (8008a4c <__ieee754_rem_pio2f+0x25c>)
 80088aa:	429d      	cmp	r5, r3
 80088ac:	dc72      	bgt.n	8008994 <__ieee754_rem_pio2f+0x1a4>
 80088ae:	f000 fc11 	bl	80090d4 <fabsf>
 80088b2:	ed9f 7a67 	vldr	s14, [pc, #412]	; 8008a50 <__ieee754_rem_pio2f+0x260>
 80088b6:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80088ba:	eee0 7a07 	vfma.f32	s15, s0, s14
 80088be:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80088c2:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80088c6:	ee17 0a90 	vmov	r0, s15
 80088ca:	eddf 7a5b 	vldr	s15, [pc, #364]	; 8008a38 <__ieee754_rem_pio2f+0x248>
 80088ce:	eea7 0a67 	vfms.f32	s0, s14, s15
 80088d2:	281f      	cmp	r0, #31
 80088d4:	eddf 7a5a 	vldr	s15, [pc, #360]	; 8008a40 <__ieee754_rem_pio2f+0x250>
 80088d8:	ee67 7a27 	vmul.f32	s15, s14, s15
 80088dc:	eeb1 6a47 	vneg.f32	s12, s14
 80088e0:	ee70 6a67 	vsub.f32	s13, s0, s15
 80088e4:	ee16 2a90 	vmov	r2, s13
 80088e8:	dc1c      	bgt.n	8008924 <__ieee754_rem_pio2f+0x134>
 80088ea:	495a      	ldr	r1, [pc, #360]	; (8008a54 <__ieee754_rem_pio2f+0x264>)
 80088ec:	1e47      	subs	r7, r0, #1
 80088ee:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 80088f2:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 80088f6:	428b      	cmp	r3, r1
 80088f8:	d014      	beq.n	8008924 <__ieee754_rem_pio2f+0x134>
 80088fa:	6022      	str	r2, [r4, #0]
 80088fc:	ed94 7a00 	vldr	s14, [r4]
 8008900:	ee30 0a47 	vsub.f32	s0, s0, s14
 8008904:	2e00      	cmp	r6, #0
 8008906:	ee30 0a67 	vsub.f32	s0, s0, s15
 800890a:	ed84 0a01 	vstr	s0, [r4, #4]
 800890e:	da9c      	bge.n	800884a <__ieee754_rem_pio2f+0x5a>
 8008910:	eeb1 7a47 	vneg.f32	s14, s14
 8008914:	eeb1 0a40 	vneg.f32	s0, s0
 8008918:	ed84 7a00 	vstr	s14, [r4]
 800891c:	ed84 0a01 	vstr	s0, [r4, #4]
 8008920:	4240      	negs	r0, r0
 8008922:	e792      	b.n	800884a <__ieee754_rem_pio2f+0x5a>
 8008924:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8008928:	15eb      	asrs	r3, r5, #23
 800892a:	ebc1 55d5 	rsb	r5, r1, r5, lsr #23
 800892e:	2d08      	cmp	r5, #8
 8008930:	dde3      	ble.n	80088fa <__ieee754_rem_pio2f+0x10a>
 8008932:	eddf 7a44 	vldr	s15, [pc, #272]	; 8008a44 <__ieee754_rem_pio2f+0x254>
 8008936:	eef0 6a40 	vmov.f32	s13, s0
 800893a:	eee6 6a27 	vfma.f32	s13, s12, s15
 800893e:	ee30 0a66 	vsub.f32	s0, s0, s13
 8008942:	eea6 0a27 	vfma.f32	s0, s12, s15
 8008946:	eddf 7a40 	vldr	s15, [pc, #256]	; 8008a48 <__ieee754_rem_pio2f+0x258>
 800894a:	ee97 0a27 	vfnms.f32	s0, s14, s15
 800894e:	ee76 5ac0 	vsub.f32	s11, s13, s0
 8008952:	eef0 7a40 	vmov.f32	s15, s0
 8008956:	ee15 2a90 	vmov	r2, s11
 800895a:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 800895e:	1a5b      	subs	r3, r3, r1
 8008960:	2b19      	cmp	r3, #25
 8008962:	dc04      	bgt.n	800896e <__ieee754_rem_pio2f+0x17e>
 8008964:	edc4 5a00 	vstr	s11, [r4]
 8008968:	eeb0 0a66 	vmov.f32	s0, s13
 800896c:	e7c6      	b.n	80088fc <__ieee754_rem_pio2f+0x10c>
 800896e:	eddf 5a3a 	vldr	s11, [pc, #232]	; 8008a58 <__ieee754_rem_pio2f+0x268>
 8008972:	eeb0 0a66 	vmov.f32	s0, s13
 8008976:	eea6 0a25 	vfma.f32	s0, s12, s11
 800897a:	ee76 7ac0 	vsub.f32	s15, s13, s0
 800897e:	eddf 6a37 	vldr	s13, [pc, #220]	; 8008a5c <__ieee754_rem_pio2f+0x26c>
 8008982:	eee6 7a25 	vfma.f32	s15, s12, s11
 8008986:	eed7 7a26 	vfnms.f32	s15, s14, s13
 800898a:	ee30 7a67 	vsub.f32	s14, s0, s15
 800898e:	ed84 7a00 	vstr	s14, [r4]
 8008992:	e7b3      	b.n	80088fc <__ieee754_rem_pio2f+0x10c>
 8008994:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 8008998:	db06      	blt.n	80089a8 <__ieee754_rem_pio2f+0x1b8>
 800899a:	ee70 7a40 	vsub.f32	s15, s0, s0
 800899e:	edc0 7a01 	vstr	s15, [r0, #4]
 80089a2:	edc0 7a00 	vstr	s15, [r0]
 80089a6:	e733      	b.n	8008810 <__ieee754_rem_pio2f+0x20>
 80089a8:	15ea      	asrs	r2, r5, #23
 80089aa:	3a86      	subs	r2, #134	; 0x86
 80089ac:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 80089b0:	ee07 3a90 	vmov	s15, r3
 80089b4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80089b8:	eddf 6a29 	vldr	s13, [pc, #164]	; 8008a60 <__ieee754_rem_pio2f+0x270>
 80089bc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80089c0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80089c4:	ed8d 7a03 	vstr	s14, [sp, #12]
 80089c8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80089cc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80089d0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80089d4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80089d8:	ed8d 7a04 	vstr	s14, [sp, #16]
 80089dc:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80089e0:	eef5 7a40 	vcmp.f32	s15, #0.0
 80089e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80089e8:	edcd 7a05 	vstr	s15, [sp, #20]
 80089ec:	d11e      	bne.n	8008a2c <__ieee754_rem_pio2f+0x23c>
 80089ee:	eeb5 7a40 	vcmp.f32	s14, #0.0
 80089f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80089f6:	bf14      	ite	ne
 80089f8:	2302      	movne	r3, #2
 80089fa:	2301      	moveq	r3, #1
 80089fc:	4919      	ldr	r1, [pc, #100]	; (8008a64 <__ieee754_rem_pio2f+0x274>)
 80089fe:	9101      	str	r1, [sp, #4]
 8008a00:	2102      	movs	r1, #2
 8008a02:	9100      	str	r1, [sp, #0]
 8008a04:	a803      	add	r0, sp, #12
 8008a06:	4621      	mov	r1, r4
 8008a08:	f000 f892 	bl	8008b30 <__kernel_rem_pio2f>
 8008a0c:	2e00      	cmp	r6, #0
 8008a0e:	f6bf af1c 	bge.w	800884a <__ieee754_rem_pio2f+0x5a>
 8008a12:	edd4 7a00 	vldr	s15, [r4]
 8008a16:	eef1 7a67 	vneg.f32	s15, s15
 8008a1a:	edc4 7a00 	vstr	s15, [r4]
 8008a1e:	edd4 7a01 	vldr	s15, [r4, #4]
 8008a22:	eef1 7a67 	vneg.f32	s15, s15
 8008a26:	edc4 7a01 	vstr	s15, [r4, #4]
 8008a2a:	e779      	b.n	8008920 <__ieee754_rem_pio2f+0x130>
 8008a2c:	2303      	movs	r3, #3
 8008a2e:	e7e5      	b.n	80089fc <__ieee754_rem_pio2f+0x20c>
 8008a30:	3f490fd8 	.word	0x3f490fd8
 8008a34:	4016cbe3 	.word	0x4016cbe3
 8008a38:	3fc90f80 	.word	0x3fc90f80
 8008a3c:	3fc90fd0 	.word	0x3fc90fd0
 8008a40:	37354443 	.word	0x37354443
 8008a44:	37354400 	.word	0x37354400
 8008a48:	2e85a308 	.word	0x2e85a308
 8008a4c:	43490f80 	.word	0x43490f80
 8008a50:	3f22f984 	.word	0x3f22f984
 8008a54:	08009370 	.word	0x08009370
 8008a58:	2e85a300 	.word	0x2e85a300
 8008a5c:	248d3132 	.word	0x248d3132
 8008a60:	43800000 	.word	0x43800000
 8008a64:	080093f0 	.word	0x080093f0

08008a68 <__ieee754_sqrtf>:
 8008a68:	eeb1 0ac0 	vsqrt.f32	s0, s0
 8008a6c:	4770      	bx	lr
	...

08008a70 <__kernel_cosf>:
 8008a70:	ee10 3a10 	vmov	r3, s0
 8008a74:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8008a78:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 8008a7c:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
 8008a80:	da05      	bge.n	8008a8e <__kernel_cosf+0x1e>
 8008a82:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8008a86:	ee17 2a90 	vmov	r2, s15
 8008a8a:	2a00      	cmp	r2, #0
 8008a8c:	d03d      	beq.n	8008b0a <__kernel_cosf+0x9a>
 8008a8e:	ee60 5a00 	vmul.f32	s11, s0, s0
 8008a92:	eddf 7a1f 	vldr	s15, [pc, #124]	; 8008b10 <__kernel_cosf+0xa0>
 8008a96:	ed9f 7a1f 	vldr	s14, [pc, #124]	; 8008b14 <__kernel_cosf+0xa4>
 8008a9a:	eddf 6a1f 	vldr	s13, [pc, #124]	; 8008b18 <__kernel_cosf+0xa8>
 8008a9e:	4a1f      	ldr	r2, [pc, #124]	; (8008b1c <__kernel_cosf+0xac>)
 8008aa0:	eea5 7aa7 	vfma.f32	s14, s11, s15
 8008aa4:	4293      	cmp	r3, r2
 8008aa6:	eddf 7a1e 	vldr	s15, [pc, #120]	; 8008b20 <__kernel_cosf+0xb0>
 8008aaa:	eee7 7a25 	vfma.f32	s15, s14, s11
 8008aae:	ed9f 7a1d 	vldr	s14, [pc, #116]	; 8008b24 <__kernel_cosf+0xb4>
 8008ab2:	eea7 7aa5 	vfma.f32	s14, s15, s11
 8008ab6:	eddf 7a1c 	vldr	s15, [pc, #112]	; 8008b28 <__kernel_cosf+0xb8>
 8008aba:	eee7 7a25 	vfma.f32	s15, s14, s11
 8008abe:	eeb0 7a66 	vmov.f32	s14, s13
 8008ac2:	eea7 7aa5 	vfma.f32	s14, s15, s11
 8008ac6:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
 8008aca:	ee65 7aa6 	vmul.f32	s15, s11, s13
 8008ace:	ee67 6a25 	vmul.f32	s13, s14, s11
 8008ad2:	ee20 7ac0 	vnmul.f32	s14, s1, s0
 8008ad6:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8008ada:	dc04      	bgt.n	8008ae6 <__kernel_cosf+0x76>
 8008adc:	ee37 7ac7 	vsub.f32	s14, s15, s14
 8008ae0:	ee36 0a47 	vsub.f32	s0, s12, s14
 8008ae4:	4770      	bx	lr
 8008ae6:	4a11      	ldr	r2, [pc, #68]	; (8008b2c <__kernel_cosf+0xbc>)
 8008ae8:	4293      	cmp	r3, r2
 8008aea:	bfda      	itte	le
 8008aec:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 8008af0:	ee06 3a90 	vmovle	s13, r3
 8008af4:	eef5 6a02 	vmovgt.f32	s13, #82	; 0x3e900000  0.2812500
 8008af8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008afc:	ee36 0a66 	vsub.f32	s0, s12, s13
 8008b00:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008b04:	ee30 0a67 	vsub.f32	s0, s0, s15
 8008b08:	4770      	bx	lr
 8008b0a:	eeb0 0a46 	vmov.f32	s0, s12
 8008b0e:	4770      	bx	lr
 8008b10:	ad47d74e 	.word	0xad47d74e
 8008b14:	310f74f6 	.word	0x310f74f6
 8008b18:	3d2aaaab 	.word	0x3d2aaaab
 8008b1c:	3e999999 	.word	0x3e999999
 8008b20:	b493f27c 	.word	0xb493f27c
 8008b24:	37d00d01 	.word	0x37d00d01
 8008b28:	bab60b61 	.word	0xbab60b61
 8008b2c:	3f480000 	.word	0x3f480000

08008b30 <__kernel_rem_pio2f>:
 8008b30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008b34:	ed2d 8b04 	vpush	{d8-d9}
 8008b38:	b0d7      	sub	sp, #348	; 0x15c
 8008b3a:	4616      	mov	r6, r2
 8008b3c:	4698      	mov	r8, r3
 8008b3e:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8008b40:	4bbb      	ldr	r3, [pc, #748]	; (8008e30 <__kernel_rem_pio2f+0x300>)
 8008b42:	9001      	str	r0, [sp, #4]
 8008b44:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 8008b48:	1d33      	adds	r3, r6, #4
 8008b4a:	460d      	mov	r5, r1
 8008b4c:	f108 39ff 	add.w	r9, r8, #4294967295
 8008b50:	db29      	blt.n	8008ba6 <__kernel_rem_pio2f+0x76>
 8008b52:	1ef1      	subs	r1, r6, #3
 8008b54:	bf48      	it	mi
 8008b56:	1d31      	addmi	r1, r6, #4
 8008b58:	10c9      	asrs	r1, r1, #3
 8008b5a:	1c4c      	adds	r4, r1, #1
 8008b5c:	00e3      	lsls	r3, r4, #3
 8008b5e:	9302      	str	r3, [sp, #8]
 8008b60:	9b65      	ldr	r3, [sp, #404]	; 0x194
 8008b62:	ed9f 7ab7 	vldr	s14, [pc, #732]	; 8008e40 <__kernel_rem_pio2f+0x310>
 8008b66:	eba1 0009 	sub.w	r0, r1, r9
 8008b6a:	eb03 0e80 	add.w	lr, r3, r0, lsl #2
 8008b6e:	eba6 04c4 	sub.w	r4, r6, r4, lsl #3
 8008b72:	eb07 0c09 	add.w	ip, r7, r9
 8008b76:	f10d 0a68 	add.w	sl, sp, #104	; 0x68
 8008b7a:	2300      	movs	r3, #0
 8008b7c:	4563      	cmp	r3, ip
 8008b7e:	dd14      	ble.n	8008baa <__kernel_rem_pio2f+0x7a>
 8008b80:	ab1a      	add	r3, sp, #104	; 0x68
 8008b82:	eb03 0388 	add.w	r3, r3, r8, lsl #2
 8008b86:	46cc      	mov	ip, r9
 8008b88:	f50d 7a84 	add.w	sl, sp, #264	; 0x108
 8008b8c:	f1c8 0b01 	rsb	fp, r8, #1
 8008b90:	eb0b 020c 	add.w	r2, fp, ip
 8008b94:	4297      	cmp	r7, r2
 8008b96:	db27      	blt.n	8008be8 <__kernel_rem_pio2f+0xb8>
 8008b98:	f8dd e004 	ldr.w	lr, [sp, #4]
 8008b9c:	eddf 7aa8 	vldr	s15, [pc, #672]	; 8008e40 <__kernel_rem_pio2f+0x310>
 8008ba0:	4618      	mov	r0, r3
 8008ba2:	2200      	movs	r2, #0
 8008ba4:	e016      	b.n	8008bd4 <__kernel_rem_pio2f+0xa4>
 8008ba6:	2100      	movs	r1, #0
 8008ba8:	e7d7      	b.n	8008b5a <__kernel_rem_pio2f+0x2a>
 8008baa:	42d8      	cmn	r0, r3
 8008bac:	bf5d      	ittte	pl
 8008bae:	f85e 2023 	ldrpl.w	r2, [lr, r3, lsl #2]
 8008bb2:	ee07 2a90 	vmovpl	s15, r2
 8008bb6:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 8008bba:	eef0 7a47 	vmovmi.f32	s15, s14
 8008bbe:	ecea 7a01 	vstmia	sl!, {s15}
 8008bc2:	3301      	adds	r3, #1
 8008bc4:	e7da      	b.n	8008b7c <__kernel_rem_pio2f+0x4c>
 8008bc6:	ecfe 6a01 	vldmia	lr!, {s13}
 8008bca:	ed90 7a00 	vldr	s14, [r0]
 8008bce:	eee6 7a87 	vfma.f32	s15, s13, s14
 8008bd2:	3201      	adds	r2, #1
 8008bd4:	454a      	cmp	r2, r9
 8008bd6:	f1a0 0004 	sub.w	r0, r0, #4
 8008bda:	ddf4      	ble.n	8008bc6 <__kernel_rem_pio2f+0x96>
 8008bdc:	ecea 7a01 	vstmia	sl!, {s15}
 8008be0:	3304      	adds	r3, #4
 8008be2:	f10c 0c01 	add.w	ip, ip, #1
 8008be6:	e7d3      	b.n	8008b90 <__kernel_rem_pio2f+0x60>
 8008be8:	ab06      	add	r3, sp, #24
 8008bea:	eb03 0387 	add.w	r3, r3, r7, lsl #2
 8008bee:	9304      	str	r3, [sp, #16]
 8008bf0:	9b65      	ldr	r3, [sp, #404]	; 0x194
 8008bf2:	eddf 8a92 	vldr	s17, [pc, #584]	; 8008e3c <__kernel_rem_pio2f+0x30c>
 8008bf6:	ed9f 9a90 	vldr	s18, [pc, #576]	; 8008e38 <__kernel_rem_pio2f+0x308>
 8008bfa:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 8008bfe:	9303      	str	r3, [sp, #12]
 8008c00:	46ba      	mov	sl, r7
 8008c02:	ab56      	add	r3, sp, #344	; 0x158
 8008c04:	eb03 038a 	add.w	r3, r3, sl, lsl #2
 8008c08:	ed13 0a14 	vldr	s0, [r3, #-80]	; 0xffffffb0
 8008c0c:	ab06      	add	r3, sp, #24
 8008c0e:	4618      	mov	r0, r3
 8008c10:	4652      	mov	r2, sl
 8008c12:	2a00      	cmp	r2, #0
 8008c14:	dc51      	bgt.n	8008cba <__kernel_rem_pio2f+0x18a>
 8008c16:	4620      	mov	r0, r4
 8008c18:	9305      	str	r3, [sp, #20]
 8008c1a:	f000 faab 	bl	8009174 <scalbnf>
 8008c1e:	eeb0 8a40 	vmov.f32	s16, s0
 8008c22:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 8008c26:	ee28 0a00 	vmul.f32	s0, s16, s0
 8008c2a:	f000 fa5b 	bl	80090e4 <floorf>
 8008c2e:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 8008c32:	eea0 8a67 	vfms.f32	s16, s0, s15
 8008c36:	2c00      	cmp	r4, #0
 8008c38:	9b05      	ldr	r3, [sp, #20]
 8008c3a:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8008c3e:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8008c42:	edcd 7a00 	vstr	s15, [sp]
 8008c46:	ee38 8a40 	vsub.f32	s16, s16, s0
 8008c4a:	dd4b      	ble.n	8008ce4 <__kernel_rem_pio2f+0x1b4>
 8008c4c:	f10a 3cff 	add.w	ip, sl, #4294967295
 8008c50:	aa06      	add	r2, sp, #24
 8008c52:	f1c4 0e08 	rsb	lr, r4, #8
 8008c56:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 8008c5a:	ee17 1a90 	vmov	r1, s15
 8008c5e:	fa42 f00e 	asr.w	r0, r2, lr
 8008c62:	4401      	add	r1, r0
 8008c64:	9100      	str	r1, [sp, #0]
 8008c66:	fa00 f00e 	lsl.w	r0, r0, lr
 8008c6a:	a906      	add	r1, sp, #24
 8008c6c:	1a12      	subs	r2, r2, r0
 8008c6e:	f841 202c 	str.w	r2, [r1, ip, lsl #2]
 8008c72:	f1c4 0007 	rsb	r0, r4, #7
 8008c76:	fa42 fb00 	asr.w	fp, r2, r0
 8008c7a:	f1bb 0f00 	cmp.w	fp, #0
 8008c7e:	dd43      	ble.n	8008d08 <__kernel_rem_pio2f+0x1d8>
 8008c80:	9a00      	ldr	r2, [sp, #0]
 8008c82:	f04f 0e00 	mov.w	lr, #0
 8008c86:	3201      	adds	r2, #1
 8008c88:	9200      	str	r2, [sp, #0]
 8008c8a:	4670      	mov	r0, lr
 8008c8c:	45f2      	cmp	sl, lr
 8008c8e:	dc6c      	bgt.n	8008d6a <__kernel_rem_pio2f+0x23a>
 8008c90:	2c00      	cmp	r4, #0
 8008c92:	dd04      	ble.n	8008c9e <__kernel_rem_pio2f+0x16e>
 8008c94:	2c01      	cmp	r4, #1
 8008c96:	d079      	beq.n	8008d8c <__kernel_rem_pio2f+0x25c>
 8008c98:	2c02      	cmp	r4, #2
 8008c9a:	f000 8082 	beq.w	8008da2 <__kernel_rem_pio2f+0x272>
 8008c9e:	f1bb 0f02 	cmp.w	fp, #2
 8008ca2:	d131      	bne.n	8008d08 <__kernel_rem_pio2f+0x1d8>
 8008ca4:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8008ca8:	ee30 8a48 	vsub.f32	s16, s0, s16
 8008cac:	b360      	cbz	r0, 8008d08 <__kernel_rem_pio2f+0x1d8>
 8008cae:	4620      	mov	r0, r4
 8008cb0:	f000 fa60 	bl	8009174 <scalbnf>
 8008cb4:	ee38 8a40 	vsub.f32	s16, s16, s0
 8008cb8:	e026      	b.n	8008d08 <__kernel_rem_pio2f+0x1d8>
 8008cba:	ee60 7a28 	vmul.f32	s15, s0, s17
 8008cbe:	3a01      	subs	r2, #1
 8008cc0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008cc4:	a942      	add	r1, sp, #264	; 0x108
 8008cc6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008cca:	eb01 0c82 	add.w	ip, r1, r2, lsl #2
 8008cce:	eea7 0ac9 	vfms.f32	s0, s15, s18
 8008cd2:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8008cd6:	eca0 0a01 	vstmia	r0!, {s0}
 8008cda:	ed9c 0a00 	vldr	s0, [ip]
 8008cde:	ee37 0a80 	vadd.f32	s0, s15, s0
 8008ce2:	e796      	b.n	8008c12 <__kernel_rem_pio2f+0xe2>
 8008ce4:	d107      	bne.n	8008cf6 <__kernel_rem_pio2f+0x1c6>
 8008ce6:	f10a 32ff 	add.w	r2, sl, #4294967295
 8008cea:	a906      	add	r1, sp, #24
 8008cec:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8008cf0:	ea4f 2b22 	mov.w	fp, r2, asr #8
 8008cf4:	e7c1      	b.n	8008c7a <__kernel_rem_pio2f+0x14a>
 8008cf6:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8008cfa:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8008cfe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008d02:	da2f      	bge.n	8008d64 <__kernel_rem_pio2f+0x234>
 8008d04:	f04f 0b00 	mov.w	fp, #0
 8008d08:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8008d0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008d10:	f040 8098 	bne.w	8008e44 <__kernel_rem_pio2f+0x314>
 8008d14:	f10a 33ff 	add.w	r3, sl, #4294967295
 8008d18:	469c      	mov	ip, r3
 8008d1a:	2200      	movs	r2, #0
 8008d1c:	45bc      	cmp	ip, r7
 8008d1e:	da48      	bge.n	8008db2 <__kernel_rem_pio2f+0x282>
 8008d20:	2a00      	cmp	r2, #0
 8008d22:	d05f      	beq.n	8008de4 <__kernel_rem_pio2f+0x2b4>
 8008d24:	aa06      	add	r2, sp, #24
 8008d26:	3c08      	subs	r4, #8
 8008d28:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 8008d2c:	2900      	cmp	r1, #0
 8008d2e:	d07d      	beq.n	8008e2c <__kernel_rem_pio2f+0x2fc>
 8008d30:	4620      	mov	r0, r4
 8008d32:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8008d36:	9301      	str	r3, [sp, #4]
 8008d38:	f000 fa1c 	bl	8009174 <scalbnf>
 8008d3c:	9b01      	ldr	r3, [sp, #4]
 8008d3e:	ed9f 7a3f 	vldr	s14, [pc, #252]	; 8008e3c <__kernel_rem_pio2f+0x30c>
 8008d42:	4619      	mov	r1, r3
 8008d44:	2900      	cmp	r1, #0
 8008d46:	f280 80af 	bge.w	8008ea8 <__kernel_rem_pio2f+0x378>
 8008d4a:	4618      	mov	r0, r3
 8008d4c:	2400      	movs	r4, #0
 8008d4e:	2800      	cmp	r0, #0
 8008d50:	f2c0 80d0 	blt.w	8008ef4 <__kernel_rem_pio2f+0x3c4>
 8008d54:	a942      	add	r1, sp, #264	; 0x108
 8008d56:	eb01 0680 	add.w	r6, r1, r0, lsl #2
 8008d5a:	4a36      	ldr	r2, [pc, #216]	; (8008e34 <__kernel_rem_pio2f+0x304>)
 8008d5c:	eddf 7a38 	vldr	s15, [pc, #224]	; 8008e40 <__kernel_rem_pio2f+0x310>
 8008d60:	2100      	movs	r1, #0
 8008d62:	e0bb      	b.n	8008edc <__kernel_rem_pio2f+0x3ac>
 8008d64:	f04f 0b02 	mov.w	fp, #2
 8008d68:	e78a      	b.n	8008c80 <__kernel_rem_pio2f+0x150>
 8008d6a:	681a      	ldr	r2, [r3, #0]
 8008d6c:	b948      	cbnz	r0, 8008d82 <__kernel_rem_pio2f+0x252>
 8008d6e:	b11a      	cbz	r2, 8008d78 <__kernel_rem_pio2f+0x248>
 8008d70:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8008d74:	601a      	str	r2, [r3, #0]
 8008d76:	2201      	movs	r2, #1
 8008d78:	f10e 0e01 	add.w	lr, lr, #1
 8008d7c:	3304      	adds	r3, #4
 8008d7e:	4610      	mov	r0, r2
 8008d80:	e784      	b.n	8008c8c <__kernel_rem_pio2f+0x15c>
 8008d82:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 8008d86:	601a      	str	r2, [r3, #0]
 8008d88:	4602      	mov	r2, r0
 8008d8a:	e7f5      	b.n	8008d78 <__kernel_rem_pio2f+0x248>
 8008d8c:	f10a 3cff 	add.w	ip, sl, #4294967295
 8008d90:	ab06      	add	r3, sp, #24
 8008d92:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8008d96:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8008d9a:	aa06      	add	r2, sp, #24
 8008d9c:	f842 302c 	str.w	r3, [r2, ip, lsl #2]
 8008da0:	e77d      	b.n	8008c9e <__kernel_rem_pio2f+0x16e>
 8008da2:	f10a 3cff 	add.w	ip, sl, #4294967295
 8008da6:	ab06      	add	r3, sp, #24
 8008da8:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8008dac:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8008db0:	e7f3      	b.n	8008d9a <__kernel_rem_pio2f+0x26a>
 8008db2:	a906      	add	r1, sp, #24
 8008db4:	f851 002c 	ldr.w	r0, [r1, ip, lsl #2]
 8008db8:	f10c 3cff 	add.w	ip, ip, #4294967295
 8008dbc:	4302      	orrs	r2, r0
 8008dbe:	e7ad      	b.n	8008d1c <__kernel_rem_pio2f+0x1ec>
 8008dc0:	3001      	adds	r0, #1
 8008dc2:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 8008dc6:	2a00      	cmp	r2, #0
 8008dc8:	d0fa      	beq.n	8008dc0 <__kernel_rem_pio2f+0x290>
 8008dca:	a91a      	add	r1, sp, #104	; 0x68
 8008dcc:	eb0a 0208 	add.w	r2, sl, r8
 8008dd0:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 8008dd4:	f10a 0301 	add.w	r3, sl, #1
 8008dd8:	eb0a 0100 	add.w	r1, sl, r0
 8008ddc:	4299      	cmp	r1, r3
 8008dde:	da04      	bge.n	8008dea <__kernel_rem_pio2f+0x2ba>
 8008de0:	468a      	mov	sl, r1
 8008de2:	e70e      	b.n	8008c02 <__kernel_rem_pio2f+0xd2>
 8008de4:	9b04      	ldr	r3, [sp, #16]
 8008de6:	2001      	movs	r0, #1
 8008de8:	e7eb      	b.n	8008dc2 <__kernel_rem_pio2f+0x292>
 8008dea:	9803      	ldr	r0, [sp, #12]
 8008dec:	f8dd c004 	ldr.w	ip, [sp, #4]
 8008df0:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 8008df4:	9000      	str	r0, [sp, #0]
 8008df6:	ee07 0a90 	vmov	s15, r0
 8008dfa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008dfe:	2000      	movs	r0, #0
 8008e00:	ece2 7a01 	vstmia	r2!, {s15}
 8008e04:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8008e40 <__kernel_rem_pio2f+0x310>
 8008e08:	4696      	mov	lr, r2
 8008e0a:	4548      	cmp	r0, r9
 8008e0c:	dd06      	ble.n	8008e1c <__kernel_rem_pio2f+0x2ec>
 8008e0e:	a842      	add	r0, sp, #264	; 0x108
 8008e10:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8008e14:	edc0 7a00 	vstr	s15, [r0]
 8008e18:	3301      	adds	r3, #1
 8008e1a:	e7df      	b.n	8008ddc <__kernel_rem_pio2f+0x2ac>
 8008e1c:	ecfc 6a01 	vldmia	ip!, {s13}
 8008e20:	ed3e 7a01 	vldmdb	lr!, {s14}
 8008e24:	3001      	adds	r0, #1
 8008e26:	eee6 7a87 	vfma.f32	s15, s13, s14
 8008e2a:	e7ee      	b.n	8008e0a <__kernel_rem_pio2f+0x2da>
 8008e2c:	3b01      	subs	r3, #1
 8008e2e:	e779      	b.n	8008d24 <__kernel_rem_pio2f+0x1f4>
 8008e30:	08009734 	.word	0x08009734
 8008e34:	08009708 	.word	0x08009708
 8008e38:	43800000 	.word	0x43800000
 8008e3c:	3b800000 	.word	0x3b800000
 8008e40:	00000000 	.word	0x00000000
 8008e44:	9b02      	ldr	r3, [sp, #8]
 8008e46:	eeb0 0a48 	vmov.f32	s0, s16
 8008e4a:	1b98      	subs	r0, r3, r6
 8008e4c:	f000 f992 	bl	8009174 <scalbnf>
 8008e50:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 8008e38 <__kernel_rem_pio2f+0x308>
 8008e54:	eeb4 0ac7 	vcmpe.f32	s0, s14
 8008e58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008e5c:	db1b      	blt.n	8008e96 <__kernel_rem_pio2f+0x366>
 8008e5e:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 8008e3c <__kernel_rem_pio2f+0x30c>
 8008e62:	ee60 7a27 	vmul.f32	s15, s0, s15
 8008e66:	aa06      	add	r2, sp, #24
 8008e68:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008e6c:	a906      	add	r1, sp, #24
 8008e6e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008e72:	3408      	adds	r4, #8
 8008e74:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8008e78:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008e7c:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8008e80:	ee10 3a10 	vmov	r3, s0
 8008e84:	f842 302a 	str.w	r3, [r2, sl, lsl #2]
 8008e88:	ee17 2a90 	vmov	r2, s15
 8008e8c:	f10a 0301 	add.w	r3, sl, #1
 8008e90:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8008e94:	e74c      	b.n	8008d30 <__kernel_rem_pio2f+0x200>
 8008e96:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8008e9a:	aa06      	add	r2, sp, #24
 8008e9c:	ee10 3a10 	vmov	r3, s0
 8008ea0:	f842 302a 	str.w	r3, [r2, sl, lsl #2]
 8008ea4:	4653      	mov	r3, sl
 8008ea6:	e743      	b.n	8008d30 <__kernel_rem_pio2f+0x200>
 8008ea8:	aa42      	add	r2, sp, #264	; 0x108
 8008eaa:	eb02 0081 	add.w	r0, r2, r1, lsl #2
 8008eae:	aa06      	add	r2, sp, #24
 8008eb0:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 8008eb4:	9201      	str	r2, [sp, #4]
 8008eb6:	ee07 2a90 	vmov	s15, r2
 8008eba:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008ebe:	3901      	subs	r1, #1
 8008ec0:	ee67 7a80 	vmul.f32	s15, s15, s0
 8008ec4:	ee20 0a07 	vmul.f32	s0, s0, s14
 8008ec8:	edc0 7a00 	vstr	s15, [r0]
 8008ecc:	e73a      	b.n	8008d44 <__kernel_rem_pio2f+0x214>
 8008ece:	ecf2 6a01 	vldmia	r2!, {s13}
 8008ed2:	ecb6 7a01 	vldmia	r6!, {s14}
 8008ed6:	eee6 7a87 	vfma.f32	s15, s13, s14
 8008eda:	3101      	adds	r1, #1
 8008edc:	42b9      	cmp	r1, r7
 8008ede:	dc01      	bgt.n	8008ee4 <__kernel_rem_pio2f+0x3b4>
 8008ee0:	428c      	cmp	r4, r1
 8008ee2:	daf4      	bge.n	8008ece <__kernel_rem_pio2f+0x39e>
 8008ee4:	aa56      	add	r2, sp, #344	; 0x158
 8008ee6:	eb02 0184 	add.w	r1, r2, r4, lsl #2
 8008eea:	ed41 7a28 	vstr	s15, [r1, #-160]	; 0xffffff60
 8008eee:	3801      	subs	r0, #1
 8008ef0:	3401      	adds	r4, #1
 8008ef2:	e72c      	b.n	8008d4e <__kernel_rem_pio2f+0x21e>
 8008ef4:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8008ef6:	2a02      	cmp	r2, #2
 8008ef8:	dc0a      	bgt.n	8008f10 <__kernel_rem_pio2f+0x3e0>
 8008efa:	2a00      	cmp	r2, #0
 8008efc:	dc61      	bgt.n	8008fc2 <__kernel_rem_pio2f+0x492>
 8008efe:	d03c      	beq.n	8008f7a <__kernel_rem_pio2f+0x44a>
 8008f00:	9b00      	ldr	r3, [sp, #0]
 8008f02:	f003 0007 	and.w	r0, r3, #7
 8008f06:	b057      	add	sp, #348	; 0x15c
 8008f08:	ecbd 8b04 	vpop	{d8-d9}
 8008f0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008f10:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8008f12:	2a03      	cmp	r2, #3
 8008f14:	d1f4      	bne.n	8008f00 <__kernel_rem_pio2f+0x3d0>
 8008f16:	aa2e      	add	r2, sp, #184	; 0xb8
 8008f18:	eb02 0183 	add.w	r1, r2, r3, lsl #2
 8008f1c:	4608      	mov	r0, r1
 8008f1e:	461c      	mov	r4, r3
 8008f20:	2c00      	cmp	r4, #0
 8008f22:	f1a0 0004 	sub.w	r0, r0, #4
 8008f26:	dc59      	bgt.n	8008fdc <__kernel_rem_pio2f+0x4ac>
 8008f28:	4618      	mov	r0, r3
 8008f2a:	2801      	cmp	r0, #1
 8008f2c:	f1a1 0104 	sub.w	r1, r1, #4
 8008f30:	dc64      	bgt.n	8008ffc <__kernel_rem_pio2f+0x4cc>
 8008f32:	ed5f 7a3d 	vldr	s15, [pc, #-244]	; 8008e40 <__kernel_rem_pio2f+0x310>
 8008f36:	2b01      	cmp	r3, #1
 8008f38:	dc70      	bgt.n	800901c <__kernel_rem_pio2f+0x4ec>
 8008f3a:	eddd 6a2e 	vldr	s13, [sp, #184]	; 0xb8
 8008f3e:	ed9d 7a2f 	vldr	s14, [sp, #188]	; 0xbc
 8008f42:	f1bb 0f00 	cmp.w	fp, #0
 8008f46:	d172      	bne.n	800902e <__kernel_rem_pio2f+0x4fe>
 8008f48:	edc5 6a00 	vstr	s13, [r5]
 8008f4c:	ed85 7a01 	vstr	s14, [r5, #4]
 8008f50:	edc5 7a02 	vstr	s15, [r5, #8]
 8008f54:	e7d4      	b.n	8008f00 <__kernel_rem_pio2f+0x3d0>
 8008f56:	aa2e      	add	r2, sp, #184	; 0xb8
 8008f58:	eb02 0183 	add.w	r1, r2, r3, lsl #2
 8008f5c:	ed91 7a00 	vldr	s14, [r1]
 8008f60:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008f64:	3b01      	subs	r3, #1
 8008f66:	2b00      	cmp	r3, #0
 8008f68:	daf5      	bge.n	8008f56 <__kernel_rem_pio2f+0x426>
 8008f6a:	f1bb 0f00 	cmp.w	fp, #0
 8008f6e:	d001      	beq.n	8008f74 <__kernel_rem_pio2f+0x444>
 8008f70:	eef1 7a67 	vneg.f32	s15, s15
 8008f74:	edc5 7a00 	vstr	s15, [r5]
 8008f78:	e7c2      	b.n	8008f00 <__kernel_rem_pio2f+0x3d0>
 8008f7a:	ed5f 7a4f 	vldr	s15, [pc, #-316]	; 8008e40 <__kernel_rem_pio2f+0x310>
 8008f7e:	e7f2      	b.n	8008f66 <__kernel_rem_pio2f+0x436>
 8008f80:	aa2e      	add	r2, sp, #184	; 0xb8
 8008f82:	eb02 0081 	add.w	r0, r2, r1, lsl #2
 8008f86:	edd0 7a00 	vldr	s15, [r0]
 8008f8a:	ee37 7a27 	vadd.f32	s14, s14, s15
 8008f8e:	3901      	subs	r1, #1
 8008f90:	2900      	cmp	r1, #0
 8008f92:	daf5      	bge.n	8008f80 <__kernel_rem_pio2f+0x450>
 8008f94:	f1bb 0f00 	cmp.w	fp, #0
 8008f98:	d017      	beq.n	8008fca <__kernel_rem_pio2f+0x49a>
 8008f9a:	eef1 7a47 	vneg.f32	s15, s14
 8008f9e:	edc5 7a00 	vstr	s15, [r5]
 8008fa2:	eddd 7a2e 	vldr	s15, [sp, #184]	; 0xb8
 8008fa6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008faa:	a82f      	add	r0, sp, #188	; 0xbc
 8008fac:	2101      	movs	r1, #1
 8008fae:	428b      	cmp	r3, r1
 8008fb0:	da0e      	bge.n	8008fd0 <__kernel_rem_pio2f+0x4a0>
 8008fb2:	f1bb 0f00 	cmp.w	fp, #0
 8008fb6:	d001      	beq.n	8008fbc <__kernel_rem_pio2f+0x48c>
 8008fb8:	eef1 7a67 	vneg.f32	s15, s15
 8008fbc:	edc5 7a01 	vstr	s15, [r5, #4]
 8008fc0:	e79e      	b.n	8008f00 <__kernel_rem_pio2f+0x3d0>
 8008fc2:	ed1f 7a61 	vldr	s14, [pc, #-388]	; 8008e40 <__kernel_rem_pio2f+0x310>
 8008fc6:	4619      	mov	r1, r3
 8008fc8:	e7e2      	b.n	8008f90 <__kernel_rem_pio2f+0x460>
 8008fca:	eef0 7a47 	vmov.f32	s15, s14
 8008fce:	e7e6      	b.n	8008f9e <__kernel_rem_pio2f+0x46e>
 8008fd0:	ecb0 7a01 	vldmia	r0!, {s14}
 8008fd4:	3101      	adds	r1, #1
 8008fd6:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008fda:	e7e8      	b.n	8008fae <__kernel_rem_pio2f+0x47e>
 8008fdc:	edd0 7a00 	vldr	s15, [r0]
 8008fe0:	edd0 6a01 	vldr	s13, [r0, #4]
 8008fe4:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8008fe8:	3c01      	subs	r4, #1
 8008fea:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008fee:	ed80 7a00 	vstr	s14, [r0]
 8008ff2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008ff6:	edc0 7a01 	vstr	s15, [r0, #4]
 8008ffa:	e791      	b.n	8008f20 <__kernel_rem_pio2f+0x3f0>
 8008ffc:	edd1 7a00 	vldr	s15, [r1]
 8009000:	edd1 6a01 	vldr	s13, [r1, #4]
 8009004:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8009008:	3801      	subs	r0, #1
 800900a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800900e:	ed81 7a00 	vstr	s14, [r1]
 8009012:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009016:	edc1 7a01 	vstr	s15, [r1, #4]
 800901a:	e786      	b.n	8008f2a <__kernel_rem_pio2f+0x3fa>
 800901c:	aa2e      	add	r2, sp, #184	; 0xb8
 800901e:	eb02 0183 	add.w	r1, r2, r3, lsl #2
 8009022:	ed91 7a00 	vldr	s14, [r1]
 8009026:	3b01      	subs	r3, #1
 8009028:	ee77 7a87 	vadd.f32	s15, s15, s14
 800902c:	e783      	b.n	8008f36 <__kernel_rem_pio2f+0x406>
 800902e:	eef1 6a66 	vneg.f32	s13, s13
 8009032:	eeb1 7a47 	vneg.f32	s14, s14
 8009036:	edc5 6a00 	vstr	s13, [r5]
 800903a:	ed85 7a01 	vstr	s14, [r5, #4]
 800903e:	eef1 7a67 	vneg.f32	s15, s15
 8009042:	e785      	b.n	8008f50 <__kernel_rem_pio2f+0x420>

08009044 <__kernel_sinf>:
 8009044:	ee10 3a10 	vmov	r3, s0
 8009048:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800904c:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 8009050:	da04      	bge.n	800905c <__kernel_sinf+0x18>
 8009052:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8009056:	ee17 3a90 	vmov	r3, s15
 800905a:	b35b      	cbz	r3, 80090b4 <__kernel_sinf+0x70>
 800905c:	ee20 7a00 	vmul.f32	s14, s0, s0
 8009060:	eddf 7a15 	vldr	s15, [pc, #84]	; 80090b8 <__kernel_sinf+0x74>
 8009064:	ed9f 6a15 	vldr	s12, [pc, #84]	; 80090bc <__kernel_sinf+0x78>
 8009068:	eea7 6a27 	vfma.f32	s12, s14, s15
 800906c:	eddf 7a14 	vldr	s15, [pc, #80]	; 80090c0 <__kernel_sinf+0x7c>
 8009070:	eee6 7a07 	vfma.f32	s15, s12, s14
 8009074:	ed9f 6a13 	vldr	s12, [pc, #76]	; 80090c4 <__kernel_sinf+0x80>
 8009078:	eea7 6a87 	vfma.f32	s12, s15, s14
 800907c:	eddf 7a12 	vldr	s15, [pc, #72]	; 80090c8 <__kernel_sinf+0x84>
 8009080:	ee60 6a07 	vmul.f32	s13, s0, s14
 8009084:	eee6 7a07 	vfma.f32	s15, s12, s14
 8009088:	b930      	cbnz	r0, 8009098 <__kernel_sinf+0x54>
 800908a:	ed9f 6a10 	vldr	s12, [pc, #64]	; 80090cc <__kernel_sinf+0x88>
 800908e:	eea7 6a27 	vfma.f32	s12, s14, s15
 8009092:	eea6 0a26 	vfma.f32	s0, s12, s13
 8009096:	4770      	bx	lr
 8009098:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 800909c:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 80090a0:	eee0 7a86 	vfma.f32	s15, s1, s12
 80090a4:	eed7 0a87 	vfnms.f32	s1, s15, s14
 80090a8:	eddf 7a09 	vldr	s15, [pc, #36]	; 80090d0 <__kernel_sinf+0x8c>
 80090ac:	eee6 0aa7 	vfma.f32	s1, s13, s15
 80090b0:	ee30 0a60 	vsub.f32	s0, s0, s1
 80090b4:	4770      	bx	lr
 80090b6:	bf00      	nop
 80090b8:	2f2ec9d3 	.word	0x2f2ec9d3
 80090bc:	b2d72f34 	.word	0xb2d72f34
 80090c0:	3638ef1b 	.word	0x3638ef1b
 80090c4:	b9500d01 	.word	0xb9500d01
 80090c8:	3c088889 	.word	0x3c088889
 80090cc:	be2aaaab 	.word	0xbe2aaaab
 80090d0:	3e2aaaab 	.word	0x3e2aaaab

080090d4 <fabsf>:
 80090d4:	ee10 3a10 	vmov	r3, s0
 80090d8:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80090dc:	ee00 3a10 	vmov	s0, r3
 80090e0:	4770      	bx	lr
	...

080090e4 <floorf>:
 80090e4:	ee10 3a10 	vmov	r3, s0
 80090e8:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80090ec:	3a7f      	subs	r2, #127	; 0x7f
 80090ee:	2a16      	cmp	r2, #22
 80090f0:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 80090f4:	dc2a      	bgt.n	800914c <floorf+0x68>
 80090f6:	2a00      	cmp	r2, #0
 80090f8:	da11      	bge.n	800911e <floorf+0x3a>
 80090fa:	eddf 7a18 	vldr	s15, [pc, #96]	; 800915c <floorf+0x78>
 80090fe:	ee30 0a27 	vadd.f32	s0, s0, s15
 8009102:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8009106:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800910a:	dd05      	ble.n	8009118 <floorf+0x34>
 800910c:	2b00      	cmp	r3, #0
 800910e:	da23      	bge.n	8009158 <floorf+0x74>
 8009110:	4a13      	ldr	r2, [pc, #76]	; (8009160 <floorf+0x7c>)
 8009112:	2900      	cmp	r1, #0
 8009114:	bf18      	it	ne
 8009116:	4613      	movne	r3, r2
 8009118:	ee00 3a10 	vmov	s0, r3
 800911c:	4770      	bx	lr
 800911e:	4911      	ldr	r1, [pc, #68]	; (8009164 <floorf+0x80>)
 8009120:	4111      	asrs	r1, r2
 8009122:	420b      	tst	r3, r1
 8009124:	d0fa      	beq.n	800911c <floorf+0x38>
 8009126:	eddf 7a0d 	vldr	s15, [pc, #52]	; 800915c <floorf+0x78>
 800912a:	ee30 0a27 	vadd.f32	s0, s0, s15
 800912e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8009132:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009136:	ddef      	ble.n	8009118 <floorf+0x34>
 8009138:	2b00      	cmp	r3, #0
 800913a:	bfbe      	ittt	lt
 800913c:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 8009140:	fa40 f202 	asrlt.w	r2, r0, r2
 8009144:	189b      	addlt	r3, r3, r2
 8009146:	ea23 0301 	bic.w	r3, r3, r1
 800914a:	e7e5      	b.n	8009118 <floorf+0x34>
 800914c:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8009150:	d3e4      	bcc.n	800911c <floorf+0x38>
 8009152:	ee30 0a00 	vadd.f32	s0, s0, s0
 8009156:	4770      	bx	lr
 8009158:	2300      	movs	r3, #0
 800915a:	e7dd      	b.n	8009118 <floorf+0x34>
 800915c:	7149f2ca 	.word	0x7149f2ca
 8009160:	bf800000 	.word	0xbf800000
 8009164:	007fffff 	.word	0x007fffff

08009168 <nanf>:
 8009168:	ed9f 0a01 	vldr	s0, [pc, #4]	; 8009170 <nanf+0x8>
 800916c:	4770      	bx	lr
 800916e:	bf00      	nop
 8009170:	7fc00000 	.word	0x7fc00000

08009174 <scalbnf>:
 8009174:	ee10 3a10 	vmov	r3, s0
 8009178:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 800917c:	d025      	beq.n	80091ca <scalbnf+0x56>
 800917e:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 8009182:	d302      	bcc.n	800918a <scalbnf+0x16>
 8009184:	ee30 0a00 	vadd.f32	s0, s0, s0
 8009188:	4770      	bx	lr
 800918a:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 800918e:	d122      	bne.n	80091d6 <scalbnf+0x62>
 8009190:	4b2a      	ldr	r3, [pc, #168]	; (800923c <scalbnf+0xc8>)
 8009192:	eddf 7a2b 	vldr	s15, [pc, #172]	; 8009240 <scalbnf+0xcc>
 8009196:	4298      	cmp	r0, r3
 8009198:	ee20 0a27 	vmul.f32	s0, s0, s15
 800919c:	db16      	blt.n	80091cc <scalbnf+0x58>
 800919e:	ee10 3a10 	vmov	r3, s0
 80091a2:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80091a6:	3a19      	subs	r2, #25
 80091a8:	4402      	add	r2, r0
 80091aa:	2afe      	cmp	r2, #254	; 0xfe
 80091ac:	dd15      	ble.n	80091da <scalbnf+0x66>
 80091ae:	ee10 3a10 	vmov	r3, s0
 80091b2:	eddf 7a24 	vldr	s15, [pc, #144]	; 8009244 <scalbnf+0xd0>
 80091b6:	eddf 6a24 	vldr	s13, [pc, #144]	; 8009248 <scalbnf+0xd4>
 80091ba:	2b00      	cmp	r3, #0
 80091bc:	eeb0 7a67 	vmov.f32	s14, s15
 80091c0:	bfb8      	it	lt
 80091c2:	eef0 7a66 	vmovlt.f32	s15, s13
 80091c6:	ee27 0a27 	vmul.f32	s0, s14, s15
 80091ca:	4770      	bx	lr
 80091cc:	eddf 7a1f 	vldr	s15, [pc, #124]	; 800924c <scalbnf+0xd8>
 80091d0:	ee20 0a27 	vmul.f32	s0, s0, s15
 80091d4:	4770      	bx	lr
 80091d6:	0dd2      	lsrs	r2, r2, #23
 80091d8:	e7e6      	b.n	80091a8 <scalbnf+0x34>
 80091da:	2a00      	cmp	r2, #0
 80091dc:	dd06      	ble.n	80091ec <scalbnf+0x78>
 80091de:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 80091e2:	ea43 53c2 	orr.w	r3, r3, r2, lsl #23
 80091e6:	ee00 3a10 	vmov	s0, r3
 80091ea:	4770      	bx	lr
 80091ec:	f112 0f16 	cmn.w	r2, #22
 80091f0:	da1a      	bge.n	8009228 <scalbnf+0xb4>
 80091f2:	f24c 3350 	movw	r3, #50000	; 0xc350
 80091f6:	4298      	cmp	r0, r3
 80091f8:	ee10 3a10 	vmov	r3, s0
 80091fc:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8009200:	dd0a      	ble.n	8009218 <scalbnf+0xa4>
 8009202:	ed9f 0a10 	vldr	s0, [pc, #64]	; 8009244 <scalbnf+0xd0>
 8009206:	ed9f 7a10 	vldr	s14, [pc, #64]	; 8009248 <scalbnf+0xd4>
 800920a:	eef0 7a40 	vmov.f32	s15, s0
 800920e:	2b00      	cmp	r3, #0
 8009210:	bf18      	it	ne
 8009212:	eeb0 0a47 	vmovne.f32	s0, s14
 8009216:	e7db      	b.n	80091d0 <scalbnf+0x5c>
 8009218:	ed9f 0a0c 	vldr	s0, [pc, #48]	; 800924c <scalbnf+0xd8>
 800921c:	ed9f 7a0c 	vldr	s14, [pc, #48]	; 8009250 <scalbnf+0xdc>
 8009220:	eef0 7a40 	vmov.f32	s15, s0
 8009224:	2b00      	cmp	r3, #0
 8009226:	e7f3      	b.n	8009210 <scalbnf+0x9c>
 8009228:	3219      	adds	r2, #25
 800922a:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 800922e:	ea43 53c2 	orr.w	r3, r3, r2, lsl #23
 8009232:	eddf 7a08 	vldr	s15, [pc, #32]	; 8009254 <scalbnf+0xe0>
 8009236:	ee07 3a10 	vmov	s14, r3
 800923a:	e7c4      	b.n	80091c6 <scalbnf+0x52>
 800923c:	ffff3cb0 	.word	0xffff3cb0
 8009240:	4c000000 	.word	0x4c000000
 8009244:	7149f2ca 	.word	0x7149f2ca
 8009248:	f149f2ca 	.word	0xf149f2ca
 800924c:	0da24260 	.word	0x0da24260
 8009250:	8da24260 	.word	0x8da24260
 8009254:	33000000 	.word	0x33000000

08009258 <_init>:
 8009258:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800925a:	bf00      	nop
 800925c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800925e:	bc08      	pop	{r3}
 8009260:	469e      	mov	lr, r3
 8009262:	4770      	bx	lr

08009264 <_fini>:
 8009264:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009266:	bf00      	nop
 8009268:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800926a:	bc08      	pop	{r3}
 800926c:	469e      	mov	lr, r3
 800926e:	4770      	bx	lr
